let t,r,s,i,n,a;function o(t){return t&&t.__esModule?t.default:t}function l(t,r){return Object.keys(r).forEach(function(s){"default"===s||"__esModule"===s||Object.prototype.hasOwnProperty.call(t,s)||Object.defineProperty(t,s,{enumerable:!0,get:function(){return r[s]}})}),t}function u(t,r,s,i){Object.defineProperty(t,r,{get:s,set:i,enumerable:!0,configurable:!0})}var d,c,p,h,f,m,_=globalThis,g={},y={},w=_.parcelRequire0ee4;null==w&&((w=function(t){if(t in g)return g[t].exports;if(t in y){var r=y[t];delete y[t];var s={id:t,exports:{}};return g[t]=s,r.call(s.exports,s,s.exports),s.exports}var i=Error("Cannot find module '"+t+"'");throw i.code="MODULE_NOT_FOUND",i}).register=function(t,r){y[t]=r},_.parcelRequire0ee4=w);var b=w.register;b("4MF6S",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0}),t.exports.registerBackend=void 0;var s=w("kriKS");Object.defineProperty(t.exports,"registerBackend",{enumerable:!0,get:function(){return s.registerBackend}})}),b("kriKS",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0}),t.exports.resolveBackendAndExecutionProviders=t.exports.registerBackend=void 0;let s=new Map,i=[];t.exports.registerBackend=(t,r,n)=>{if(r&&"function"==typeof r.init&&"function"==typeof r.createInferenceSessionHandler){let a=s.get(t);if(void 0===a)s.set(t,{backend:r,priority:n});else if(a.priority>n)return;else if(a.priority===n&&a.backend!==r)throw Error(`cannot register backend "${t}" using priority ${n}`);if(n>=0){let r=i.indexOf(t);-1!==r&&i.splice(r,1);for(let r=0;r<i.length;r++)if(s.get(i[r]).priority<=n)return void i.splice(r,0,t);i.push(t)}return}throw TypeError("not a valid backend")};let n=async t=>{let r=s.get(t);if(!r)return"backend not found.";if(r.initialized)return r.backend;{if(r.aborted)return r.error;let s=!!r.initPromise;try{return s||(r.initPromise=r.backend.init(t)),await r.initPromise,r.initialized=!0,r.backend}catch(t){return s||(r.error=`${t}`,r.aborted=!0),r.error}finally{delete r.initPromise}}},a=async t=>{let r,s=t.executionProviders||[],a=s.map(t=>"string"==typeof t?t:t.name),o=0===a.length?i:a,l=[],u=new Set;for(let t of o){let s=await n(t);"string"==typeof s?l.push({name:t,err:s}):(r||(r=s),r===s&&u.add(t))}if(!r)throw Error(`no available backend found. ERR: ${l.map(t=>`[${t.name}] ${t.err}`).join(", ")}`);for(let{name:t,err:r}of l)a.includes(t)&&console.warn(`removing requested execution provider "${t}" from session options because it is not available: ${r}`);let d=s.filter(t=>u.has("string"==typeof t?t:t.name));return[r,new Proxy(t,{get:(t,r)=>"executionProviders"===r?d:Reflect.get(t,r)})]};t.exports.resolveBackendAndExecutionProviders=a}),b("cv9lS",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0}),t.exports.env=void 0;var s=w("43n6d");t.exports.env=s.env}),b("43n6d",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0}),t.exports.env=void 0;var s=w("8tQI4");let i="warning";t.exports.env={wasm:{},webgl:{},webgpu:{},versions:{common:s.version},set logLevel(value){if(void 0===value)return;if("string"!=typeof value||-1===["verbose","info","warning","error","fatal"].indexOf(value))throw Error(`Unsupported logging level: ${value}`);i=value},get logLevel(){return i}},Object.defineProperty(t.exports.env,"logLevel",{enumerable:!0})}),b("8tQI4",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0}),t.exports.version=void 0,t.exports.version="1.21.0"}),b("59Ij8",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0}),t.exports.InferenceSession=void 0;var s=w("anThv");t.exports.InferenceSession=s.InferenceSession}),b("anThv",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0}),t.exports.InferenceSession=void 0;var s=w("kriKS"),i=w("1KuHI"),n=w("b9EKL");class a{constructor(t){this.handler=t}async run(t,r,s){(0,n.TRACE_FUNC_BEGIN)();let a={},o={};if("object"!=typeof t||null===t||t instanceof i.Tensor||Array.isArray(t))throw TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let l=!0;if("object"==typeof r){if(null===r)throw TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof i.Tensor)throw TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(0===r.length)throw TypeError("'fetches' cannot be an empty array.");for(let t of(l=!1,r)){if("string"!=typeof t)throw TypeError("'fetches' must be a string array or an object.");if(-1===this.outputNames.indexOf(t))throw RangeError(`'fetches' contains invalid output name: ${t}.`);a[t]=null}if("object"==typeof s&&null!==s)o=s;else if(void 0!==s)throw TypeError("'options' must be an object.")}else{let t=!1,n=Object.getOwnPropertyNames(r);for(let s of this.outputNames)if(-1!==n.indexOf(s)){let n=r[s];(null===n||n instanceof i.Tensor)&&(t=!0,l=!1,a[s]=n)}if(t){if("object"==typeof s&&null!==s)o=s;else if(void 0!==s)throw TypeError("'options' must be an object.")}else o=r}}else if(void 0!==r)throw TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let r of this.inputNames)if(void 0===t[r])throw Error(`input '${r}' is missing in 'feeds'.`);if(l)for(let t of this.outputNames)a[t]=null;let u=await this.handler.run(t,a,o),d={};for(let t in u)if(Object.hasOwnProperty.call(u,t)){let r=u[t];r instanceof i.Tensor?d[t]=r:d[t]=new i.Tensor(r.type,r.data,r.dims)}return(0,n.TRACE_FUNC_END)(),d}async release(){return this.handler.dispose()}static async create(t,r,i,o){let l;(0,n.TRACE_FUNC_BEGIN)();let u={};if("string"==typeof t){if(l=t,"object"==typeof r&&null!==r)u=r;else if(void 0!==r)throw TypeError("'options' must be an object.")}else if(t instanceof Uint8Array){if(l=t,"object"==typeof r&&null!==r)u=r;else if(void 0!==r)throw TypeError("'options' must be an object.")}else if(t instanceof ArrayBuffer||"undefined"!=typeof SharedArrayBuffer&&t instanceof SharedArrayBuffer){let s=0,n=t.byteLength;if("object"==typeof r&&null!==r)u=r;else if("number"==typeof r){if(!Number.isSafeInteger(s=r))throw RangeError("'byteOffset' must be an integer.");if(s<0||s>=t.byteLength)throw RangeError(`'byteOffset' is out of range [0, ${t.byteLength}).`);if(n=t.byteLength-s,"number"==typeof i){if(!Number.isSafeInteger(n=i))throw RangeError("'byteLength' must be an integer.");if(n<=0||s+n>t.byteLength)throw RangeError(`'byteLength' is out of range (0, ${t.byteLength-s}].`);if("object"==typeof o&&null!==o)u=o;else if(void 0!==o)throw TypeError("'options' must be an object.")}else if(void 0!==i)throw TypeError("'byteLength' must be a number.")}else if(void 0!==r)throw TypeError("'options' must be an object.");l=new Uint8Array(t,s,n)}else throw TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[d,c]=await (0,s.resolveBackendAndExecutionProviders)(u),p=await d.createInferenceSessionHandler(l,c);return(0,n.TRACE_FUNC_END)(),new a(p)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}t.exports.InferenceSession=a}),b("1KuHI",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0}),t.exports.Tensor=void 0;var s=w("br6PG");t.exports.Tensor=s.Tensor}),b("br6PG",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0}),t.exports.Tensor=void 0;var s=w("3J7JL"),i=w("fvyM9"),n=w("5yLHs"),a=w("ck2YR");t.exports.Tensor=class{constructor(t,r,s){let i,o;if((0,n.checkTypedArray)(),"object"==typeof t&&"location"in t)switch(this.dataLocation=t.location,i=t.type,o=t.dims,t.location){case"cpu-pinned":{let r=n.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(i);if(!r)throw TypeError(`unsupported type "${i}" to create tensor from pinned buffer`);if(!(t.data instanceof r))throw TypeError(`buffer should be of type ${r.name}`);this.cpuData=t.data;break}case"texture":if("float32"!==i)throw TypeError(`unsupported type "${i}" to create tensor from texture`);this.gpuTextureData=t.texture,this.downloader=t.download,this.disposer=t.dispose;break;case"gpu-buffer":if("float32"!==i&&"float16"!==i&&"int32"!==i&&"int64"!==i&&"uint32"!==i&&"uint8"!==i&&"bool"!==i&&"uint4"!==i&&"int4"!==i)throw TypeError(`unsupported type "${i}" to create tensor from gpu buffer`);this.gpuBufferData=t.gpuBuffer,this.downloader=t.download,this.disposer=t.dispose;break;case"ml-tensor":if("float32"!==i&&"float16"!==i&&"int32"!==i&&"int64"!==i&&"uint32"!==i&&"uint64"!==i&&"int8"!==i&&"uint8"!==i&&"bool"!==i&&"uint4"!==i&&"int4"!==i)throw TypeError(`unsupported type "${i}" to create tensor from MLTensor`);this.mlTensorData=t.mlTensor,this.downloader=t.download,this.disposer=t.dispose;break;default:throw Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,l;if("string"==typeof t)if(i=t,l=s,"string"===t){if(!Array.isArray(r))throw TypeError("A string tensor's data must be a string array.");a=r}else{let s=n.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(t);if(void 0===s)throw TypeError(`Unsupported tensor type: ${t}.`);if(Array.isArray(r))if("float16"===t&&s===Uint16Array||"uint4"===t||"int4"===t)throw TypeError(`Creating a ${t} tensor from number array is not supported. Please use ${s.name} as data.`);else a="uint64"===t||"int64"===t?s.from(r,BigInt):s.from(r);else if(r instanceof s)a=r;else if(r instanceof Uint8ClampedArray)if("uint8"===t)a=Uint8Array.from(r);else throw TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else if("float16"===t&&r instanceof Uint16Array&&s!==Uint16Array)a=new globalThis.Float16Array(r.buffer,r.byteOffset,r.length);else throw TypeError(`A ${i} tensor's data must be type of ${s}`)}else if(l=r,Array.isArray(t)){if(0===t.length)throw TypeError("Tensor type cannot be inferred from an empty array.");let r=typeof t[0];if("string"===r)i="string",a=t;else if("boolean"===r)i="bool",a=Uint8Array.from(t);else throw TypeError(`Invalid element type of data array: ${r}.`)}else if(t instanceof Uint8ClampedArray)i="uint8",a=Uint8Array.from(t);else{let r=n.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(t.constructor);if(void 0===r)throw TypeError(`Unsupported type for tensor data: ${t.constructor}.`);i=r,a=t}if(void 0===l)l=[a.length];else if(!Array.isArray(l))throw TypeError("A tensor's dims must be a number array");o=l,this.cpuData=a,this.dataLocation="cpu"}let l=(0,a.calculateSize)(o);if(this.cpuData&&l!==this.cpuData.length)if(("uint4"===i||"int4"===i)&&Math.ceil(l/2)===this.cpuData.length);else throw Error(`Tensor's size(${l}) does not match data length(${this.cpuData.length}).`);this.type=i,this.dims=o,this.size=l}static async fromImage(t,r){return(0,i.tensorFromImage)(t,r)}static fromTexture(t,r){return(0,i.tensorFromTexture)(t,r)}static fromGpuBuffer(t,r){return(0,i.tensorFromGpuBuffer)(t,r)}static fromMLTensor(t,r){return(0,i.tensorFromMLTensor)(t,r)}static fromPinnedBuffer(t,r,s){return(0,i.tensorFromPinnedBuffer)(t,r,s)}toDataURL(t){return(0,s.tensorToDataURL)(this,t)}toImageData(t){return(0,s.tensorToImageData)(this,t)}get data(){if(this.ensureValid(),!this.cpuData)throw Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(t){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":if(!this.downloader)throw Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let r=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=r,t&&this.disposer&&(this.disposer(),this.disposer=void 0),r}finally{this.isDownloading=!1}default:throw Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if("none"===this.dataLocation)throw Error("The tensor is disposed.")}reshape(t){if(this.ensureValid(),this.downloader||this.disposer)throw Error("Cannot reshape a tensor that owns GPU resource.");return(0,a.tensorReshape)(this,t)}}}),b("3J7JL",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0}),t.exports.tensorToImageData=t.exports.tensorToDataURL=void 0,t.exports.tensorToDataURL=(t,r)=>{let s="undefined"!=typeof document?document.createElement("canvas"):new OffscreenCanvas(1,1);s.width=t.dims[3],s.height=t.dims[2];let i=s.getContext("2d");if(null!=i){let n,a,o,l;r?.tensorLayout!==void 0&&"NHWC"===r.tensorLayout?(n=t.dims[2],a=t.dims[3]):(n=t.dims[3],a=t.dims[2]);let u=r?.format!==void 0?r.format:"RGB",d=r?.norm;void 0===d||void 0===d.mean?o=[255,255,255,255]:"number"==typeof d.mean?o=[d.mean,d.mean,d.mean,d.mean]:(o=[d.mean[0],d.mean[1],d.mean[2],0],void 0!==d.mean[3]&&(o[3]=d.mean[3])),void 0===d||void 0===d.bias?l=[0,0,0,0]:"number"==typeof d.bias?l=[d.bias,d.bias,d.bias,d.bias]:(l=[d.bias[0],d.bias[1],d.bias[2],0],void 0!==d.bias[3]&&(l[3]=d.bias[3]));let c=a*n,p=0,h=c,f=2*c,m=-1;"RGBA"===u?(p=0,h=c,f=2*c,m=3*c):"RGB"===u?(p=0,h=c,f=2*c):"RBG"===u&&(p=0,f=c,h=2*c);for(let r=0;r<a;r++)for(let s=0;s<n;s++){let n=(t.data[p++]-l[0])*o[0],a=(t.data[h++]-l[1])*o[1];i.fillStyle="rgba("+n+","+a+","+(t.data[f++]-l[2])*o[2]+","+(-1===m?255:(t.data[m++]-l[3])*o[3])+")",i.fillRect(s,r,1,1)}if("toDataURL"in s)return s.toDataURL();throw Error("toDataURL is not supported")}throw Error("Can not access image data")},t.exports.tensorToImageData=(t,r)=>{let s,i="undefined"!=typeof document?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");if(null!=i){let n,a,o,l,u;r?.tensorLayout!==void 0&&"NHWC"===r.tensorLayout?(n=t.dims[2],a=t.dims[1],o=t.dims[3]):(n=t.dims[3],a=t.dims[2],o=t.dims[1]);let d=void 0!==r&&void 0!==r.format?r.format:"RGB",c=r?.norm;void 0===c||void 0===c.mean?l=[255,255,255,255]:"number"==typeof c.mean?l=[c.mean,c.mean,c.mean,c.mean]:(l=[c.mean[0],c.mean[1],c.mean[2],255],void 0!==c.mean[3]&&(l[3]=c.mean[3])),void 0===c||void 0===c.bias?u=[0,0,0,0]:"number"==typeof c.bias?u=[c.bias,c.bias,c.bias,c.bias]:(u=[c.bias[0],c.bias[1],c.bias[2],0],void 0!==c.bias[3]&&(u[3]=c.bias[3]));let p=a*n;if(void 0!==r&&(void 0!==r.format&&4===o&&"RGBA"!==r.format||3===o&&"RGB"!==r.format&&"BGR"!==r.format))throw Error("Tensor format doesn't match input tensor dims");let h=0,f=1,m=2,_=3,g=0,y=p,w=2*p,b=-1;"RGBA"===d?(g=0,y=p,w=2*p,b=3*p):"RGB"===d?(g=0,y=p,w=2*p):"RBG"===d&&(g=0,w=p,y=2*p),s=i.createImageData(n,a);for(let r=0;r<a*n;h+=4,f+=4,m+=4,_+=4,r++)s.data[h]=(t.data[g++]-u[0])*l[0],s.data[f]=(t.data[y++]-u[1])*l[1],s.data[m]=(t.data[w++]-u[2])*l[2],s.data[_]=-1===b?255:(t.data[b++]-u[3])*l[3]}else throw Error("Can not access image data");return s}}),b("fvyM9",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0}),t.exports.tensorFromPinnedBuffer=t.exports.tensorFromMLTensor=t.exports.tensorFromGpuBuffer=t.exports.tensorFromTexture=t.exports.tensorFromImage=t.exports.bufferToTensor=void 0;var s=w("br6PG");t.exports.bufferToTensor=(t,r)=>{let i,n;if(void 0===t)throw Error("Image buffer must be defined");if(void 0===r.height||void 0===r.width)throw Error("Image height and width must be defined");if("NHWC"===r.tensorLayout)throw Error("NHWC Tensor layout is not supported yet");let{height:a,width:o}=r,l=r.norm??{mean:255,bias:0};i="number"==typeof l.mean?[l.mean,l.mean,l.mean,l.mean]:[l.mean[0],l.mean[1],l.mean[2],l.mean[3]??255],n="number"==typeof l.bias?[l.bias,l.bias,l.bias,l.bias]:[l.bias[0],l.bias[1],l.bias[2],l.bias[3]??0];let u=void 0!==r.format?r.format:"RGBA",d=void 0!==r.tensorFormat&&void 0!==r.tensorFormat?r.tensorFormat:"RGB",c=a*o,p=new Float32Array("RGBA"===d?4*c:3*c),h=4,f=0,m=1,_=2,g=3,y=0,w=c,b=2*c,x=-1;"RGB"===u&&(h=3,f=0,m=1,_=2,g=-1),"RGBA"===d?x=3*c:"RBG"===d?(y=0,b=c,w=2*c):"BGR"===d&&(b=0,w=c,y=2*c);for(let r=0;r<c;r++,f+=h,_+=h,m+=h,g+=h)p[y++]=(t[f]+n[0])/i[0],p[w++]=(t[m]+n[1])/i[1],p[b++]=(t[_]+n[2])/i[2],-1!==x&&-1!==g&&(p[x++]=(t[g]+n[3])/i[3]);return"RGBA"===d?new s.Tensor("float32",p,[1,4,a,o]):new s.Tensor("float32",p,[1,3,a,o])};let i=async(r,s)=>{let i,n="undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement,a="undefined"!=typeof ImageData&&r instanceof ImageData,o="undefined"!=typeof ImageBitmap&&r instanceof ImageBitmap,l="string"==typeof r,u=s??{},d=()=>{if("undefined"!=typeof document)return document.createElement("canvas");if("undefined"!=typeof OffscreenCanvas)return new OffscreenCanvas(1,1);throw Error("Canvas is not supported")},c=t=>"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||t instanceof OffscreenCanvas?t.getContext("2d"):null;if(n){let t=d();t.width=r.width,t.height=r.height;let n=c(t);if(null!=n){let t=r.height,a=r.width;if(void 0!==s&&void 0!==s.resizedHeight&&void 0!==s.resizedWidth&&(t=s.resizedHeight,a=s.resizedWidth),void 0!==s){if(u=s,void 0!==s.tensorFormat)throw Error("Image input config format must be RGBA for HTMLImageElement");u.tensorFormat="RGBA",u.height=t,u.width=a}else u.tensorFormat="RGBA",u.height=t,u.width=a;n.drawImage(r,0,0),i=n.getImageData(0,0,a,t).data}else throw Error("Can not access image data")}else if(a){let t,n;if(void 0!==s&&void 0!==s.resizedWidth&&void 0!==s.resizedHeight?(t=s.resizedHeight,n=s.resizedWidth):(t=r.height,n=r.width),void 0!==s&&(u=s),u.format="RGBA",u.height=t,u.width=n,void 0!==s){let s=d();s.width=n,s.height=t;let a=c(s);if(null!=a)a.putImageData(r,0,0),i=a.getImageData(0,0,n,t).data;else throw Error("Can not access image data")}else i=r.data}else if(o){if(void 0===s)throw Error("Please provide image config with format for Imagebitmap");let n=d();n.width=r.width,n.height=r.height;let a=c(n);if(null!=a){let s=r.height,n=r.width;return a.drawImage(r,0,0,n,s),i=a.getImageData(0,0,n,s).data,u.height=s,u.width=n,(0,t.exports.bufferToTensor)(i,u)}throw Error("Can not access image data")}else if(l)return new Promise((s,i)=>{let n=d(),a=c(n);if(!r||!a)return i();let o=new Image;o.crossOrigin="Anonymous",o.src=r,o.onload=()=>{n.width=o.width,n.height=o.height,a.drawImage(o,0,0,n.width,n.height);let r=a.getImageData(0,0,n.width,n.height);u.height=n.height,u.width=n.width,s((0,t.exports.bufferToTensor)(r.data,u))}});else throw Error("Input data provided is not supported - aborted tensor creation");if(void 0!==i)return(0,t.exports.bufferToTensor)(i,u);throw Error("Input data provided is not supported - aborted tensor creation")};t.exports.tensorFromImage=i,t.exports.tensorFromTexture=(t,r)=>{let{width:i,height:n,download:a,dispose:o}=r;return new s.Tensor({location:"texture",type:"float32",texture:t,dims:[1,n,i,4],download:a,dispose:o})},t.exports.tensorFromGpuBuffer=(t,r)=>{let{dataType:i,dims:n,download:a,dispose:o}=r;return new s.Tensor({location:"gpu-buffer",type:i??"float32",gpuBuffer:t,dims:n,download:a,dispose:o})},t.exports.tensorFromMLTensor=(t,r)=>{let{dataType:i,dims:n,download:a,dispose:o}=r;return new s.Tensor({location:"ml-tensor",type:i??"float32",mlTensor:t,dims:n,download:a,dispose:o})},t.exports.tensorFromPinnedBuffer=(t,r,i)=>new s.Tensor({location:"cpu-pinned",type:t,data:r,dims:i??[r.length]})}),b("5yLHs",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0}),t.exports.checkTypedArray=t.exports.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP=t.exports.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP=void 0,t.exports.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),t.exports.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let s=!1;t.exports.checkTypedArray=()=>{if(!s){s=!0;let r="undefined"!=typeof BigInt64Array&&BigInt64Array.from,i="undefined"!=typeof BigUint64Array&&BigUint64Array.from,n=globalThis.Float16Array,a=void 0!==n&&n.from;r&&(t.exports.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set("int64",BigInt64Array),t.exports.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigInt64Array,"int64")),i&&(t.exports.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set("uint64",BigUint64Array),t.exports.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigUint64Array,"uint64")),a?(t.exports.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set("float16",n),t.exports.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(n,"float16")):t.exports.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set("float16",Uint16Array)}}}),b("ck2YR",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0}),t.exports.tensorReshape=t.exports.calculateSize=void 0;var s=w("br6PG");t.exports.calculateSize=t=>{let r=1;for(let s=0;s<t.length;s++){let i=t[s];if("number"!=typeof i||!Number.isSafeInteger(i))throw TypeError(`dims[${s}] must be an integer, got: ${i}`);if(i<0)throw RangeError(`dims[${s}] must be a non-negative integer, got: ${i}`);r*=i}return r},t.exports.tensorReshape=(t,r)=>{switch(t.location){case"cpu":return new s.Tensor(t.type,t.data,r);case"cpu-pinned":return new s.Tensor({location:"cpu-pinned",data:t.data,type:t.type,dims:r});case"texture":return new s.Tensor({location:"texture",texture:t.texture,type:t.type,dims:r});case"gpu-buffer":return new s.Tensor({location:"gpu-buffer",gpuBuffer:t.gpuBuffer,type:t.type,dims:r});case"ml-tensor":return new s.Tensor({location:"ml-tensor",mlTensor:t.mlTensor,type:t.type,dims:r});default:throw Error(`tensorReshape: tensor location ${t.location} is not supported`)}}}),b("b9EKL",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0}),t.exports.TRACE_FUNC_END=t.exports.TRACE_FUNC_BEGIN=t.exports.TRACE=void 0;var s=w("43n6d");t.exports.TRACE=(t,r)=>{(void 0===s.env.trace?s.env.wasm.trace:s.env.trace)&&console.timeStamp(`${t}::ORT::${r}`)};let i=(r,s)=>{let i=Error().stack?.split(/\r\n|\r|\n/g)||[],n=!1;for(let a=0;a<i.length;a++){if(n&&!i[a].includes("TRACE_FUNC")){let n=`FUNC_${r}::${i[a].trim().split(" ")[1]}`;s&&(n+=`::${s}`),(0,t.exports.TRACE)("CPU",n);return}i[a].includes("TRACE_FUNC")&&(n=!0)}};t.exports.TRACE_FUNC_BEGIN=t=>{(void 0===s.env.trace?s.env.wasm.trace:s.env.trace)&&i("BEGIN",t)},t.exports.TRACE_FUNC_END=t=>{(void 0===s.env.trace?s.env.wasm.trace:s.env.trace)&&i("END",t)}}),b("57F84",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0})}),b("2cmqa",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0})}),b("9Vy8l",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0})}),b("keTjw",function(t,r){Object.defineProperty(t.exports,"__esModule",{value:!0})});var x={},v=Object.assign(Object.create(null),{url:"file:///node_modules/.pnpm/@huggingface+transformers@3.5.2/node_modules/@huggingface/transformers/src/env.js"}),$={},k=$={};function E(){throw Error("setTimeout has not been defined")}function S(){throw Error("clearTimeout has not been defined")}try{d="function"==typeof setTimeout?setTimeout:E}catch(t){d=E}try{c="function"==typeof clearTimeout?clearTimeout:S}catch(t){c=S}function T(t){if(d===setTimeout)return setTimeout(t,0);if((d===E||!d)&&setTimeout)return d=setTimeout,setTimeout(t,0);try{return d(t,0)}catch(r){try{return d.call(null,t,0)}catch(r){return d.call(this,t,0)}}}var I=[],z=!1,A=-1;function C(){z&&p&&(z=!1,p.length?I=p.concat(I):A=-1,I.length&&M())}function M(){if(!z){var t=T(C);z=!0;for(var r=I.length;r;){for(p=I,I=[];++A<r;)p&&p[A].run();A=-1,r=I.length}p=null,z=!1,function(t){if(c===clearTimeout)return clearTimeout(t);if((c===S||!c)&&clearTimeout)return c=clearTimeout,clearTimeout(t);try{c(t)}catch(r){try{return c.call(null,t)}catch(r){return c.call(this,t)}}}(t)}}function O(t,r){this.fun=t,this.array=r}function B(){}k.nextTick=function(t){var r=Array(arguments.length-1);if(arguments.length>1)for(var s=1;s<arguments.length;s++)r[s-1]=arguments[s];I.push(new O(t,r)),1!==I.length||z||T(M)},O.prototype.run=function(){this.fun.apply(null,this.array)},k.title="browser",k.browser=!0,k.env={},k.argv=[],k.version="",k.versions={},k.on=B,k.addListener=B,k.once=B,k.off=B,k.removeListener=B,k.removeAllListeners=B,k.emit=B,k.prependListener=B,k.prependOnceListener=B,k.listeners=function(t){return[]},k.binding=function(t){throw Error("process.binding is not supported")},k.cwd=function(){return"/"},k.chdir=function(t){throw Error("process.chdir is not supported")},k.umask=function(){return 0};var R="node_modules/.pnpm/@huggingface+transformers@3.5.2/node_modules/@huggingface/transformers/src";const P="undefined"!=typeof window&&void 0!==window.document,L="undefined"!=typeof self&&self.constructor?.name==="DedicatedWorkerGlobalScope",D="undefined"!=typeof self&&"caches"in self,U="undefined"!=typeof navigator&&"gpu"in navigator,N="undefined"!=typeof navigator&&"ml"in navigator,F=!X(o(x)),q=!X(o(x)),V=Object.freeze({IS_BROWSER_ENV:P,IS_WEBWORKER_ENV:L,IS_WEB_CACHE_AVAILABLE:D,IS_WEBGPU_AVAILABLE:U,IS_WEBNN_AVAILABLE:N,IS_PROCESS_AVAILABLE:!1,IS_NODE_ENV:!1,IS_FS_AVAILABLE:F,IS_PATH_AVAILABLE:q}),j=F&&q;let G="./";if(j){let t=Object(v).url;t?G=o(x).dirname(o(x).dirname(o(x).fileURLToPath(t))):void 0!==R&&(G=o(x).dirname(R))}const W=j?o(x).join(G,"/.cache/"):null,H="/models/",K={version:"3.5.2",backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(P||L),localModelPath:j?o(x).join(G,H):H,useFS:F,useBrowserCache:D,useFSCache:F,cacheDir:W,useCustomCache:!1,customCache:null};function X(t){return 0===Object.keys(t).length}const Y=class{constructor(){let t=function(...r){return t._call(...r)};return Object.setPrototypeOf(t,new.target.prototype)}_call(...t){throw Error("Must implement _call method in subclass")}};function Q(t){return null==t||-1===t}function Z(t){let r=[],s=t;for(;Array.isArray(s);)r.push(s.length),s=s[0];return r}function J(...t){return Array.prototype.concat.apply([],t)}function ee(t,r){return Math.abs((t+r)%(2*r)-r)}function et(t,r){let s=URL.createObjectURL(r),i=document.createElement("a");i.href=s,i.download=t,i.click(),i.remove(),URL.revokeObjectURL(s)}function er(t,r){return Object.assign({},...r.map(r=>{if(void 0!==t[r])return{[r]:t[r]}}))}const es={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class ei{constructor(t){if(this.filePath=t,this.headers=new Headers,this.exists=o(x).existsSync(t),this.exists){this.status=200,this.statusText="OK";let r=o(x).statSync(t);this.headers.set("content-length",r.size.toString()),this.updateContentType();let s=o(x).createReadStream(t);this.body=new ReadableStream({start(t){s.on("data",r=>t.enqueue(r)),s.on("end",()=>t.close()),s.on("error",r=>t.error(r))},cancel(){s.destroy()}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){let t=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",es[t]??"application/octet-stream")}clone(){let t=new ei(this.filePath);return t.exists=this.exists,t.status=this.status,t.statusText=this.statusText,t.headers=new Headers(this.headers),t}async arrayBuffer(){return(await o(x).promises.readFile(this.filePath)).buffer}async blob(){return new Blob([await o(x).promises.readFile(this.filePath)],{type:this.headers.get("content-type")})}async text(){return await o(x).promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function en(t,r=null,s=null){let i;try{i=new URL(t)}catch(t){return!1}return(!r||!!r.includes(i.protocol))&&(!s||!!s.includes(i.hostname))}const ea=/^(\b[\w\-.]+\b\/)?\b[\w\-.]{1,96}\b$/;async function eo(t){return K.useFS&&!en(t,["http:","https:","blob:"])?new ei(t instanceof URL?"file:"===t.protocol?t.pathname:t.toString():t):fetch(t)}const el={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};class eu{constructor(t){this.path=t}async match(t){let r=new ei(o(x).join(this.path,t));return r.exists?r:void 0}async put(t,r,s){let i=o(x).join(this.path,t);try{let t=r.headers.get("Content-Length"),n=parseInt(t??"0"),a=0;await o(x).promises.mkdir(o(x).dirname(i),{recursive:!0});let l=o(x).createWriteStream(i),u=r.body.getReader();for(;;){let{done:t,value:r}=await u.read();if(t)break;await new Promise((t,s)=>{l.write(r,r=>{if(r)return void s(r);t()})}),a+=r.length;let i=n?a/n*100:0;s?.({progress:i,loaded:a,total:n})}l.close()}catch(t){try{await o(x).promises.unlink(i)}catch{}throw t}}}async function ed(t,...r){for(let s of r)try{let r=await t.match(s);if(r)return r}catch(t){continue}}async function ec(t,r,s=!0,i={},n=!1){let a,o,l,u;if(!K.allowLocalModels){if(i.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");else if(!K.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}if(y=i.progress_callback,w={status:"initiate",name:t,file:r},y&&y(w),!a&&K.useCustomCache){if(!K.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!K.customCache.match||!K.customCache.put)throw Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");a=K.customCache}if(!a&&K.useBrowserCache){if("undefined"==typeof caches)throw Error("Browser cache is not available in this environment.");try{a=await caches.open("transformers-cache")}catch(t){console.warn("An error occurred while opening the browser cache:",t)}}if(!a&&K.useFSCache){if(!V.IS_FS_AVAILABLE)throw Error("File System Cache is not available in this environment.");a=new eu(i.cache_dir??K.cacheDir)}let d=i.revision??"main",c=ef(t,r),p=!(!ea.test(t)||t.includes("..")||t.includes("--")||t.endsWith(".git")||t.endsWith(".ipynb")),h=p?ef(K.localModelPath,c):c,f=ef(K.remoteHost,K.remotePathTemplate.replaceAll("{model}",t).replaceAll("{revision}",encodeURIComponent(d)),r),m=a instanceof eu?"main"===d?c:ef(t,d,r):f,_=!1;a&&(l=await ed(a,h,m));let g=void 0!==l;if(void 0===l){if(K.allowLocalModels)if(en(c,["http:","https:"])){if(i.local_files_only)throw Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${c}.`);else if(!K.allowRemoteModels)throw Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${c}.`)}else try{l=await eo(h),o=h}catch(t){console.warn(`Unable to load from local path "${h}": "${t}"`)}if(void 0===l||404===l.status){if(i.local_files_only||!K.allowRemoteModels)if(!s)return null;else throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${h}".`);if(!p)throw Error(`Local file missing at "${h}" and download aborted due to invalid model ID "${t}".`);if(200!==(l=await eo(f)).status){var y,w,b,x,v,$,k,E,S=l.status;if(!s)return null;let t=el[S]??`Error (${S}) occurred while trying to load file`;throw Error(`${t}: "${f}".`)}o=m}_=a&&"undefined"!=typeof Response&&l instanceof Response&&200===l.status}if(b=i.progress_callback,x={status:"download",name:t,file:r},b&&b(x),!(V.IS_NODE_ENV&&n)){let s;i.progress_callback?g&&"undefined"!=typeof navigator&&/firefox/i.test(navigator.userAgent)?(s=new Uint8Array(await l.arrayBuffer()),v=i.progress_callback,$={status:"progress",name:t,file:r,progress:100,loaded:s.length,total:s.length},v&&v($)):s=await eh(l,s=>{var n,a;n=i.progress_callback,a={status:"progress",name:t,file:r,...s},n&&n(a)}):s=new Uint8Array(await l.arrayBuffer()),u=s}if(_&&o&&await a.match(o)===void 0&&(u?await a.put(o,new Response(u,{headers:l.headers})).catch(t=>{console.warn(`Unable to add response to browser cache: ${t}.`)}):await a.put(o,l,i.progress_callback)),k=i.progress_callback,E={status:"done",name:t,file:r},k&&k(E),u){if(!V.IS_NODE_ENV&&n)throw Error("Cannot return path in a browser environment.");return u}if(l instanceof ei)return l.filePath;let T=await a?.match(o);if(T instanceof ei)return T.filePath;if(T instanceof Response)return new Uint8Array(await T.arrayBuffer());if("string"==typeof T)return T;throw Error("Unable to get model file path or buffer.")}async function ep(t,r,s=!0,i={}){let n=await ec(t,r,s,i,!1);return null===n?{}:JSON.parse(new TextDecoder("utf-8").decode(n))}async function eh(t,r){let s=t.headers.get("Content-Length");null===s&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let i=parseInt(s??"0"),n=new Uint8Array(i),a=0,o=t.body.getReader();async function l(){let{done:t,value:s}=await o.read();if(t)return;let u=a+s.length;if(u>i){let t=new Uint8Array(i=u);t.set(n),n=t}return n.set(s,a),r({progress:(a=u)/i*100,loaded:a,total:i}),l()}return await l(),n}function ef(...t){return(t=t.map((r,s)=>(s&&(r=r.replace(RegExp("^/"),"")),s!==t.length-1&&(r=r.replace(RegExp("/$"),"")),r))).join("/")}function em(t){let r=eg(t)[0],s=t.map(t=>Math.exp(t-r)),i=s.reduce((t,r)=>t+r,0);return s.map(t=>t/i)}function e_(t){if(0===t.length)throw Error("Array must not be empty");let r=t[0],s=0;for(let i=1;i<t.length;++i)t[i]<r&&(r=t[i],s=i);return[r,s]}function eg(t){if(0===t.length)throw Error("Array must not be empty");let r=t[0],s=0;for(let i=1;i<t.length;++i)t[i]>r&&(r=t[i],s=i);return[r,s]}function ey(t){return t>0&&(t&t-1)==0}class ew{constructor(t){if(this.size=0|t,this.size<=1||!ey(this.size))throw Error("FFT size must be a power of two larger than 1");this._csize=t<<1,this.table=new Float64Array(2*this.size);for(let t=0;t<this.table.length;t+=2){let r=Math.PI*t/this.size;this.table[t]=Math.cos(r),this.table[t+1]=-Math.sin(r)}let r=0;for(let t=1;this.size>t;t<<=1)++r;this._width=r%2==0?r-1:r,this._bitrev=new Int32Array(1<<this._width);for(let t=0;t<this._bitrev.length;++t){this._bitrev[t]=0;for(let r=0;r<this._width;r+=2){let s=this._width-r-2;this._bitrev[t]|=(t>>>r&3)<<s}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(t,r){let s=r||Array(t.length>>>1);for(let r=0;r<t.length;r+=2)s[r>>>1]=t[r];return s}toComplexArray(t,r){let s=r||this.createComplexArray();for(let r=0;r<s.length;r+=2)s[r]=t[r>>>1],s[r+1]=0;return s}transform(t,r){if(t===r)throw Error("Input and output buffers must be different");this._transform4(t,r,1)}realTransform(t,r){if(t===r)throw Error("Input and output buffers must be different");this._realTransform4(t,r,1)}inverseTransform(t,r){if(t===r)throw Error("Input and output buffers must be different");this._transform4(t,r,-1);for(let r=0;r<t.length;++r)t[r]/=this.size}_transform4(t,r,s){let i,n,a=this._csize,o=1<<this._width,l=a/o<<1,u=this._bitrev;if(4===l)for(i=0,n=0;i<a;i+=l,++n){let s=u[n];this._singleTransform2(r,t,i,s,o)}else for(i=0,n=0;i<a;i+=l,++n){let a=u[n];this._singleTransform4(r,t,i,a,o,s)}let d=this.table;for(o>>=2;o>=2;o>>=2){let r=(l=a/o<<1)>>>2;for(i=0;i<a;i+=l){let n=i+r-1;for(let a=i,l=0;a<n;a+=2,l+=o){let i=a,n=i+r,o=n+r,u=o+r,c=t[i],p=t[i+1],h=t[n],f=t[n+1],m=t[o],_=t[o+1],g=t[u],y=t[u+1],w=d[l],b=s*d[l+1],x=h*w-f*b,v=h*b+f*w,$=d[2*l],k=s*d[2*l+1],E=m*$-_*k,S=m*k+_*$,T=d[3*l],I=s*d[3*l+1],z=g*T-y*I,A=g*I+y*T,C=c+E,M=p+S,O=c-E,B=p-S,R=x+z,P=v+A,L=s*(x-z),D=s*(v-A);t[i]=C+R,t[i+1]=M+P,t[n]=O+D,t[n+1]=B-L,t[o]=C-R,t[o+1]=M-P,t[u]=O-D,t[u+1]=B+L}}}}_singleTransform2(t,r,s,i,n){let a=t[i],o=t[i+1],l=t[i+n],u=t[i+n+1];r[s]=a+l,r[s+1]=o+u,r[s+2]=a-l,r[s+3]=o-u}_singleTransform4(t,r,s,i,n,a){let o=2*n,l=3*n,u=t[i],d=t[i+1],c=t[i+n],p=t[i+n+1],h=t[i+o],f=t[i+o+1],m=t[i+l],_=t[i+l+1],g=u+h,y=d+f,w=u-h,b=d-f,x=c+m,v=p+_,$=a*(c-m),k=a*(p-_);r[s]=g+x,r[s+1]=y+v,r[s+2]=w+k,r[s+3]=b-$,r[s+4]=g-x,r[s+5]=y-v,r[s+6]=w-k,r[s+7]=b+$}_realTransform4(t,r,s){let i,n,a=this._csize,o=1<<this._width,l=a/o<<1,u=this._bitrev;if(4===l)for(i=0,n=0;i<a;i+=l,++n){let s=u[n];this._singleRealTransform2(r,t,i,s>>>1,o>>>1)}else for(i=0,n=0;i<a;i+=l,++n){let a=u[n];this._singleRealTransform4(r,t,i,a>>>1,o>>>1,s)}let d=this.table;for(o>>=2;o>=2;o>>=2){let r=(l=a/o<<1)>>>1,n=r>>>1,u=n>>>1;for(i=0;i<a;i+=l)for(let a=0,l=0;a<=u;a+=2,l+=o){let o=i+a,c=o+n,p=c+n,h=p+n,f=t[o],m=t[o+1],_=t[c],g=t[c+1],y=t[p],w=t[p+1],b=t[h],x=t[h+1],v=d[l],$=s*d[l+1],k=_*v-g*$,E=_*$+g*v,S=d[2*l],T=s*d[2*l+1],I=y*S-w*T,z=y*T+w*S,A=d[3*l],C=s*d[3*l+1],M=b*A-x*C,O=b*C+x*A,B=f+I,R=m+z,P=f-I,L=m-z,D=k+M,U=E+O,N=s*(k-M),F=s*(E-O);if(t[o]=B+D,t[o+1]=R+U,t[c]=P+F,t[c+1]=L-N,0===a){t[p]=B-D,t[p+1]=R-U;continue}if(a===u)continue;let q=i+n-a,V=i+r-a;t[q]=P-s*F,t[q+1]=-L-s*N,t[V]=B-s*D,t[V+1]=-R+s*U}}let c=a>>>1;for(let r=2;r<c;r+=2)t[a-r]=t[r],t[a-r+1]=-t[r+1]}_singleRealTransform2(t,r,s,i,n){let a=t[i],o=t[i+n];r[s]=a+o,r[s+1]=0,r[s+2]=a-o,r[s+3]=0}_singleRealTransform4(t,r,s,i,n,a){let o=t[i],l=t[i+n],u=t[i+2*n],d=t[i+3*n],c=o+u,p=o-u,h=l+d,f=a*(l-d);r[s]=c+h,r[s+1]=0,r[s+2]=p,r[s+3]=-f,r[s+4]=c-h,r[s+5]=0,r[s+6]=p,r[s+7]=f}}class eb{constructor(t){let r=2*(t-1),s=2*(2*t-1),i=2**Math.ceil(Math.log2(s));this.bufferSize=i,this._a=r;let n=new Float64Array(s),a=new Float64Array(i);this._chirpBuffer=new Float64Array(i),this._buffer1=new Float64Array(i),this._buffer2=new Float64Array(i),this._outBuffer1=new Float64Array(i),this._outBuffer2=new Float64Array(i);let o=-2*Math.PI/t,l=Math.cos(o),u=Math.sin(o);for(let r=0;r<s>>1;++r){let s=(r+1-t)**2/2,i=Math.sqrt(l**2+u**2)**s,o=s*Math.atan2(u,l),d=2*r;n[d]=i*Math.cos(o),n[d+1]=i*Math.sin(o),a[d]=n[d],a[d+1]=-n[d+1]}this._slicedChirpBuffer=n.subarray(r,s),this._f=new ew(i>>1),this._f.transform(this._chirpBuffer,a)}_transform(t,r,s){let i=this._buffer1,n=this._buffer2,a=this._outBuffer1,o=this._outBuffer2,l=this._chirpBuffer,u=this._slicedChirpBuffer,d=this._a;if(s)for(let t=0;t<u.length;t+=2){let s=t+1,n=r[t>>1];i[t]=n*u[t],i[s]=n*u[s]}else for(let t=0;t<u.length;t+=2){let s=t+1;i[t]=r[t]*u[t]-r[s]*u[s],i[s]=r[t]*u[s]+r[s]*u[t]}this._f.transform(a,i);for(let t=0;t<l.length;t+=2){let r=t+1;n[t]=a[t]*l[t]-a[r]*l[r],n[r]=a[t]*l[r]+a[r]*l[t]}this._f.inverseTransform(o,n);for(let r=0;r<o.length;r+=2){let s=o[r+d],i=o[r+d+1],n=u[r],a=u[r+1];t[r]=s*n-i*a,t[r+1]=s*a+i*n}}transform(t,r){this._transform(t,r,!1)}realTransform(t,r){this._transform(t,r,!0)}}class ex{constructor(t){this.fft_length=t,this.isPowerOfTwo=ey(t),this.isPowerOfTwo?(this.fft=new ew(t),this.outputBufferSize=2*t):(this.fft=new eb(t),this.outputBufferSize=this.fft.bufferSize)}realTransform(t,r){this.fft.realTransform(t,r)}transform(t,r){this.fft.transform(t,r)}}function ev(t,r){let s=Math.pow(10,r);return Math.round(t*s)/s}var e$={};e$=(()=>{var t,r,s,i,n,a,o,l,u,d,c,p,h,f,m,_,g,y,w,b,x,v,$,k,E,S,T,I,z,A,C,M=Object.defineProperty,O=Object.getOwnPropertyDescriptor,B=Object.getOwnPropertyNames,R=Object.prototype.hasOwnProperty,P=void 0,L=(t,r)=>()=>(t&&(r=t(t=0)),r),D=(t,r)=>{for(var s in r)M(t,s,{get:r[s],enumerable:!0})},U=(t,r,s,i)=>{if(r&&"object"==typeof r||"function"==typeof r)for(let n of B(r))R.call(t,n)||n===s||M(t,n,{get:()=>r[n],enumerable:!(i=O(r,n))||i.enumerable});return t},N=t=>U(M({},"__esModule",{value:!0}),t),F=L(()=>{t=new Map,r=[],s=(s,i,n)=>{if(i&&"function"==typeof i.init&&"function"==typeof i.createInferenceSessionHandler){let a=t.get(s);if(void 0===a)t.set(s,{backend:i,priority:n});else{if(a.priority>n)return;if(a.priority===n&&a.backend!==i)throw Error(`cannot register backend "${s}" using priority ${n}`)}if(n>=0){let i=r.indexOf(s);-1!==i&&r.splice(i,1);for(let i=0;i<r.length;i++)if(t.get(r[i]).priority<=n)return void r.splice(i,0,s);r.push(s)}return}throw TypeError("not a valid backend")},i=async r=>{let s=t.get(r);if(!s)return"backend not found.";if(s.initialized)return s.backend;if(s.aborted)return s.error;{let t=!!s.initPromise;try{return t||(s.initPromise=s.backend.init(r)),await s.initPromise,s.initialized=!0,s.backend}catch(r){return t||(s.error=`${r}`,s.aborted=!0),s.error}finally{delete s.initPromise}}},n=async t=>{let s=t.executionProviders||[],n=s.map(t=>"string"==typeof t?t:t.name),a=0===n.length?r:n,o,l=[],u=new Set;for(let t of a){let r=await i(t);"string"==typeof r?l.push({name:t,err:r}):(o||(o=r),o===r&&u.add(t))}if(!o)throw Error(`no available backend found. ERR: ${l.map(t=>`[${t.name}] ${t.err}`).join(", ")}`);for(let{name:t,err:r}of l)n.includes(t)&&console.warn(`removing requested execution provider "${t}" from session options because it is not available: ${r}`);let d=s.filter(t=>u.has("string"==typeof t?t:t.name));return[o,new Proxy(t,{get:(t,r)=>"executionProviders"===r?d:Reflect.get(t,r)})]}}),q=L(()=>{F()}),V=L(()=>{a="1.22.0-dev.20250409-89f8206ba4"}),j=L(()=>{V(),o="warning",Object.defineProperty(l={wasm:{},webgl:{},webgpu:{},versions:{common:a},set logLevel(e){if(void 0!==e){if("string"!=typeof e||-1===["verbose","info","warning","error","fatal"].indexOf(e))throw Error(`Unsupported logging level: ${e}`);o=e}},get logLevel(){return o}},"logLevel",{enumerable:!0})}),G=L(()=>{j(),u=l}),W=L(()=>{d=(t,r)=>{let s="u">typeof document?document.createElement("canvas"):new OffscreenCanvas(1,1);s.width=t.dims[3],s.height=t.dims[2];let i=s.getContext("2d");if(null!=i){let n,a;r?.tensorLayout!==void 0&&"NHWC"===r.tensorLayout?(n=t.dims[2],a=t.dims[3]):(n=t.dims[3],a=t.dims[2]);let o=r?.format!==void 0?r.format:"RGB",l=r?.norm,u,d;void 0===l||void 0===l.mean?u=[255,255,255,255]:"number"==typeof l.mean?u=[l.mean,l.mean,l.mean,l.mean]:(u=[l.mean[0],l.mean[1],l.mean[2],0],void 0!==l.mean[3]&&(u[3]=l.mean[3])),void 0===l||void 0===l.bias?d=[0,0,0,0]:"number"==typeof l.bias?d=[l.bias,l.bias,l.bias,l.bias]:(d=[l.bias[0],l.bias[1],l.bias[2],0],void 0!==l.bias[3]&&(d[3]=l.bias[3]));let c=a*n,p=0,h=c,f=2*c,m=-1;"RGBA"===o?(p=0,h=c,f=2*c,m=3*c):"RGB"===o?(p=0,h=c,f=2*c):"RBG"===o&&(p=0,f=c,h=2*c);for(let r=0;r<a;r++)for(let s=0;s<n;s++)i.fillStyle="rgba("+(t.data[p++]-d[0])*u[0]+","+(t.data[h++]-d[1])*u[1]+","+(t.data[f++]-d[2])*u[2]+","+(-1===m?255:(t.data[m++]-d[3])*u[3])+")",i.fillRect(s,r,1,1);if("toDataURL"in s)return s.toDataURL();throw Error("toDataURL is not supported")}throw Error("Can not access image data")},c=(t,r)=>{let s="u">typeof document?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),i;if(null!=s){let n,a,o;r?.tensorLayout!==void 0&&"NHWC"===r.tensorLayout?(n=t.dims[2],a=t.dims[1],o=t.dims[3]):(n=t.dims[3],a=t.dims[2],o=t.dims[1]);let l=void 0!==r&&void 0!==r.format?r.format:"RGB",u=r?.norm,d,c;void 0===u||void 0===u.mean?d=[255,255,255,255]:"number"==typeof u.mean?d=[u.mean,u.mean,u.mean,u.mean]:(d=[u.mean[0],u.mean[1],u.mean[2],255],void 0!==u.mean[3]&&(d[3]=u.mean[3])),void 0===u||void 0===u.bias?c=[0,0,0,0]:"number"==typeof u.bias?c=[u.bias,u.bias,u.bias,u.bias]:(c=[u.bias[0],u.bias[1],u.bias[2],0],void 0!==u.bias[3]&&(c[3]=u.bias[3]));let p=a*n;if(void 0!==r&&(void 0!==r.format&&4===o&&"RGBA"!==r.format||3===o&&"RGB"!==r.format&&"BGR"!==r.format))throw Error("Tensor format doesn't match input tensor dims");let h=0,f=1,m=2,_=3,g=0,y=p,w=2*p,b=-1;"RGBA"===l?(g=0,y=p,w=2*p,b=3*p):"RGB"===l?(g=0,y=p,w=2*p):"RBG"===l&&(g=0,w=p,y=2*p),i=s.createImageData(n,a);for(let r=0;r<a*n;h+=4,f+=4,m+=4,_+=4,r++)i.data[h]=(t.data[g++]-c[0])*d[0],i.data[f]=(t.data[y++]-c[1])*d[1],i.data[m]=(t.data[w++]-c[2])*d[2],i.data[_]=-1===b?255:(t.data[b++]-c[3])*d[3]}else throw Error("Can not access image data");return i}}),H=L(()=>{Y(),p=(t,r)=>{if(void 0===t)throw Error("Image buffer must be defined");if(void 0===r.height||void 0===r.width)throw Error("Image height and width must be defined");if("NHWC"===r.tensorLayout)throw Error("NHWC Tensor layout is not supported yet");let{height:s,width:i}=r,n=r.norm??{mean:255,bias:0},a,o;a="number"==typeof n.mean?[n.mean,n.mean,n.mean,n.mean]:[n.mean[0],n.mean[1],n.mean[2],n.mean[3]??255],o="number"==typeof n.bias?[n.bias,n.bias,n.bias,n.bias]:[n.bias[0],n.bias[1],n.bias[2],n.bias[3]??0];let l=void 0!==r.format?r.format:"RGBA",u=void 0!==r.tensorFormat&&void 0!==r.tensorFormat?r.tensorFormat:"RGB",d=s*i,c=new Float32Array("RGBA"===u?4*d:3*d),p=4,h=0,f=1,m=2,_=3,g=0,y=d,w=2*d,b=-1;"RGB"===l&&(p=3,h=0,f=1,m=2,_=-1),"RGBA"===u?b=3*d:"RBG"===u?(g=0,w=d,y=2*d):"BGR"===u&&(w=0,y=d,g=2*d);for(let r=0;r<d;r++,h+=p,m+=p,f+=p,_+=p)c[g++]=(t[h]+o[0])/a[0],c[y++]=(t[f]+o[1])/a[1],c[w++]=(t[m]+o[2])/a[2],-1!==b&&-1!==_&&(c[b++]=(t[_]+o[3])/a[3]);return"RGBA"===u?new k("float32",c,[1,4,s,i]):new k("float32",c,[1,3,s,i])},h=async(t,r)=>{let s="u">typeof HTMLImageElement&&t instanceof HTMLImageElement,i="u">typeof ImageData&&t instanceof ImageData,n="u">typeof ImageBitmap&&t instanceof ImageBitmap,a="string"==typeof t,o,l=r??{},u=()=>{if("u">typeof document)return document.createElement("canvas");if("u">typeof OffscreenCanvas)return new OffscreenCanvas(1,1);throw Error("Canvas is not supported")},d=t=>"u">typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||t instanceof OffscreenCanvas?t.getContext("2d"):null;if(s){let s=u();s.width=t.width,s.height=t.height;let i=d(s);if(null!=i){let s=t.height,n=t.width;if(void 0!==r&&void 0!==r.resizedHeight&&void 0!==r.resizedWidth&&(s=r.resizedHeight,n=r.resizedWidth),void 0!==r){if(l=r,void 0!==r.tensorFormat)throw Error("Image input config format must be RGBA for HTMLImageElement");l.tensorFormat="RGBA",l.height=s,l.width=n}else l.tensorFormat="RGBA",l.height=s,l.width=n;i.drawImage(t,0,0),o=i.getImageData(0,0,n,s).data}else throw Error("Can not access image data")}else if(i){let s,i;if(void 0!==r&&void 0!==r.resizedWidth&&void 0!==r.resizedHeight?(s=r.resizedHeight,i=r.resizedWidth):(s=t.height,i=t.width),void 0!==r&&(l=r),l.format="RGBA",l.height=s,l.width=i,void 0!==r){let r=u();r.width=i,r.height=s;let n=d(r);if(null!=n)n.putImageData(t,0,0),o=n.getImageData(0,0,i,s).data;else throw Error("Can not access image data")}else o=t.data}else if(n){if(void 0===r)throw Error("Please provide image config with format for Imagebitmap");let s=u();s.width=t.width,s.height=t.height;let i=d(s);if(null!=i){let r=t.height,s=t.width;return i.drawImage(t,0,0,s,r),o=i.getImageData(0,0,s,r).data,l.height=r,l.width=s,p(o,l)}throw Error("Can not access image data")}else{if(a)return new Promise((r,s)=>{let i=u(),n=d(i);if(!t||!n)return s();let a=new Image;a.crossOrigin="Anonymous",a.src=t,a.onload=()=>{i.width=a.width,i.height=a.height,n.drawImage(a,0,0,i.width,i.height);let t=n.getImageData(0,0,i.width,i.height);l.height=i.height,l.width=i.width,r(p(t.data,l))}});throw Error("Input data provided is not supported - aborted tensor creation")}if(void 0!==o)return p(o,l);throw Error("Input data provided is not supported - aborted tensor creation")},f=(t,r)=>{let{width:s,height:i,download:n,dispose:a}=r;return new k({location:"texture",type:"float32",texture:t,dims:[1,i,s,4],download:n,dispose:a})},m=(t,r)=>{let{dataType:s,dims:i,download:n,dispose:a}=r;return new k({location:"gpu-buffer",type:s??"float32",gpuBuffer:t,dims:i,download:n,dispose:a})},_=(t,r)=>{let{dataType:s,dims:i,download:n,dispose:a}=r;return new k({location:"ml-tensor",type:s??"float32",mlTensor:t,dims:i,download:n,dispose:a})},g=(t,r,s)=>new k({location:"cpu-pinned",type:t,data:r,dims:s??[r.length]})}),K=L(()=>{y=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),w=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),b=!1,x=()=>{if(!b){b=!0;let t="u">typeof BigInt64Array&&BigInt64Array.from,r="u">typeof BigUint64Array&&BigUint64Array.from,s=globalThis.Float16Array,i="u">typeof s&&s.from;t&&(y.set("int64",BigInt64Array),w.set(BigInt64Array,"int64")),r&&(y.set("uint64",BigUint64Array),w.set(BigUint64Array,"uint64")),i?(y.set("float16",s),w.set(s,"float16")):y.set("float16",Uint16Array)}}}),X=L(()=>{Y(),v=t=>{let r=1;for(let s=0;s<t.length;s++){let i=t[s];if("number"!=typeof i||!Number.isSafeInteger(i))throw TypeError(`dims[${s}] must be an integer, got: ${i}`);if(i<0)throw RangeError(`dims[${s}] must be a non-negative integer, got: ${i}`);r*=i}return r},$=(t,r)=>{switch(t.location){case"cpu":return new k(t.type,t.data,r);case"cpu-pinned":return new k({location:"cpu-pinned",data:t.data,type:t.type,dims:r});case"texture":return new k({location:"texture",texture:t.texture,type:t.type,dims:r});case"gpu-buffer":return new k({location:"gpu-buffer",gpuBuffer:t.gpuBuffer,type:t.type,dims:r});case"ml-tensor":return new k({location:"ml-tensor",mlTensor:t.mlTensor,type:t.type,dims:r});default:throw Error(`tensorReshape: tensor location ${t.location} is not supported`)}}}),Y=L(()=>{W(),H(),K(),X(),k=class{constructor(t,r,s){let i,n;if(x(),"object"==typeof t&&"location"in t)switch(this.dataLocation=t.location,i=t.type,n=t.dims,t.location){case"cpu-pinned":{let r=y.get(i);if(!r)throw TypeError(`unsupported type "${i}" to create tensor from pinned buffer`);if(!(t.data instanceof r))throw TypeError(`buffer should be of type ${r.name}`);this.cpuData=t.data;break}case"texture":if("float32"!==i)throw TypeError(`unsupported type "${i}" to create tensor from texture`);this.gpuTextureData=t.texture,this.downloader=t.download,this.disposer=t.dispose;break;case"gpu-buffer":if("float32"!==i&&"float16"!==i&&"int32"!==i&&"int64"!==i&&"uint32"!==i&&"uint8"!==i&&"bool"!==i&&"uint4"!==i&&"int4"!==i)throw TypeError(`unsupported type "${i}" to create tensor from gpu buffer`);this.gpuBufferData=t.gpuBuffer,this.downloader=t.download,this.disposer=t.dispose;break;case"ml-tensor":if("float32"!==i&&"float16"!==i&&"int32"!==i&&"int64"!==i&&"uint32"!==i&&"uint64"!==i&&"int8"!==i&&"uint8"!==i&&"bool"!==i&&"uint4"!==i&&"int4"!==i)throw TypeError(`unsupported type "${i}" to create tensor from MLTensor`);this.mlTensorData=t.mlTensor,this.downloader=t.download,this.disposer=t.dispose;break;default:throw Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,o;if("string"==typeof t)if(i=t,o=s,"string"===t){if(!Array.isArray(r))throw TypeError("A string tensor's data must be a string array.");a=r}else{let s=y.get(t);if(void 0===s)throw TypeError(`Unsupported tensor type: ${t}.`);if(Array.isArray(r)){if("float16"===t&&s===Uint16Array||"uint4"===t||"int4"===t)throw TypeError(`Creating a ${t} tensor from number array is not supported. Please use ${s.name} as data.`);a="uint64"===t||"int64"===t?s.from(r,BigInt):s.from(r)}else if(r instanceof s)a=r;else if(r instanceof Uint8ClampedArray)if("uint8"===t)a=Uint8Array.from(r);else throw TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else if("float16"===t&&r instanceof Uint16Array&&s!==Uint16Array)a=new globalThis.Float16Array(r.buffer,r.byteOffset,r.length);else throw TypeError(`A ${i} tensor's data must be type of ${s}`)}else if(o=r,Array.isArray(t)){if(0===t.length)throw TypeError("Tensor type cannot be inferred from an empty array.");let r=typeof t[0];if("string"===r)i="string",a=t;else if("boolean"===r)i="bool",a=Uint8Array.from(t);else throw TypeError(`Invalid element type of data array: ${r}.`)}else if(t instanceof Uint8ClampedArray)i="uint8",a=Uint8Array.from(t);else{let r=w.get(t.constructor);if(void 0===r)throw TypeError(`Unsupported type for tensor data: ${t.constructor}.`);i=r,a=t}if(void 0===o)o=[a.length];else if(!Array.isArray(o))throw TypeError("A tensor's dims must be a number array");n=o,this.cpuData=a,this.dataLocation="cpu"}let a=v(n);if(this.cpuData&&a!==this.cpuData.length&&("uint4"!==i&&"int4"!==i||Math.ceil(a/2)!==this.cpuData.length))throw Error(`Tensor's size(${a}) does not match data length(${this.cpuData.length}).`);this.type=i,this.dims=n,this.size=a}static async fromImage(t,r){return h(t,r)}static fromTexture(t,r){return f(t,r)}static fromGpuBuffer(t,r){return m(t,r)}static fromMLTensor(t,r){return _(t,r)}static fromPinnedBuffer(t,r,s){return g(t,r,s)}toDataURL(t){return d(this,t)}toImageData(t){return c(this,t)}get data(){if(this.ensureValid(),!this.cpuData)throw Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(t){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":if(!this.downloader)throw Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let r=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=r,t&&this.disposer&&(this.disposer(),this.disposer=void 0),r}finally{this.isDownloading=!1}default:throw Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if("none"===this.dataLocation)throw Error("The tensor is disposed.")}reshape(t){if(this.ensureValid(),this.downloader||this.disposer)throw Error("Cannot reshape a tensor that owns GPU resource.");return $(this,t)}}}),Q=L(()=>{Y(),E=k}),Z=L(()=>{j(),S=(t,r)=>{(typeof l.trace>"u"?l.wasm.trace:l.trace)&&console.timeStamp(`${t}::ORT::${r}`)},T=(t,r)=>{let s=Error().stack?.split(/\r\n|\r|\n/g)||[],i=!1;for(let n=0;n<s.length;n++){if(i&&!s[n].includes("TRACE_FUNC")){let i=`FUNC_${t}::${s[n].trim().split(" ")[1]}`;r&&(i+=`::${r}`),S("CPU",i);return}s[n].includes("TRACE_FUNC")&&(i=!0)}},I=t=>{(typeof l.trace>"u"?l.wasm.trace:l.trace)&&T("BEGIN",t)},z=t=>{(typeof l.trace>"u"?l.wasm.trace:l.trace)&&T("END",t)}}),J=L(()=>{F(),Q(),Z(),A=class t{constructor(t){this.handler=t}async run(t,r,s){I();let i={},n={};if("object"!=typeof t||null===t||t instanceof E||Array.isArray(t))throw TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let a=!0;if("object"==typeof r){if(null===r)throw TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof E)throw TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(0===r.length)throw TypeError("'fetches' cannot be an empty array.");for(let t of(a=!1,r)){if("string"!=typeof t)throw TypeError("'fetches' must be a string array or an object.");if(-1===this.outputNames.indexOf(t))throw RangeError(`'fetches' contains invalid output name: ${t}.`);i[t]=null}if("object"==typeof s&&null!==s)n=s;else if("u">typeof s)throw TypeError("'options' must be an object.")}else{let t=!1,o=Object.getOwnPropertyNames(r);for(let s of this.outputNames)if(-1!==o.indexOf(s)){let n=r[s];(null===n||n instanceof E)&&(t=!0,a=!1,i[s]=n)}if(t){if("object"==typeof s&&null!==s)n=s;else if("u">typeof s)throw TypeError("'options' must be an object.")}else n=r}}else if("u">typeof r)throw TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let r of this.inputNames)if(typeof t[r]>"u")throw Error(`input '${r}' is missing in 'feeds'.`);if(a)for(let t of this.outputNames)i[t]=null;let o=await this.handler.run(t,i,n),l={};for(let t in o)if(Object.hasOwnProperty.call(o,t)){let r=o[t];r instanceof E?l[t]=r:l[t]=new E(r.type,r.data,r.dims)}return z(),l}async release(){return this.handler.dispose()}static async create(r,s,i,a){I();let o,l={};if("string"==typeof r){if(o=r,"object"==typeof s&&null!==s)l=s;else if("u">typeof s)throw TypeError("'options' must be an object.")}else if(r instanceof Uint8Array){if(o=r,"object"==typeof s&&null!==s)l=s;else if("u">typeof s)throw TypeError("'options' must be an object.")}else if(r instanceof ArrayBuffer||"u">typeof SharedArrayBuffer&&r instanceof SharedArrayBuffer){let t=0,n=r.byteLength;if("object"==typeof s&&null!==s)l=s;else if("number"==typeof s){if(!Number.isSafeInteger(t=s))throw RangeError("'byteOffset' must be an integer.");if(t<0||t>=r.byteLength)throw RangeError(`'byteOffset' is out of range [0, ${r.byteLength}).`);if(n=r.byteLength-t,"number"==typeof i){if(!Number.isSafeInteger(n=i))throw RangeError("'byteLength' must be an integer.");if(n<=0||t+n>r.byteLength)throw RangeError(`'byteLength' is out of range (0, ${r.byteLength-t}].`);if("object"==typeof a&&null!==a)l=a;else if("u">typeof a)throw TypeError("'options' must be an object.")}else if("u">typeof i)throw TypeError("'byteLength' must be a number.")}else if("u">typeof s)throw TypeError("'options' must be an object.");o=new Uint8Array(r,t,n)}else throw TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[u,d]=await n(l),c=await u.createInferenceSessionHandler(o,d);return z(),new t(c)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}get inputMetadata(){return this.handler.inputMetadata}get outputMetadata(){return this.handler.outputMetadata}}}),ee=L(()=>{J(),C=A}),et=L(()=>{}),er=L(()=>{}),es=L(()=>{}),ei=L(()=>{}),en={};D(en,{InferenceSession:()=>C,TRACE:()=>S,TRACE_FUNC_BEGIN:()=>I,TRACE_FUNC_END:()=>z,Tensor:()=>E,env:()=>u,registerBackend:()=>s});var ea=L(()=>{q(),G(),ee(),Q(),et(),er(),Z(),es(),ei()}),eo=L(()=>{}),el={};D(el,{default:()=>ec});var eu,ed,ec,ep,eh,ef,em,e_,eg,ey,ew,eb,ex,ev,e$,ek,eE,eS,eT,eI,ez,eA,eC,eM,eO,eB,eR,eP,eL,eD,eU,eN,eF,eq,eV,ej,eG,eW,eH,eK,eX,eY,eQ,eZ,eJ,e0,e1,e2,e3,e4,e6,e8,e5,e9,e7,te,tt,tr,ts,ti,tn,ta,to,tl,tu,td,tc,tp,th,tf,tm,t_,tg,ty,tw,tb,tx,tv,t$,tk,tE,tS,tT,tI,tz,tA,tC,tM,tO,tB,tR,tP,tL,tD,tU,tN,tF,tq,tV,tj,tG,tW,tH,tK,tX,tY,tQ,tZ,tJ,t0,t1,t2,t3,t4,t6,t8,t5,t9,t7,re,rt,rr,rs,ri,rn,ra,ro,rl,ru,rd,rc,rp,rh,rf,rm,r_,rg,ry,rw,rb,rx,rv,r$,rk,rE,rS,rT,rI,rz,rA,rC,rM,rO,rB,rR,rP,rL,rD,rU,rN,rF,rq,rV,rj,rG,rW,rH,rK,rX,rY,rQ,rZ,rJ,r0,r1,r2,r3,r4,r6,r8,r5,r9,r7,se,st,sr,ss,si,sn,sa,so,sl,su,sd,sc,sp,sh,sf,sm,s_,sg,sy,sw,sb,sx,sv,s$,sk,sE,sS,sT,sI,sz,sA,sC,sM,sO,sB,sR,sP,sL,sD,sU,sN,sF,sq,sV,sj,sG,sW,sH,sK,sX,sY,sQ,sZ,sJ,s0,s1,s2,s3,s4,s6,s8,s5,s9,s7,ie,it,ir,is,ii,ia,io,il,iu,id,ic,ip,ih,im,i_,ig,iy,iw,ib,ix,iv,i$,ik,iE,iS,iT,iI,iz,iA,iC,iM,iO,iB,iR,iP,iL,iD,iU,iN,iF,iq,iV,ij,iG,iW,iH,iK,iX,iY,iQ,iZ,iJ,i0,i1,i2,i3,i4,i6,i8,i5,i9,i7,ne,nt,nr,ns,ni,nn,na,no,nl,nu,nd,nc,np,nh,nf,nm,n_,ng,ny,nw,nb,nx,nv,n$,nk,nE,nS,nT,nI,nz,nA,nC,nM,nO,nB,nR,nP,nL,nD,nU,nN,nF,nq,nV,nj,nG,nW,nH,nK,nX,nY,nQ,nZ,nJ,n0,n1,n2,n3,n4,n6,n8,n5,n9,n7,ae,at,ar,as,ai,an,aa,ao,al,au,ad,ac,ap,ah,af,am,a_,ag,ay,aw,ab,ax,av,a$,ak,aE,aS,aT,aI,az,aA,aC,aM,aO,aB,aR,aP,aL,aD,aU,aN,aF,aq,aV,aj,aG,aW,aH,aK,aX,aY,aQ,aZ,aJ,a0,a1,a2,a3,a4,a6,a8,a5,a9,a7,oe,ot,or,os,oi,on,oa,oo,ol,ou,od,oc,op,oh,of,om,o_,og,oy,ow,ob,ox,ov,o$,ok,oE,oS,oT,oI,oz,oA,oC,oM=L(()=>{ub(),oB(),oO(),eu="ort-wasm-proxy-worker",(ed=globalThis.self?.name===eu)&&(self.onmessage=t=>{let{type:r,in:s}=t.data;try{switch(r){case"init-wasm":eC(s.wasm).then(()=>{lY(s).then(()=>{postMessage({type:r})},t=>{postMessage({type:r,err:t})})},t=>{postMessage({type:r,err:t})});break;case"init-ep":{let{epName:t,env:i}=s;lQ(i,t).then(()=>{postMessage({type:r})},t=>{postMessage({type:r,err:t})});break}case"copy-from":{let{buffer:t}=s,i=l1(t);postMessage({type:r,out:i});break}case"create":{let{model:t,options:i}=s;l2(t,i).then(t=>{postMessage({type:r,out:t})},t=>{postMessage({type:r,err:t})});break}case"release":l3(s),postMessage({type:r});break;case"run":{let{sessionId:t,inputIndices:i,inputs:n,outputIndices:a,options:o}=s;l6(t,i,n,a,Array(a.length).fill(null),o).then(t=>{t.some(t=>"cpu"!==t[3])?postMessage({type:r,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:r,out:t},l5([...n,...t]))},t=>{postMessage({type:r,err:t})});break}case"end-profiling":l8(s),postMessage({type:r})}}catch(t){postMessage({type:r,err:t})}}),ec=ed?null:t=>new Worker(t??eh,{type:"classic",name:eu})}),oO=L(()=>{eo(),ep=typeof location>"u"?void 0:location.origin,eh="u">typeof document?document.currentScript?.src:"u">typeof self?self.location?.href:void 0,ef=()=>{if(eh&&!eh.startsWith("blob:"))return eh.substring(0,eh.lastIndexOf("/")+1)},em=(t,r)=>{try{let s=r??eh;return(s?new URL(t,s):new URL(t)).origin===ep}catch{return!1}},e_=(t,r)=>{let s=r??eh;try{return(s?new URL(t,s):new URL(t)).href}catch{return}},eg=(t,r)=>`${r??"./"}${t}`,ey=async t=>{let r=await (await fetch(t,{credentials:"same-origin"})).blob();return URL.createObjectURL(r)},ew=async t=>(await import(t)).default,eb=(oM(),N(el)).default,ex=async()=>{if(!eh)throw Error("Failed to load proxy worker: cannot determine the script source URL.");if(em(eh))return[void 0,eb()];let t=await ey(eh);return[t,eb(t)]},ev=void 0,e$=async(t,r,s)=>{if(!t&&!r&&ev&&eh&&em(eh))return[void 0,ev];{let i="ort-wasm-simd-threaded.jsep.mjs",n=t??e_(i,r),a=s&&n&&!em(n,r),o=a?await ey(n):n??eg(i,r);return[a?o:void 0,await ew(o)]}}}),oB=L(()=>{oO(),eE=!1,eS=!1,eT=!1,eI=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return"u">typeof MessageChannel&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},ez=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},eA=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,19,1,17,0,65,1,253,15,65,2,253,15,65,3,253,15,253,147,2,11]))}catch{return!1}},eC=async t=>{if(eE)return Promise.resolve();if(eS)throw Error("multiple calls to 'initializeWebAssembly()' detected.");if(eT)throw Error("previous call to 'initializeWebAssembly()' failed.");eS=!0;let r=t.initTimeout,s=t.numThreads;if(!1!==t.simd){if("relaxed"===t.simd){if(!eA())throw Error("Relaxed WebAssembly SIMD is not supported in the current environment.")}else if(!ez())throw Error("WebAssembly SIMD is not supported in the current environment.")}let i=eI();s>1&&!i&&("u">typeof self&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+s+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),t.numThreads=s=1);let n=t.wasmPaths,a="string"==typeof n?n:void 0,o=n?.mjs,l=o?.href??o,u=n?.wasm,d=u?.href??u,c=t.wasmBinary,[p,h]=await e$(l,a,s>1),f=!1,m=[];if(r>0&&m.push(new Promise(t=>{setTimeout(()=>{f=!0,t()},r)})),m.push(new Promise((t,r)=>{let i={numThreads:s};if(c)i.wasmBinary=c;else if(d||a)i.locateFile=t=>d??a+t;else if(l&&0!==l.indexOf("blob:"))i.locateFile=t=>new URL(t,l).href;else if(p){let t=ef();t&&(i.locateFile=r=>t+r)}h(i).then(r=>{eS=!1,eE=!0,ek=r,t(),p&&URL.revokeObjectURL(p)},t=>{eS=!1,eT=!0,r(t)})})),await Promise.race(m),f)throw Error(`WebAssembly backend initializing failed due to timeout: ${r}ms`)},eM=()=>{if(eE&&ek)return ek;throw Error("WebAssembly is not initialized yet.")}}),oR=L(()=>{oB(),eO=(t,r)=>{let s=eM(),i=s.lengthBytesUTF8(t)+1,n=s._malloc(i);return s.stringToUTF8(t,n,i),r.push(n),n},eB=(t,r,s,i)=>{if("object"==typeof t&&null!==t){if(s.has(t))throw Error("Circular reference in options");s.add(t)}Object.entries(t).forEach(([t,n])=>{let a=r?r+t:t;if("object"==typeof n)eB(n,a+".",s,i);else if("string"==typeof n||"number"==typeof n)i(a,n.toString());else if("boolean"==typeof n)i(a,n?"1":"0");else throw Error(`Can't handle extra config type: ${typeof n}`)})},eR=t=>{let r=eM(),s=r.stackSave();try{let s=r.PTR_SIZE,i=r.stackAlloc(2*s);r._OrtGetLastError(i,i+s);let n=Number(r.getValue(i,4===s?"i32":"i64")),a=r.getValue(i+s,"*"),o=a?r.UTF8ToString(a):"";throw Error(`${t} ERROR_CODE: ${n}, ERROR_MESSAGE: ${o}`)}finally{r.stackRestore(s)}}}),oP=L(()=>{oB(),oR(),eP=t=>{let r=eM(),s=0,i=[],n=t||{};try{if(t?.logSeverityLevel===void 0)n.logSeverityLevel=2;else if("number"!=typeof t.logSeverityLevel||!Number.isInteger(t.logSeverityLevel)||t.logSeverityLevel<0||t.logSeverityLevel>4)throw Error(`log serverity level is not valid: ${t.logSeverityLevel}`);if(t?.logVerbosityLevel===void 0)n.logVerbosityLevel=0;else if("number"!=typeof t.logVerbosityLevel||!Number.isInteger(t.logVerbosityLevel))throw Error(`log verbosity level is not valid: ${t.logVerbosityLevel}`);t?.terminate===void 0&&(n.terminate=!1);let a=0;return t?.tag!==void 0&&(a=eO(t.tag,i)),s=r._OrtCreateRunOptions(n.logSeverityLevel,n.logVerbosityLevel,!!n.terminate,a),0===s&&eR("Can't create run options."),t?.extra!==void 0&&eB(t.extra,"",new WeakSet,(t,n)=>{let a=eO(t,i),o=eO(n,i);0!==r._OrtAddRunConfigEntry(s,a,o)&&eR(`Can't set a run config entry: ${t} - ${n}.`)}),[s,i]}catch(t){throw 0!==s&&r._OrtReleaseRunOptions(s),i.forEach(t=>r._free(t)),t}}}),oL=L(()=>{oB(),oR(),eL=t=>{switch(t){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw Error(`unsupported graph optimization level: ${t}`)}},eD=t=>{switch(t){case"sequential":return 0;case"parallel":return 1;default:throw Error(`unsupported execution mode: ${t}`)}},eU=t=>{t.extra||(t.extra={}),t.extra.session||(t.extra.session={});let r=t.extra.session;r.use_ort_model_bytes_directly||(r.use_ort_model_bytes_directly="1"),t.executionProviders&&t.executionProviders.some(t=>("string"==typeof t?t:t.name)==="webgpu")&&(t.enableMemPattern=!1)},eN=(t,r,s,i)=>{let n=eO(r,i),a=eO(s,i);0!==eM()._OrtAddSessionConfigEntry(t,n,a)&&eR(`Can't set a session config entry: ${r} - ${s}.`)},eF=async(t,r,s)=>{for(let i of r){let r="string"==typeof i?i:i.name,n=[];switch(r){case"webnn":if(r="WEBNN","string"!=typeof i){let r=i?.deviceType;r&&eN(t,"deviceType",r,s)}break;case"webgpu":if(r="JS","string"!=typeof i&&i?.preferredLayout){if("NCHW"!==i.preferredLayout&&"NHWC"!==i.preferredLayout)throw Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${i.preferredLayout}`);eN(t,"preferredLayout",i.preferredLayout,s)}break;case"wasm":case"cpu":continue;default:throw Error(`not supported execution provider: ${r}`)}let a=eO(r,s),o=n.length,l=0,u=0;if(o>0){l=eM()._malloc(o*eM().PTR_SIZE),s.push(l),u=eM()._malloc(o*eM().PTR_SIZE),s.push(u);for(let t=0;t<o;t++)eM().setValue(l+t*eM().PTR_SIZE,n[t][0],"*"),eM().setValue(u+t*eM().PTR_SIZE,n[t][1],"*")}await eM()._OrtAppendExecutionProvider(t,a,l,u,o)!==0&&eR(`Can't append execution provider: ${r}.`)}},eq=async t=>{let r=eM(),s=0,i=[],n=t||{};eU(n);try{let t=eL(n.graphOptimizationLevel??"all"),a=eD(n.executionMode??"sequential"),o="string"==typeof n.logId?eO(n.logId,i):0,l=n.logSeverityLevel??2;if(!Number.isInteger(l)||l<0||l>4)throw Error(`log serverity level is not valid: ${l}`);let u=n.logVerbosityLevel??0;if(!Number.isInteger(u)||u<0||u>4)throw Error(`log verbosity level is not valid: ${u}`);let d="string"==typeof n.optimizedModelFilePath?eO(n.optimizedModelFilePath,i):0;if(s=r._OrtCreateSessionOptions(t,!!n.enableCpuMemArena,!!n.enableMemPattern,a,!!n.enableProfiling,0,o,l,u,d),0===s&&eR("Can't create session options."),n.executionProviders&&await eF(s,n.executionProviders,i),void 0!==n.enableGraphCapture){if("boolean"!=typeof n.enableGraphCapture)throw Error(`enableGraphCapture must be a boolean value: ${n.enableGraphCapture}`);eN(s,"enableGraphCapture",n.enableGraphCapture.toString(),i)}if(n.freeDimensionOverrides)for(let[t,a]of Object.entries(n.freeDimensionOverrides)){if("string"!=typeof t)throw Error(`free dimension override name must be a string: ${t}`);if("number"!=typeof a||!Number.isInteger(a)||a<0)throw Error(`free dimension override value must be a non-negative integer: ${a}`);let n=eO(t,i);0!==r._OrtAddFreeDimensionOverride(s,n,a)&&eR(`Can't set a free dimension override: ${t} - ${a}.`)}return void 0!==n.extra&&eB(n.extra,"",new WeakSet,(t,r)=>{eN(s,t,r,i)}),[s,i]}catch(t){throw 0!==s&&0!==r._OrtReleaseSessionOptions(s)&&eR("Can't release session options."),i.forEach(t=>r._free(t)),t}}}),oD=L(()=>{eV=t=>{switch(t){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw Error(`unsupported data type: ${t}`)}},ej=t=>{switch(t){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw Error(`unsupported data type: ${t}`)}},eG=(t,r)=>{let s=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][t],i="number"==typeof r?r:r.reduce((t,r)=>t*r,1);return s>0?Math.ceil(i*s):void 0},eW=t=>{switch(t){case"float16":return"u">typeof Float16Array&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":case"bool":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw Error(`unsupported type: ${t}`)}},eH=t=>{switch(t){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw Error(`unsupported logging level: ${t}`)}},eK=t=>"float32"===t||"float16"===t||"int32"===t||"int64"===t||"uint32"===t||"uint8"===t||"bool"===t||"uint4"===t||"int4"===t,eX=t=>"float32"===t||"float16"===t||"int32"===t||"int64"===t||"uint32"===t||"uint64"===t||"int8"===t||"uint8"===t||"bool"===t||"uint4"===t||"int4"===t,eY=t=>{switch(t){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw Error(`unsupported data location: ${t}`)}}}),oU=L(()=>{eo(),eQ=async t=>{if("string"!=typeof t)return t instanceof Blob?new Uint8Array(await t.arrayBuffer()):t instanceof Uint8Array?t:new Uint8Array(t);{let r=await fetch(t);if(!r.ok)throw Error(`failed to load external data file: ${t}`);let s=r.headers.get("Content-Length"),i=s?parseInt(s,10):0;if(i<0x40000000)return new Uint8Array(await r.arrayBuffer());{if(!r.body)throw Error(`failed to load external data file: ${t}, no response body.`);let s=r.body.getReader(),n;try{n=new ArrayBuffer(i)}catch(t){if(t instanceof RangeError){let t=Math.ceil(i/65536);n=new WebAssembly.Memory({initial:t,maximum:t}).buffer}else throw t}let a=0;for(;;){let{done:t,value:r}=await s.read();if(t)break;let i=r.byteLength;new Uint8Array(n,a,i).set(r),a+=i}return new Uint8Array(n,0,i)}}}}),oN=L(()=>{oD(),eZ=["V","I","W","E","F"],eJ=(t,r)=>{console.log(`[${eZ[t]},${new Date().toISOString()}]${r}`)},e2=(t,r)=>{e0=t,e1=r},e3=(t,r)=>{let s=eH(t);s>=eH(e0)&&eJ(s,"function"==typeof r?r():r)},e4=(...t)=>{e1&&e3(...t)}}),oF=L(()=>{e6=class{static calcMatMulShape(t,r){return t[1]!==r[0]?void 0:[t[0],r[1]]}},e8=class{static calcShape(t,r,s=!1){let i=t.length,n=r.length;if(0===i)return r;if(0===n)return t;let a=Math.max(t.length,r.length),o=Array(a);if(s){if(i<2||n<2)return;let s=e6.calcMatMulShape([t[i-2],t[i-1]],[r[n-2],r[n-1]]);if(void 0===s)return;[o[a-2],o[a-1]]=s}for(let l=s?3:1;l<=a;l++){let s=i-l<0?1:t[i-l],u=n-l<0?1:r[n-l];if(s!==u&&s>1&&u>1)return;let d=Math.max(s,u);if(s&&u)o[a-l]=Math.max(s,u);else{if(d>1)return;o[a-l]=0}}return o}static isValidBroadcast(t,r){let s=t.length,i=r.length;if(s>i)return!1;for(let n=1;n<=s;n++)if(1!==t[s-n]&&t[s-n]!==r[i-n])return!1;return!0}},e5=class t{static size(r){return t.getSizeFromDimensionRange(r,0,r.length)}static convertShape(t,r=4){let s=t.length;if(0===s)return[];let i=Array(s),n=s-1;for(;n>=0;){if(t[n]%r==0){i[n]=t[n]/r;break}if(r%t[n]!=0)throw Error("cannot convert shape");i[n]=1,r/=t[n],n--}for(n--;n>=0;n--)i[n]=t[n];return i}static sizeFromDimension(r,s){if(s<0||s>r.length)throw Error(`invalid dimension of ${s} for sizeFromDimension as Tensor has ${r.length} dimensions.`);return t.getSizeFromDimensionRange(r,s,r.length)}static sizeToDimension(r,s){if(s<0||s>r.length)throw Error(`invalid dimension of ${s} for sizeToDimension as Tensor has ${r.length} dimensions.`);return t.getSizeFromDimensionRange(r,0,s)}static getSizeFromDimensionRange(t,r,s){let i=1;for(let n=r;n<s;n++){if(t[n]<0)throw Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");i*=Number(t[n])}return i}static computeStrides(t){let r=t.length;if(0===r)return[];if(1===r)return[1];let s=Array(r);s[r-1]=1,s[r-2]=t[r-1];for(let i=r-3;i>=0;--i)s[i]=s[i+1]*t[i+1];return s}static normalizeAxis(t,r){if(t<-r&&t>=r)throw Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(s=>this.normalizeAxis(s,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(r=>t[r]):t.slice().reverse()}static padShape(t,r){let s=t.length;return t.map((t,i)=>t+r[i]+r[i+s])}static areEqual(t,r){return t.length===r.length&&t.every((t,s)=>t===r[s])}},e9=class t{static adjustPoolAttributes(t,r,s,i,n,a){if(!t&&s.length!==r.length-2)throw Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let t=0;t<r.length-2;t++)t>=s.length?s.push(r[t+2]):s[t]=r[t+2];for(let t=0;t<s.length;t++)if(t<i.length){if(i[t]<0)throw Error("strides should be greater than or equal to 1")}else i.push(1);for(let t=0;t<s.length;t++)if(t<n.length){if(n[t]<0)throw Error("dilations should be greater than or equal to 1")}else n.push(1);for(let t=0;t<2*s.length;t++)if(t<a.length){if(a[t]<0)throw Error("pad should be greater than or equal to 1")}else a.push(0);for(let t=0;t<s.length;t++){if(s[t]<=0)throw Error("kernel shapes need to be greater than 0");if(a[t]>=s[t]||a[t+s.length]>=s[t])throw Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(r,s,i,n,a,o,l){if(l){if(a.length!==2*(r.length-2))throw Error("length of pads should be twice the length of data dimensions");if(s.length!==r.length-2)throw Error("length of strides should be the length of data dimensions");if(n.length!==r.length-2)throw Error("length of kernel shapes should be the length of data dimensions");for(let u=0;u<r.length-2;u++)t.adjustPadAndReturnShape(r[u+(o?1:2)],s[u],i[u],n[u],a,u,u+r.length-2,l)}}static computePoolOutputShape(r,s,i,n,a,o,l){if(s.length<=0)throw Error("input shape must be of size greater than 0");let u=[s[0],s[1]];return t.computeShapeHelper(r,s,u,i,n,a,o,l),u}static computeConvOutputShape(r,s,i,n,a,o,l){if(r.length<=0||s.length<=0)throw Error("invalid input tensor dims or invalid filter tensor dims");let u=[r[0],s[0]];return t.computeShapeHelper(!1,r,u,i,n,a,o,l),u}static computeShapeHelper(r,s,i,n,a,o,l,u){if(r)for(let t=0;t<s.length-2;t++)i.push(1);else for(let r=0;r<s.length-2;r++)i.push(t.adjustPadAndReturnShape(s[r+2],n[r],a[r],o[r],l,r,r+s.length-2,u))}static adjustPadAndReturnShape(t,r,s,i,n,a,o,l){let u=s*(i-1)+1;if(!l||"NOTSET"===l)return Math.floor((t+n[a]+n[o]-u)/r+1);switch(l){case"VALID":return n[a]=0,n[o]=0,Math.floor((t-u)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(1!==s)throw Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let s=((t+r-1)/r-1)*r+i-t;return n[a]=Math.floor("SAME_LOWER"===l?(s+1)/2:s/2),n[o]=s-n[a],Math.floor((t+s-i)/r+1)}default:throw Error("Unsupported AutoPad type")}}},e7=class{static getShapeOfGemmResult(t,r,s,i,n){let a,o,l;if(2!==t.length||2!==s.length)throw Error("shape need to be of size 2");r?(a=t[1],o=t[0]):(a=t[0],o=t[1]);let u=-1;if(i?(l=s[0],u=1):(l=s[1],u=0),s[u]!==o)throw Error("dimension mismatch");if(a<=0||l<=0||o<=0)throw Error("invalid shape specified");if(n&&!e8.isValidBroadcast(n,[a,l]))throw Error("gemm: invalid bias shape for broadcast");return[a,l,o]}},te=-34028234663852886e22,tt=34028234663852886e22}),oq=L(()=>{oD(),tr=(t,r)=>new(eW(r))(t)}),oV=L(()=>{oN(),ts=(t,r=!0)=>{if(t.byteLength%8!=0)throw Error("Invalid Uint8Array length - must be a multiple of 8 (BigInt).");let s=t.byteLength/8,i=new BigInt64Array(t.buffer,t.byteOffset,s),n=new Int32Array(s);for(let t=0;t<s;t++){let r=i[t];if(r>2147483647n||r<-2147483648n)throw Error(`Overflow occurred when converting BigInt to Int32 at index ${t}: ${r}`);n[t]=Number(r)}return r?new Uint8Array(n.buffer):n},ti=(t,r=!0)=>{if(t.byteLength%4!=0)throw Error("Invalid Uint8Array length - must be a multiple of 4 (Int32).");let s=t.byteLength/4,i=new Int32Array(t.buffer,t.byteOffset,s),n=BigInt64Array.from(i,BigInt);return r?new Uint8Array(n.buffer):n},tn=1,ta=()=>tn++,to=new Map([["float32",32],["float16",16],["int32",32],["uint32",32],["int64",64],["uint64",64],["int8",8],["uint8",8],["int4",4],["uint4",4]]),tl=(t,r)=>{let s=to.get(t);if(!s)throw Error("Unsupported data type.");return r.length>0?Math.ceil(r.reduce((t,r)=>t*r)*s/8):0},tu=class{constructor(t){this.shouldConvertInt64toInt32=!1,this.isInt64ToInt32Converted=!1;let{sessionId:r,context:s,tensor:i,dataType:n,shape:a,shouldConvertInt64toInt32:o=!1}=t;this.sessionId=r,this.mlContext=s,this.mlTensor=i,this.dataType=n,this.tensorShape=a,this.shouldConvertInt64toInt32=o}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}get byteLength(){return tl(this.dataType,this.tensorShape)}destroy(){e4("verbose",()=>"[WebNN] TensorWrapper.destroy"),this.mlTensor.destroy()}write(t){this.mlContext.writeTensor(this.mlTensor,t)}async read(t,r){if(!t)return r?this.mlContext.readTensor(this.mlTensor,r):this.mlContext.readTensor(this.mlTensor);{let t=ti(new Uint8Array(await this.mlContext.readTensor(this.mlTensor)));return r?void(r instanceof ArrayBuffer?new Uint8Array(r):new Uint8Array(r.buffer,r.byteOffset,r.byteLength)).set(t):t.buffer}}canReuseTensor(t,r,s){return this.mlContext===t&&this.dataType===r&&this.tensorShape.length===s.length&&this.tensorShape.every((t,r)=>t===s[r])}setIsInt64ToInt32Converted(t){this.isInt64ToInt32Converted=t}},td=class{constructor(t,r){this.tensorManager=t,this.wrapper=r}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&(this.tensorManager.releaseTensor(this.tensorWrapper),this.wrapper=void 0)}async ensureTensor(t,r,s,i){let n=r,a=this.tensorManager.getMLContext(t),o="int64"===n&&!a.opSupportLimits().input.dataTypes.includes("int64");if(o&&(n="int32",e4("verbose",()=>"[WebNN] TensorIdTracker.ensureTensor: convert dataType from int64 to int32")),this.wrapper){if(this.wrapper.canReuseTensor(a,n,s))return this.wrapper.tensor;if(i){if(this.wrapper.byteLength!==tl(n,s))throw Error("Unable to copy data to tensor with different size.");this.activeUpload=new Uint8Array(await this.wrapper.read())}this.tensorManager.releaseTensor(this.wrapper)}let l=typeof MLTensorUsage>"u"?void 0:MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(t,n,s,l,!0,!0,o),i&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(t){let r=t;if(this.wrapper)if(this.wrapper.shouldConvertInt64toInt32&&(r=ts(t,!0),this.wrapper.setIsInt64ToInt32Converted(!0)),r.byteLength===this.wrapper.byteLength)return void this.wrapper.write(r);else e4("verbose",()=>"Data size does not match tensor size. Releasing tensor."),this.releaseTensor();this.activeUpload?this.activeUpload.set(r):this.activeUpload=new Uint8Array(r)}async download(t){if(this.activeUpload){let r=this.wrapper?.isInt64ToInt32Converted?ti(this.activeUpload):this.activeUpload;return t?void(t instanceof ArrayBuffer?new Uint8Array(t).set(r):new Uint8Array(t.buffer,t.byteOffset,t.byteLength).set(r)):r.buffer}if(!this.wrapper)throw Error("Tensor has not been created.");return t?this.wrapper.read(this.wrapper?.shouldConvertInt64toInt32,t):this.wrapper.read(this.wrapper?.shouldConvertInt64toInt32)}},tc=class{constructor(t){this.backend=t,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}getMLContext(t){let r=this.backend.getMLContext(t);if(!r)throw Error("MLContext not found for session.");return r}reserveTensorId(){let t=ta();return this.tensorTrackersById.set(t,new td(this)),t}releaseTensorId(t){let r=this.tensorTrackersById.get(t);r&&(this.tensorTrackersById.delete(t),r.tensorWrapper&&this.releaseTensor(r.tensorWrapper))}async ensureTensor(t,r,s,i,n){e4("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${r}, dataType: ${s}, shape: ${i}, copyOld: ${n}}`);let a=this.tensorTrackersById.get(r);if(!a)throw Error("Tensor not found.");return a.ensureTensor(t,s,i,n)}upload(t,r){let s=this.tensorTrackersById.get(t);if(!s)throw Error("Tensor not found.");s.upload(r)}async download(t,r){e4("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${t}, dstBuffer: ${r?.byteLength}}`);let s=this.tensorTrackersById.get(t);if(!s)throw Error("Tensor not found.");return s.download(r)}releaseTensorsForSession(t){for(let r of this.freeTensors)r.sessionId===t&&r.destroy();this.freeTensors=this.freeTensors.filter(r=>r.sessionId!==t)}registerTensor(t,r,s,i){let n=this.getMLContext(t),a=ta(),o=new tu({sessionId:t,context:n,tensor:r,dataType:s,shape:i});return this.tensorTrackersById.set(a,new td(this,o)),this.externalTensors.add(o),a}async getCachedTensor(t,r,s,i,n,a,o=!1){let l=this.getMLContext(t);for(let[i,n]of this.freeTensors.entries())if(n.canReuseTensor(l,r,s)){e4("verbose",()=>`[WebNN] Reusing tensor {dataType: ${r}, shape: ${s}}`);let n=this.freeTensors.splice(i,1)[0];return n.sessionId=t,n}e4("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${r}, shape: ${s}}`);let u=await l.createTensor({dataType:r,shape:s,dimensions:s,usage:i,writable:n,readable:a});return new tu({sessionId:t,context:l,tensor:u,dataType:r,shape:s,shouldConvertInt64toInt32:o})}releaseTensor(t){this.externalTensors.has(t)&&this.externalTensors.delete(t),this.freeTensors.push(t)}},tp=(...t)=>new tc(...t)}),oj=L(()=>{oD(),oB(),oq(),oV(),oN(),th=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[22,"int4"],[21,"uint4"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),tf=(t,r)=>{if(t===r)return!0;if(void 0===t||void 0===r)return!1;let s=Object.keys(t).sort(),i=Object.keys(r).sort();return s.length===i.length&&s.every((s,n)=>s===i[n]&&t[s]===r[s])},tm=class{constructor(t){this.tensorManager=tp(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,this.mlContextCache=[],this.sessionGraphInputs=new Map,this.temporaryGraphInputs=[],this.temporarySessionTensorIds=new Map,e2(t.logLevel,!!t.debug)}get currentSessionId(){if(void 0===this.activeSessionId)throw Error("No active session");return this.activeSessionId}onRunStart(t){e4("verbose",()=>`[WebNN] onRunStart {sessionId: ${t}}`),this.activeSessionId=t}onRunEnd(t){e4("verbose",()=>`[WebNN] onRunEnd {sessionId: ${t}}`);let r=this.temporarySessionTensorIds.get(t);if(r){for(let t of r)e4("verbose",()=>`[WebNN] releasing temporary tensor {tensorId: ${t}}`),this.tensorManager.releaseTensorId(t);this.temporarySessionTensorIds.delete(t),this.activeSessionId=void 0}}async createMLContext(t){if(t instanceof GPUDevice){let r=this.mlContextCache.findIndex(r=>r.gpuDevice===t);if(-1!==r)return this.mlContextCache[r].mlContext;{let r=await navigator.ml.createContext(t);return this.mlContextCache.push({gpuDevice:t,mlContext:r}),r}}if(void 0===t){let t=this.mlContextCache.findIndex(t=>void 0===t.options&&void 0===t.gpuDevice);if(-1!==t)return this.mlContextCache[t].mlContext;{let t=await navigator.ml.createContext();return this.mlContextCache.push({mlContext:t}),t}}let r=this.mlContextCache.findIndex(r=>tf(r.options,t));if(-1!==r)return this.mlContextCache[r].mlContext;{let r=await navigator.ml.createContext(t);return this.mlContextCache.push({options:t,mlContext:r}),r}}registerMLContext(t,r){this.mlContextBySessionId.set(t,r);let s=this.sessionIdsByMLContext.get(r);s||(s=new Set,this.sessionIdsByMLContext.set(r,s)),s.add(t),this.temporaryGraphInputs.length>0&&(this.sessionGraphInputs.set(t,this.temporaryGraphInputs),this.temporaryGraphInputs=[])}onReleaseSession(t){this.sessionGraphInputs.delete(t);let r=this.mlContextBySessionId.get(t);if(!r)return;this.tensorManager.releaseTensorsForSession(t),this.mlContextBySessionId.delete(t);let s=this.sessionIdsByMLContext.get(r);if(s.delete(t),0===s.size){this.sessionIdsByMLContext.delete(r);let t=this.mlContextCache.findIndex(t=>t.mlContext===r);-1!==t&&this.mlContextCache.splice(t,1)}}getMLContext(t){return this.mlContextBySessionId.get(t)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(t){e4("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${t}}`),this.tensorManager.releaseTensorId(t)}async ensureTensor(t,r,s,i,n){let a=th.get(s);if(!a)throw Error(`Unsupported ONNX data type: ${s}`);return this.tensorManager.ensureTensor(t??this.currentSessionId,r,a,i,n)}async createTemporaryTensor(t,r,s){e4("verbose",()=>`[WebNN] createTemporaryTensor {onnxDataType: ${r}, shape: ${s}}`);let i=th.get(r);if(!i)throw Error(`Unsupported ONNX data type: ${r}`);let n=this.tensorManager.reserveTensorId();await this.tensorManager.ensureTensor(t,n,i,s,!1);let a=this.temporarySessionTensorIds.get(t);return a?a.push(n):this.temporarySessionTensorIds.set(t,[n]),n}uploadTensor(t,r){if(!eM().shouldTransferToMLTensor)throw Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");e4("verbose",()=>`[WebNN] uploadTensor {tensorId: ${t}, data: ${r.byteLength}}`),this.tensorManager.upload(t,r)}async downloadTensor(t,r){return this.tensorManager.download(t,r)}createMLTensorDownloader(t,r){return async()=>{let s=await this.tensorManager.download(t);return tr(s,r)}}registerMLTensor(t,r,s,i){let n=th.get(s);if(!n)throw Error(`Unsupported ONNX data type: ${s}`);let a=this.tensorManager.registerTensor(t,r,n,i);return e4("verbose",()=>`[WebNN] registerMLTensor {tensor: ${r}, dataType: ${n}, dimensions: ${i}} -> {tensorId: ${a}}`),a}registerMLConstant(t,r,s,i,n,a,o=!1){if(!a)throw Error("External mounted files are not available.");let l=t;t.startsWith("./")&&(l=t.substring(2));let u=a.get(l);if(!u)throw Error(`File with name ${l} not found in preloaded files.`);if(r+s>u.byteLength)throw Error("Out of bounds: data offset and length exceed the external file data size.");let d=u.slice(r,r+s).buffer,c;switch(n.dataType){case"float32":c=new Float32Array(d);break;case"float16":c="u">typeof Float16Array&&Float16Array.from?new Float16Array(d):new Uint16Array(d);break;case"int32":c=new Int32Array(d);break;case"uint32":c=new Uint32Array(d);break;case"int64":o?(c=ts(new Uint8Array(d),!1),n.dataType="int32"):c=new BigInt64Array(d);break;case"uint64":c=new BigUint64Array(d);break;case"int8":c=new Int8Array(d);break;case"int4":case"uint4":case"uint8":c=new Uint8Array(d);break;default:throw Error(`Unsupported data type: ${n.dataType} in creating WebNN Constant from external data.`)}return e4("verbose",()=>`[WebNN] registerMLConstant {dataType: ${n.dataType}, shape: ${n.shape}}} ${o?"(Note: it was int64 data type and registered to int32 as workaround)":""}`),i.constant(n,c)}registerGraphInput(t){this.temporaryGraphInputs.push(t)}isGraphInput(t,r){let s=this.sessionGraphInputs.get(t);return!!s&&s.includes(r)}isInt64Supported(t){return!!this.mlContextBySessionId.get(t)?.opSupportLimits().input.dataTypes.includes("int64")}flush(){}}}),oG=L(()=>{}),oW=L(()=>{oN(),oG(),t_=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[0xc00000,10],[0x1000000,10],[0x1900000,15],[0x2000000,22],[0x2a30000,2],[0x3840000,6],[0x4000000,6],[0x8000000,6],[0xa000000,6]]),tg=[],ty=t=>16*Math.ceil(Number(t)/16),tw=t=>{for(let r=0;r<tg.length;r++){let s=tg[r];if(t<=s)return s}return 16*Math.ceil(t/16)},tb=1,tx=()=>tb++,tv=async(t,r,s,i)=>{let n=ty(s),a=t.device.createBuffer({size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let o=t.getCommandEncoder();t.endComputePass(),o.copyBufferToBuffer(r,0,a,0,n),t.flush(),await a.mapAsync(GPUMapMode.READ);let l=a.getMappedRange();if(!i)return new Uint8Array(l.slice(0,s));{let t=i();return t.set(new Uint8Array(l,0,s)),t}}finally{a.destroy()}},t$=class{constructor(t){for(let[r]of(this.backend=t,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersPending=[],this.capturedPendingBuffers=new Map,t_))tg.push(r),this.freeBuffers.set(r,[]),this.freeUniformBuffers.set(r,[]);this.sessionCount=0}upload(t,r){let s=r.buffer,i=r.byteOffset,n=r.byteLength,a=ty(n),o=this.storageCache.get(t);if(!o)throw Error("gpu data for uploading does not exist");if(Number(o.originalSize)!==n)throw Error(`inconsistent data size. gpu data size=${o.originalSize}, data size=${n}`);let l=this.backend.device.createBuffer({mappedAtCreation:!0,size:a,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC});new Uint8Array(l.getMappedRange()).set(new Uint8Array(s,i,n)),l.unmap();let u=this.backend.device.createCommandEncoder();u.copyBufferToBuffer(l,0,o.gpuData.buffer,0,a),this.backend.device.queue.submit([u.finish()]),l.destroy(),e4("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${t})`)}memcpy(t,r){let s=this.storageCache.get(t);if(!s)throw Error("source gpu data for memcpy does not exist");let i=this.storageCache.get(r);if(!i)throw Error("destination gpu data for memcpy does not exist");if(s.originalSize!==i.originalSize)throw Error("inconsistent source and destination gpu data size");let n=ty(s.originalSize),a=this.backend.getCommandEncoder();this.backend.endComputePass(),a.copyBufferToBuffer(s.gpuData.buffer,0,i.gpuData.buffer,0,n)}registerExternalBuffer(t,r,s){let i;if(s){if(i=s[0],t===s[1])return e4("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${i}, buffer is the same, skip.`),i;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`)}else i=tx();return this.storageCache.set(i,{gpuData:{id:i,type:0,buffer:t},originalSize:r}),e4("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${i}, registered.`),i}unregisterExternalBuffer(t){void 0!==t&&(this.storageCache.delete(t),e4("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${t}`))}create(t,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let s=tw(t),i,n=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,a=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(n||a){let t=(n?this.freeBuffers:this.freeUniformBuffers).get(s);i=t&&t.length>0?t.pop():this.backend.device.createBuffer({size:s,usage:r})}else i=this.backend.device.createBuffer({size:s,usage:r});let o={id:tx(),type:0,buffer:i};return this.storageCache.set(o.id,{gpuData:o,originalSize:Number(t)}),e4("verbose",()=>`[WebGPU] GpuDataManager.create(size=${t}) => id=${o.id}`),o}get(t){return this.storageCache.get(t)?.gpuData}release(t){let r="bigint"==typeof t?Number(t):t,s=this.storageCache.get(r);if(!s){if(0===this.storageCache.size)return 0;throw Error("releasing data does not exist")}return e4("verbose",()=>`[WebGPU] GpuDataManager.release(id=${r}), gpuDataId=${s.gpuData.id}`),this.storageCache.delete(r),this.buffersPending.push(s.gpuData.buffer),s.originalSize}async download(t,r){let s=this.storageCache.get(Number(t));if(!s)throw Error("data does not exist");await tv(this.backend,s.gpuData.buffer,s.originalSize,r)}refreshPendingBuffers(){if(0!==this.buffersPending.length)if("default"===this.backend.sessionStatus){for(let t of this.buffersPending){let r=t_.get(t.size);if((t.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let s=this.freeBuffers.get(t.size)||[];void 0===r||s.length>=r?t.destroy():s.push(t)}else if((t.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let s=this.freeUniformBuffers.get(t.size)||[];void 0===r||s.length>=r?t.destroy():s.push(t)}else t.destroy()}this.buffersPending=[]}else{let t=this.capturedPendingBuffers.get(this.backend.currentSessionId);for(let r of(t||(t=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,t)),this.buffersPending))t.push(r);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(t=>{t.forEach(t=>{t.destroy()})}),this.freeUniformBuffers.forEach(t=>{t.forEach(t=>{t.destroy()})}),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(t=>{t.forEach(t=>{t.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(t){let r=this.capturedPendingBuffers.get(t);r&&(r.forEach(t=>{t.destroy()}),this.capturedPendingBuffers.delete(t)),this.sessionCount-=1,0===this.sessionCount&&(e4("warning",()=>"[WebGPU] Clearing webgpu buffer cache"),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.storageCache=new Map)}},tk=(...t)=>new t$(...t)}),oH=L(()=>{tE=class{constructor(t){Object.assign(this,t)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(t=>`${this[t]}`).join(";")),this.key}},tS=t=>new tE(t)}),oK=L(()=>{oD(),oF(),tT=64,tI=(t,r)=>{if(3===r)throw Error("vec3 has same alignment as vec4, use vec4 instead");switch(Number(t)){case 10:return r>1?`vec${r}<f16>`:"f16";case 1:return r>1?`vec${r}<f32>`:"f32";case 6:return r>1?`vec${r}<i32>`:"i32";case 12:return r>1?`vec${r}<u32>`:"u32";case 7:if(r>1)throw Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(r>1)throw Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(4!==r)throw Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw Error(`Unknown data type: ${t}`)}},tz=(t,r=1)=>{let s=tI(t,r);return"string"==typeof s?s:s[0]},tA=(t,r=1)=>{let s=tI(t,r);return"string"==typeof s?s:s[1]},tC=(...t)=>{let r=[];return t.forEach(t=>{0!==t.length&&r.push({type:12,data:t},{type:12,data:e5.computeStrides(t)})}),r},tM=t=>t%4==0?4:t%2==0?2:1,tO=(t="f32",r,s="0")=>r&&1!==r?`vec${r}<${t}>(${s})`:`${t}(${s})`,tB=(t,r,s)=>"f32"===t?s:1===r?`f32(${s})`:`vec${r}<f32>(${s})`,tR=(t,r)=>4===r?`(${t}.x + ${t}.y + ${t}.z + ${t}.w)`:2===r?`(${t}.x + ${t}.y)`:3===r?`(${t}.x + ${t}.y + ${t}.z)`:t,tP=(t,r,s,i)=>t.startsWith("uniforms.")&&s>4?"string"==typeof r?"f16"===i?`${t}[(${r}) / 8][(${r}) % 8 / 4][(${r}) % 8 % 4]`:`${t}[(${r}) / 4][(${r}) % 4]`:"f16"===i?`${t}[${Math.floor(r/8)}][${Math.floor(r%8/4)}][${r%8%4}]`:`${t}[${Math.floor(r/4)}][${r%4}]`:s>1?`${t}[${r}]`:t,tL=(t,r,s,i,n)=>{let a,o,l,u,d="number"==typeof s,c=d?s:s.length,p=[...Array(c).keys()],h=c<2?"u32":c<=4?`vec${c}<u32>`:`array<u32, ${c}>`,f=tI(r,n),m="string"==typeof f?f:f[1],_={indices:h,value:m,storage:"string"==typeof f?f:f[0],tensor:r},g=t=>"string"==typeof t?t:`${t}u`,y={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},w=d?"uniforms.":"",b=`${w}${t}_shape`,x=`${w}${t}_strides`,v="";for(let t=0;t<c-1;t++)v+=`
    let dim${t} = current / ${tP(x,t,c)};
    let rest${t} = current % ${tP(x,t,c)};
    indices[${t}] = dim${t};
    current = rest${t};
    `;v+=`indices[${c-1}] = current;`;let $=c<2?"":`
  fn o2i_${t}(offset: u32) -> ${_.indices} {
    var indices: ${_.indices};
    var current = offset;
    ${v}
    return indices;
  }`,k=[];if(c>=2)for(let t=c-1;t>=0;t--)k.push(`${tP(x,t,c)} * (indices[${t}])`);let E=c<2?"":`
  fn i2o_${t}(indices: ${_.indices}) -> u32 {
    return ${k.join("+")};
  }`,S=(...t)=>0===c?"0u":`${_.indices}(${t.map(g).join(",")})`,T=(t,r)=>c<2?`${t}`:`${tP(t,r,c)}`,I={},z=(r,s)=>(()=>{if(_.storage===_.value)return`${t}[${r}]=${s};`;if("vec2<u32>"===_.storage&&"i32"===_.value)return`${t}[${r}]=vec2<u32>(u32(${s}), select(0u, 0xFFFFFFFFu, ${s} < 0));`;if("vec2<u32>"===_.storage&&"u32"===_.value)return`${t}[${r}]=vec2<u32>(u32(${s}), 0u);`;if("u32"===_.storage&&"vec4<bool>"===_.value)return`${t}[${r}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${s}));`;throw Error(`not supported combination of storage type ${_.storage} and value type ${_.value} yet`)})(),A=r=>(()=>{if(_.storage===_.value)return`${t}[${r}]`;if("vec2<u32>"===_.storage&&"i32"===_.value)return`i32(${t}[${r}].x)`;if("vec2<u32>"===_.storage&&"u32"===_.value)return`u32(${t}[${r}].x)`;if("u32"===_.storage&&"vec4<bool>"===_.value)return`vec4<bool>(bool(${t}[${r}] & 0xFFu), bool(${t}[${r}] & 0xFF00u), bool(${t}[${r}] & 0xFF0000u), bool(${t}[${r}] & 0xFF000000u))`;throw Error(`not supported combination of storage type ${_.storage} and value type ${_.value} yet`)})(),C=c<2?"":`
  fn get_${t}ByIndices(indices: ${_.indices}) -> ${m} {
    return ${A(`i2o_${t}(indices)`)};
  }`,M=c<2?"":(a=p.map(t=>`d${t}: u32`).join(", "),o=p.map(t=>`d${t}`).join(", "),`
  fn get_${t}(${a}) -> ${m} {
    return get_${t}ByIndices(${S(o)});
  }`),O=c<2?"":`
  fn set_${t}ByIndices(indices: ${_.indices}, value: ${m}) {
    ${z(`i2o_${t}(indices)`,"value")}
  }`,B=c<2?"":(l=p.map(t=>`d${t}: u32`).join(", "),u=p.map(t=>`d${t}`).join(", "),`
  fn set_${t}(${l}, value: ${m}) {
    set_${t}ByIndices(${S(u)}, value);
  }`);return{impl:()=>{let t=[],r=!1;return y.offsetToIndices&&(t.push($),r=!0),y.indicesToOffset&&(t.push(E),r=!0),y.broadcastedIndicesToOffset&&(Object.values(I).forEach(r=>t.push(r)),r=!0),y.set&&(t.push(B),r=!0),y.setByIndices&&(t.push(O),r=!0),y.get&&(t.push(M),r=!0),y.getByIndices&&(t.push(C),r=!0),!d&&r&&t.unshift(`const ${b} = ${_.indices}(${s.join(",")});`,`const ${x} = ${_.indices}(${e5.computeStrides(s).join(",")});`),t.join(`
`)},type:_,offsetToIndices:r=>(y.offsetToIndices=!0,c<2?r:`o2i_${t}(${r})`),indicesToOffset:r=>(y.indicesToOffset=!0,c<2?r:`i2o_${t}(${r})`),broadcastedIndicesToOffset:(r,s)=>{y.broadcastedIndicesToOffset=!0;let i=`${s.name}broadcastedIndicesTo${t}Offset`;if(i in I)return`${i}(${r})`;let n=[];for(let t=c-1;t>=0;t--){let r=s.indicesGet("outputIndices",t+s.rank-c);n.push(`${T(x,t)} * (${r} % ${T(b,t)})`)}return I[i]=`fn ${i}(outputIndices: ${s.type.indices}) -> u32 {
             return ${n.length>0?n.join("+"):"0u"};
           }`,`${i}(${r})`},indices:S,indicesGet:T,indicesSet:(t,r,s)=>c<2?`${t}=${s};`:`${tP(t,r,c)}=${s};`,set:(...r)=>{if(r.length!==c+1)throw Error(`indices length must be ${c}`);let s=r[c];if("string"!=typeof s)throw Error("value must be string");let i=r.slice(0,c).map(g).join(",");return 0===c?z("0u",s):1===c?z(i[0],s):(y.set=!0,y.setByIndices=!0,y.indicesToOffset=!0,`set_${t}(${i}, ${s})`)},setByOffset:z,setByIndices:(r,s)=>c<2?z(r,s):(y.setByIndices=!0,y.indicesToOffset=!0,`set_${t}ByIndices(${r}, ${s});`),get:(...r)=>{if(r.length!==c)throw Error(`indices length must be ${c}`);let s=r.map(g).join(",");return 0===c?A("0u"):1===c?A(s[0]):(y.get=!0,y.getByIndices=!0,y.indicesToOffset=!0,`get_${t}(${s})`)},getByOffset:A,getByIndices:r=>c<2?A(r):(y.getByIndices=!0,y.indicesToOffset=!0,`get_${t}ByIndices(${r})`),usage:i,name:t,strides:x,shape:b,rank:c}},tD=(t,r,s,i=1)=>tL(t,r,s,"input",i),tU=(t,r,s,i=1)=>tL(t,r,s,"output",i),tN=(t,r,s)=>tL(t,r,s,"atomicOutput",1),tF=(t,r,s,i=1)=>tL(t,r,s,"internal",i),tq=class{constructor(t,r){this.normalizedDispatchGroup=t,this.limits=r,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(t){return`if (global_idx >= ${"number"==typeof t?`${t}u`:t}) { return; }`}mainStart(t=tT){let r="number"==typeof t?t:t[0],s="number"==typeof t?1:t[1],i="number"==typeof t?1:t[2];if(r>this.limits.maxComputeWorkgroupSizeX||s>this.limits.maxComputeWorkgroupSizeY||i>this.limits.maxComputeWorkgroupSizeZ)throw Error(`workgroup size [${r}, ${s}, ${i}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(r*s*i>this.limits.maxComputeInvocationsPerWorkgroup)throw Error(`workgroup size [${r}, ${s}, ${i}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let n=1===this.normalizedDispatchGroup[1]&&1===this.normalizedDispatchGroup[2],a=n?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,o=n?`let global_idx = global_id.x;
         let workgroup_index = workgroup_id.x;`:`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
             workgroup_id.y * num_workgroups[0] + workgroup_id.x;
         let global_idx = workgroup_index * ${r*s*i}u + local_idx;`;return`@compute @workgroup_size(${r}, ${s}, ${i})
  fn main(${a}) {
    ${o}
  `}appendVariableUniforms(t){0!==t.rank&&(t.shape.startsWith("uniforms.")&&this.uniforms.push({name:t.shape.replace("uniforms.",""),type:"u32",length:t.rank}),t.strides.startsWith("uniforms.")&&this.uniforms.push({name:t.strides.replace("uniforms.",""),type:"u32",length:t.rank}))}declareVariable(t,r){if("internal"===t.usage)throw Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(t),this.appendVariableUniforms(t);let s="input"===t.usage?"read":"read_write",i="atomicOutput"===t.usage?"atomic<i32>":t.type.storage;return`@group(0) @binding(${r}) var<storage, ${s}> ${t.name}: array<${i}>;`}declareVariables(...t){return t.map(t=>this.declareVariable(t,this.variableIndex++)).join(`
`)}registerInternalVariable(t){if("internal"!==t.usage)throw Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(t),this.appendVariableUniforms(t)}registerInternalVariables(...t){return t.forEach(t=>this.registerInternalVariable(t)),this}registerUniform(t,r,s=1){return this.uniforms.push({name:t,type:r,length:s}),this}registerUniforms(t){return this.uniforms=this.uniforms.concat(t),this}uniformDeclaration(){if(0===this.uniforms.length)return"";let t=[];for(let{name:r,type:s,length:i}of this.uniforms)if(i&&i>4)"f16"===s?t.push(`@align(16) ${r}:array<mat2x4<${s}>, ${Math.ceil(i/8)}>`):t.push(`${r}:array<vec4<${s}>, ${Math.ceil(i/4)}>`);else{let n=null==i||1===i?s:`vec${i}<${s}>`;t.push(`${r}:${n}`)}return`
      struct Uniforms { ${t.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(t=>t.impl()).join(`
`)+this.internalVariables.map(t=>t.impl()).join(`
`)}get variablesInfo(){if(0===this.uniforms.length)return;let t=t=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(t)];return this.uniforms.map(r=>[t(r.type),r.length??1])}},tV=(t,r)=>new tq(t,r)}),oX=L(()=>{oD(),oF(),oH(),oK(),tj=(t,r)=>{if(!t||1!==t.length)throw Error("Transpose requires 1 input.");if(0!==r.length&&r.length!==t[0].dims.length)throw Error(`perm size ${r.length} does not match input rank ${t[0].dims.length}`)},tG=(t,r)=>0!==r.length?r:[...Array(t).keys()].reverse(),tW=(t,r)=>e5.sortBasedOnPerm(t,tG(t.length,r)),tH=(t,r,s,i)=>{let n=`fn perm(i: ${i.type.indices}) -> ${s.type.indices} {
    var a: ${s.type.indices};`;for(let s=0;s<r;++s)n+=`a[${t[s]}]=i[${s}];`;return n+"return a;}"},tK=(t,r)=>{let s=[],i=[];for(let n=0;n<t.length;++n)1!==t[n]&&s.push(t[n]),1!==t[r[n]]&&i.push(r[n]);return{newShape:s,newPerm:i}},tX=(t,r)=>{let s=0;for(let i=0;i<t.length;++i)if(1!==r[t[i]]){if(t[i]<s)return!1;s=t[i]}return!0},tY=(t,r)=>{let s=t.dataType,i=t.dims.length,n=tG(i,r),a=tW(t.dims,n),o=t.dims,l=a,u;if(i<2||tX(n,t.dims))return{name:"TransposeCopy",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let r=e5.size(a);return{outputs:[{dims:a,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(r/64/4)},programUniforms:[{type:12,data:Math.ceil(r/4)}]}},getShaderSource:t=>{let r=tD("input",s,o,4),i=tU("output",s,l,4);return`
  ${t.registerUniform("output_size","u32").declareVariables(r,i)}
  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    output[global_idx] = input[global_idx];
  }`}};let{newShape:d,newPerm:c}=tK(t.dims,n),p=e5.areEqual(c,[2,3,1]),h=e5.areEqual(c,[3,1,2]);return 2===d.length||p||h?(l=[(o=p?[d[0],d[1]*d[2]]:h?[d[0]*d[1],d[2]]:d)[1],o[0]],{name:"TransposeShared",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let r=e5.size(a);return{outputs:[{dims:a,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(l[1]/16),y:Math.ceil(l[0]/16)},programUniforms:[{type:12,data:r},...tC(o,l)]}},getShaderSource:t=>{let r=tD("a",s,o.length),i=tU("output",s,l.length);return`
  ${t.registerUniform("output_size","u32").declareVariables(r,i)}
  var<workgroup> tile : array<array<${i.type.value}, 17>, 16>;
  ${t.mainStart([16,16,1])}
    let stride = (uniforms.output_shape[1] - 1) / 16 + 1;
    let workgroup_id_x = workgroup_index % stride;
    let workgroup_id_y = workgroup_index / stride;
    let input_col = workgroup_id_y * 16u + local_id.x;
    let input_row = workgroup_id_x * 16u + local_id.y;
    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {
      tile[local_id.y][local_id.x] = ${r.getByIndices(`${r.type.indices}(input_row, input_col)`)};
    }
    workgroupBarrier();

    let output_col = workgroup_id_x * 16u + local_id.x;
    let output_row = workgroup_id_y * 16u + local_id.y;
    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {
      ${i.setByIndices(`${i.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}
    }
  }`}}):{name:"Transpose",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>{let r=e5.size(a);return{outputs:[{dims:a,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(r/64)},programUniforms:[{type:12,data:r},...tC(o,l)]}},getShaderSource:t=>{let r=tD("a",s,o.length),a=tU("output",s,l.length);return`
  ${t.registerUniform("output_size","u32").declareVariables(r,a)}

  ${tH(n,i,r,a)}

  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${a.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${a.setByOffset("global_idx",r.getByIndices("aIndices"))}
  }`}}},tQ=(t,r)=>{tj(t.inputs,r.perm),t.compute(tY(t.inputs[0],r.perm))},tZ=t=>tS({perm:t.perm})}),oY=L(()=>{oD(),oF(),oK(),oQ(),oX(),tJ={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},t0={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},t1={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},t2={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},t3=(t,r)=>{let s=[];for(let i=r-t;i<r;++i)s.push(i);return s},t4=(t,r)=>{let s=[],i=t.length;for(let n=0;n<i;n++)-1===r.indexOf(n)&&s.push(t[n]);return[s,r.map(r=>t[r])]},t6=(t,r)=>{let s=t.length+r.length,i=[],n=0;for(let a=0;a<s;a++)-1===r.indexOf(a)?i.push(t[n++]):i.push(1);return i},t8=(t,r)=>{for(let s=0;s<t.length;++s)if(t[t.length-s-1]!==r-1-s)return!1;return!0},t5=(t,r)=>{let s=[];if(!t8(t,r)){for(let i=0;i<r;++i)-1===t.indexOf(i)&&s.push(i);t.forEach(t=>s.push(t))}return s},t9=(t,r,s,i,n,a,o)=>{let l=s[0].dims,u=e5.size(a),d=e5.size(o),c=tD("_A",s[0].dataType,l),p=tU("output",n,a),h=64;1===u&&(h=256);let f=`
          var<workgroup> aBestValues : array<f32, ${h}>;
       `;return{name:t,shaderCache:{hint:`${r};${h}`,inputDependencies:["type"]},getShaderSource:t=>`
        ${t.registerUniform("reduceSize","u32").declareVariables(c,p)}
        ${f}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${t.mainStart(h)}

          let outputIndex = global_idx / ${h};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${t1[i]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${h}) {
           let candidate = f32(${c.getByOffset("offset + k")});
           bestValue = ${tJ[i]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${h}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${t0[i]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${p.setByOffset("outputIndex",`${"mean"===i?`${p.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${p.type.storage}(${t2[i]})`}`)};
         }
        }`,getRunData:()=>({outputs:[{dims:a,dataType:n}],dispatchGroup:{x:u},programUniforms:[{type:12,data:d}]})}},t7=(t,r,s,i)=>{let n=1===t.inputs.length?s:rh(t.inputs,s),a=n.axes;0!==a.length||n.noopWithEmptyAxes||(a=t.inputs[0].dims.map((t,r)=>r));let o=e5.normalizeAxes(a,t.inputs[0].dims.length),l=o,u=t.inputs[0],d=t5(l,t.inputs[0].dims.length);d.length>0&&(u=t.compute(tY(t.inputs[0],d),{inputs:[0],outputs:[-1]})[0],l=t3(l.length,u.dims.length));let[c,p]=t4(u.dims,l),h=c;n.keepDims&&(h=t6(c,o)),t.compute(t9(r,n.cacheKey,[u],i,t.inputs[0].dataType,h,p),{inputs:[u]})},re=(t,r)=>{t7(t,"ReduceMeanShared",r,"mean")},rt=(t,r)=>{t7(t,"ReduceL1Shared",r,"l1")},rr=(t,r)=>{t7(t,"ReduceL2Shared",r,"l2")},rs=(t,r)=>{t7(t,"ReduceLogSumExpShared",r,"logSumExp")},ri=(t,r)=>{t7(t,"ReduceMaxShared",r,"max")},rn=(t,r)=>{t7(t,"ReduceMinShared",r,"min")},ra=(t,r)=>{t7(t,"ReduceProdShared",r,"prod")},ro=(t,r)=>{t7(t,"ReduceSumShared",r,"sum")},rl=(t,r)=>{t7(t,"ReduceSumSquareShared",r,"sumSquare")},ru=(t,r)=>{t7(t,"ReduceLogSumShared",r,"logSum")}}),oQ=L(()=>{oD(),oF(),oH(),oK(),oY(),rd=t=>{if(!t||0===t.length||t.length>2)throw Error("Reduce op requires 1 or 2 inputs.");if(2===t.length&&1!==t[1].dims.length)throw Error("Invalid axes input dims.")},rc=t=>["","",`var value = ${t.getByIndices("input_indices")};`,""],rp=(t,r,s,i,n,a,o=!1,l=!1)=>{let u=[],d=s[0].dims,c=d.length,p=e5.normalizeAxes(n,c),h=!l&&0===p.length;d.forEach((t,r)=>{h||p.indexOf(r)>=0?o&&u.push(1):u.push(t)});let f=u.length,m=e5.size(u);return{name:t,shaderCache:r,getShaderSource:t=>{let r=[],n=tD("_A",s[0].dataType,c),l=tU("output",a,f),u=i(n,l,p),m=u[2];for(let t=0,s=0;t<c;t++)h||p.indexOf(t)>=0?(o&&s++,m=`for(var j${t}: u32 = 0; j${t} < ${d[t]}; j${t}++) {
                  ${u[2].includes("last_index")?`let last_index = j${t};`:""}
                  ${n.indicesSet("input_indices",t,`j${t}`)}
                  ${m}
                }`):(r.push(`${n.indicesSet("input_indices",t,l.indicesGet("output_indices",s))};`),s++);return`

        ${t.registerUniform("output_size","u32").declareVariables(n,l)}

        ${t.mainStart()}
          ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${n.type.indices};
          let output_indices = ${l.offsetToIndices("global_idx")};

          ${r.join(`
`)}
          ${u[0]}       // init ops for reduce max/min
          ${u[1]}
          ${m}
          ${u[3]}
          ${4===u.length?l.setByOffset("global_idx","value"):u.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:u,dataType:a}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:[{type:12,data:m},...tC(d,u)]})}},rh=(t,r)=>{let s=[];return t[1].dims[0]>0&&t[1].getBigInt64Array().forEach(t=>s.push(Number(t))),tS({axes:s,keepDims:r.keepDims,noopWithEmptyAxes:r.noopWithEmptyAxes})},rf=(t,r,s,i)=>{let n=t.inputs,a=1===n.length?s:rh(n,s);t.compute(rp(r,{hint:a.cacheKey,inputDependencies:["rank"]},[n[0]],a.noopWithEmptyAxes&&0===a.axes.length?rc:i,a.axes,n[0].dataType,a.keepDims,a.noopWithEmptyAxes),{inputs:[0]})},rm=(t,r)=>{rd(t.inputs),rf(t,"ReduceLogSum",r,(t,r)=>[`var value = ${r.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,"value = log(value);"])},r_=(t,r)=>{rd(t.inputs),rf(t,"ReduceL1",r,(t,r)=>[`var value = ${r.type.storage}(0);`,"",`value += abs(${t.getByIndices("input_indices")});`,""])},rg=(t,r)=>{rd(t.inputs),rf(t,"ReduceL2",r,(t,r)=>[`var t = ${r.type.value}(0); var value = ${r.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},ry=(t,r)=>{rd(t.inputs),rf(t,"ReduceLogSumExp",r,(t,r)=>[`var value = ${r.type.storage}(0);`,"",`value += exp(${t.getByIndices("input_indices")});`,"value = log(value);"])},rw=(t,r)=>{rd(t.inputs),rf(t,"ReduceMax",r,(t,r,s)=>{let i=[];for(let r=0;r<t.rank;r++)(s.indexOf(r)>=0||0===s.length)&&i.push(t.indicesSet("input_indices",r,0));return[`${i.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = max(value, ${t.getByIndices("input_indices")});`,""]})},rb=(t,r)=>{rd(t.inputs),rf(t,"ReduceMean",r,(r,s,i)=>{let n=1;for(let s=0;s<r.rank;s++)(i.indexOf(s)>=0||0===i.length)&&(n*=t.inputs[0].dims[s]);return["var sum = f32(0);","",`sum += f32(${r.getByIndices("input_indices")});`,`let value = ${s.type.value}(sum / ${n});`]})},rx=(t,r)=>{rd(t.inputs),rf(t,"ReduceMin",r,(t,r,s)=>{let i=[];for(let r=0;r<t.rank;r++)(s.indexOf(r)>=0||0===s.length)&&i.push(`input_indices[${r}] = 0;`);return[`${i.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = min(value, ${t.getByIndices("input_indices")});`,""]})},rv=(t,r)=>{rd(t.inputs),rf(t,"ReduceProd",r,(t,r)=>[`var value = ${r.type.storage}(1);`,"",`value *= ${t.getByIndices("input_indices")};`,""])},r$=(t,r)=>{rd(t.inputs),rf(t,"ReduceSum",r,(t,r)=>[`var value = ${r.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,""])},rk=(t,r)=>{rd(t.inputs),rf(t,"ReduceSumSquare",r,(t,r)=>[`var t = ${r.type.value}(0); var value = ${r.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += t * t;`,""])},rE=(t,r,s)=>{if(0===r.length)return s;let i=1,n=1;for(let s=0;s<r.length;s++)-1===r.indexOf(s)?i*=t[s]:n*=t[s];return n<32&&i>1024},rS=(t,r)=>{rE(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?rb(t,r):re(t,r)},rT=(t,r)=>{rE(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?r_(t,r):rt(t,r)},rI=(t,r)=>{rE(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?rg(t,r):rr(t,r)},rz=(t,r)=>{rE(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?ry(t,r):rs(t,r)},rA=(t,r)=>{rE(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?rw(t,r):ri(t,r)},rC=(t,r)=>{rE(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?rx(t,r):rn(t,r)},rM=(t,r)=>{rE(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?rv(t,r):ra(t,r)},rO=(t,r)=>{rE(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?r$(t,r):ro(t,r)},rB=(t,r)=>{rE(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?rk(t,r):rl(t,r)},rR=(t,r)=>{rE(t.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?rm(t,r):ru(t,r)}}),oZ=L(()=>{oD(),oH(),oQ(),rP=t=>{if(!t||0===t.length||t.length>2)throw Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(1!==t[0].dataType)throw Error("Invalid input type.")},rL=(t,r)=>{rP(t.inputs),t.compute(rp("ArgMin",{hint:r.cacheKey,inputDependencies:["rank"]},[t.inputs[0]],(t,s,i)=>{let n=[];for(let r=0;r<t.rank;r++)(i.indexOf(r)>=0||0===i.length)&&n.push(`input_indices[${r}] = 0;`);return[`${n.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${t.getByIndices("input_indices")} ${r.selectLastIndex>0?"<=":"<"} value) {
         value = ${t.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",s.setByOffset("global_idx","best_index")]},[r.axis],7,r.keepDims),{inputs:[0]})},rD=(t,r)=>{rP(t.inputs),t.compute(rp("argMax",{hint:r.cacheKey,inputDependencies:["rank"]},[t.inputs[0]],(t,s,i)=>{let n=[];for(let r=0;r<t.rank;r++)(i.indexOf(r)>=0||0===i.length)&&n.push(`input_indices[${r}] = 0;`);return[`${n.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${t.getByIndices("input_indices")} ${r.selectLastIndex>0?">=":">"} value) {
         value = ${t.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",s.setByOffset("global_idx","best_index")]},[r.axis],7,r.keepDims),{inputs:[0]})},rU=t=>tS(t)}),oJ=L(()=>{oD(),oF(),oG(),oK(),rN=(t,r)=>{let s=t[0],i=t[1],n=t[2],a=t[3],o=t[4],l=t[5];if(o&&l)throw Error("Attention cannot have both past and attention_bias");if(3!==s.dims.length)throw Error('Input "input" must have 3 dimensions');let u=s.dims[0],d=s.dims[1],c=s.dims[2];if(1!==n.dims.length)throw Error('Input "bias" is expected to have 1 dimensions');if(2!==i.dims.length)throw Error('Input "weights" is expected to have 2 dimensions');if(i.dims[0]!==c)throw Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(n.dims[0]!==i.dims[1])throw Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let p=n.dims[0]/3,h=p,f=h;if(r.qkvHiddenSizes.length>0){if(3!==r.qkvHiddenSizes.length)throw Error("qkv_hidden_sizes attribute should have 3 elements");for(let t of r.qkvHiddenSizes)if(t%r.numHeads!=0)throw Error("qkv_hidden_sizes should be divisible by num_heads");p=r.qkvHiddenSizes[0],h=r.qkvHiddenSizes[1],f=r.qkvHiddenSizes[2]}if(p!==h)throw Error("qkv_hidden_sizes first element should be same as the second");if(n.dims[0]!==p+h+f)throw Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let m=0;if(o){if(h!==f)throw Error('Input "past" expect k_hidden_size == v_hidden_size');if(5!==o.dims.length)throw Error('Input "past" must have 5 dimensions');if(2!==o.dims[0])throw Error('Input "past" first dimension must be 2');if(o.dims[1]!==u)throw Error('Input "past" second dimension must be batch_size');if(o.dims[2]!==r.numHeads)throw Error('Input "past" third dimension must be num_heads');if(o.dims[4]!==h/r.numHeads)throw Error('Input "past" fifth dimension must be k_hidden_size / num_heads');r.pastPresentShareBuffer||(m=o.dims[3])}let _=d+m;if(a)throw Error("Mask not supported");if(o)throw Error("past is not supported");if(l){if(4!==l.dims.length)throw Error('Input "attention_bias" must have 4 dimensions');if(l.dims[0]!==u||l.dims[1]!==r.numHeads||l.dims[2]!==d||l.dims[3]!==_)throw Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:u,sequenceLength:d,pastSequenceLength:m,kvSequenceLength:d,totalSequenceLength:_,maxSequenceLength:-1,inputHiddenSize:c,hiddenSize:p,vHiddenSize:f,headSize:Math.floor(p/r.numHeads),vHeadSize:Math.floor(f/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:0,scale:r.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},rF=(t,r,s)=>r&&t?`
      let total_sequence_length_input = u32(${r.getByOffset("0")});
      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);
      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;
      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;
      total_sequence_length = u32(${t?.getByOffset("batchIdx")}) + 1;
      var past_sequence_length: u32 = 0;
      if (is_first_prompt == false) {
        past_sequence_length = total_sequence_length - sequence_length;
      }
       `:`
    ${s?"let past_sequence_length = uniforms.past_sequence_length":""};
    let present_sequence_length = total_sequence_length;
    `,rq=(t,r,s,i,n,a,o,l)=>{let u=tM(o?1:a),d=64,c=a/u;c<64&&(d=32);let p=[{type:12,data:r},{type:12,data:s},{type:12,data:i},{type:12,data:n},{type:12,data:c},{type:12,data:Math.ceil(a/u/d)}],h=tz(t.dataType,u),f=tA(1,u),m=["type"];return o&&m.push("type"),l&&m.push("type"),{name:"AttentionProbsSoftmax",shaderCache:{hint:`${d};${h};${u}`,inputDependencies:m},getShaderSource:r=>{let s=tU("x",t.dataType,t.dims,u),i=[s],n=o?tD("seq_lens",o.dataType,o.dims):void 0;n&&i.push(n);let a=l?tD("total_sequence_length_input",l.dataType,l.dims):void 0;a&&i.push(a);let c=tA(t.dataType);return`
  var<workgroup> thread_max: array<f32, ${d}>;
  var<workgroup> thread_sum: array<f32, ${d}>;
  ${r.registerUniforms([{name:"batch_size",type:"u32"},{name:"num_heads",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"sequence_length",type:"u32"},{name:"total_sequence_length",type:"u32"},{name:"elements_per_thread",type:"u32"}]).declareVariables(...i)}
  ${r.mainStart([d,1,1])}
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let sequence_length = uniforms.sequence_length;
    var total_sequence_length = uniforms.total_sequence_length;
    ${rF(n,a,!1)}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = (global_idx / ${d}) * uniforms.total_sequence_length + local_offset;
    let seq_causal_length = ${o?"u32(past_sequence_length + workgroup_id.y + 1)":"total_sequence_length"};
    var thread_max_vector = ${f}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      thread_max_vector = max(${f}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(u){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw Error(`Unsupported components: ${u}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${d}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${f}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      sum_vector += exp(${f}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(u){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw Error(`Unsupported components: ${u}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${d}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        x[offset + i] = ${s.type.value}(${c}(1.0) / ${c}(seq_causal_length));
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        var f32input = ${f}(x[offset + i]);
        x[offset + i] = ${s.type.value}(exp(f32input - max_value) / sum);
      }
    }
      ${o?`
        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {
          x[offset + total_seq_id] = ${s.type.value}(${c}(0));
        }`:""};
  }`},getRunData:()=>({outputs:[],dispatchGroup:{x:1,y:n,z:r*s},programUniforms:p})}},rV=(t,r,s,i,n,a,o,l,u)=>{let d=o+a.kvSequenceLength,c=[a.batchSize,a.numHeads,a.sequenceLength,d],p=t>1&&i,h=a.kvNumHeads?a.kvNumHeads:a.numHeads,f=p?[a.batchSize,h,d,a.headSize]:void 0,m=a.nReps?a.nReps:1,_=0===a.scale?1/Math.sqrt(a.headSize):a.scale,g=tM(a.headSize),y=a.headSize/g,w={x:Math.ceil(d/12),y:Math.ceil(a.sequenceLength/12),z:a.batchSize*a.numHeads},b=[{type:12,data:a.sequenceLength},{type:12,data:y},{type:12,data:d},{type:12,data:a.numHeads},{type:12,data:a.headSize},{type:1,data:_},{type:12,data:o},{type:12,data:a.kvSequenceLength},{type:12,data:m}],x=p&&i&&e5.size(i.dims)>0,v=["type","type"];x&&v.push("type"),n&&v.push("type"),l&&v.push("type"),u&&v.push("type");let $=[{dims:c,dataType:r.dataType,gpuDataType:0}];return p&&$.push({dims:f,dataType:r.dataType,gpuDataType:0}),{name:"AttentionProbs",shaderCache:{hint:`${g};${void 0!==n};${void 0!==i};${t}`,inputDependencies:v},getRunData:()=>({outputs:$,dispatchGroup:w,programUniforms:b}),getShaderSource:t=>{let a=tD("q",r.dataType,r.dims,g),o=[a,tD("key",s.dataType,s.dims,g)];if(x){let t=tD("past_key",i.dataType,i.dims,g);o.push(t)}n&&o.push(tD("attention_bias",n.dataType,n.dims));let d=l?tD("seq_lens",l.dataType,l.dims):void 0;d&&o.push(d);let h=u?tD("total_sequence_length_input",u.dataType,u.dims):void 0;h&&o.push(h);let _=tU("output",r.dataType,c),y=[_];p&&y.push(tU("present_key",r.dataType,f,g));let w=tA(1,g);return`
  const TILE_SIZE = 12u;

  var<workgroup> tileQ: array<${a.type.storage}, 144>;
  var<workgroup> tileK: array<${a.type.storage}, 144>;
  ${t.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}]).declareVariables(...o,...y)}
  ${t.mainStart([12,12,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let kvHeadIdx = ${1===m?"headIdx":"headIdx / uniforms.n_reps"};
    let kv_num_heads = ${1===m?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let sequence_length = uniforms.M;
    var total_sequence_length = uniforms.N;
    ${rF(d,h,!0)}
    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;
    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
    ${x&&p?"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;":""};
    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;
    ${p?"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;":""}
    var value = ${w}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
      ${x&&p?`
              if (n + local_id.y < past_sequence_length) {
                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];
              }`:`
          if (n + local_id.y < uniforms.kv_sequence_length) {
            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
          }`}
      ${p?`if (n + local_id.y < present_sequence_length) {
        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];
      }`:""}
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
          value += ${w}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {
      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(g){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw Error(`Unsupported components: ${g}`)}})()};
        output[outputIdx] = ${_.type.value} (sum * uniforms.alpha) + ${n?"attention_bias[outputIdx]":"0.0"};
    }
  }`}}},rj=(t,r,s,i,n,a,o,l)=>{let u=a+n.kvSequenceLength,d=n.nReps?n.nReps:1,c=n.vHiddenSize*d,p=t>1&&i,h=n.kvNumHeads?n.kvNumHeads:n.numHeads,f=p?[n.batchSize,h,u,n.headSize]:void 0,m=[n.batchSize,n.sequenceLength,c],_={x:Math.ceil(n.vHeadSize/12),y:Math.ceil(n.sequenceLength/12),z:n.batchSize*n.numHeads},g=[{type:12,data:n.sequenceLength},{type:12,data:u},{type:12,data:n.vHeadSize},{type:12,data:n.numHeads},{type:12,data:n.headSize},{type:12,data:c},{type:12,data:a},{type:12,data:n.kvSequenceLength},{type:12,data:d}],y=p&&i&&e5.size(i.dims)>0,w=["type","type"];y&&w.push("type"),o&&w.push("type"),l&&w.push("type");let b=[{dims:m,dataType:r.dataType,gpuDataType:0}];return p&&b.push({dims:f,dataType:r.dataType,gpuDataType:0}),{name:"AttentionScore",shaderCache:{hint:`${void 0!==i};${t}`,inputDependencies:w},getRunData:()=>({outputs:b,dispatchGroup:_,programUniforms:g}),getShaderSource:t=>{let n=tD("probs",r.dataType,r.dims),a=[n,tD("v",s.dataType,s.dims)];y&&a.push(tD("past_value",i.dataType,i.dims));let u=o?tD("seq_lens",o.dataType,o.dims):void 0;o&&a.push(u);let c=l?tD("total_sequence_length_input",l.dataType,l.dims):void 0;l&&a.push(c);let h=[tU("output",r.dataType,m)];return p&&h.push(tU("present_value",r.dataType,f)),`
  const TILE_SIZE = 12u;
  var<workgroup> tileQ: array<${n.type.value}, 144>;
  var<workgroup> tileV: array<${n.type.value}, 144>;
  ${t.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}]).declareVariables(...a,...h)}
  ${t.mainStart([12,12,1])}
   let headIdx = workgroup_id.z % uniforms.num_heads;
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let kvHeadIdx = ${1===d?"headIdx":"headIdx / uniforms.n_reps"};
   let kv_num_heads = ${1===d?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
   let m = global_id.y;
   let n = global_id.x;
   let sequence_length = uniforms.M;
   var total_sequence_length = uniforms.K;
   ${rF(u,c,!0)}
   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch
   ${y&&p?"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;":""};
   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;
   ${p?"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;":""}
   var value = ${n.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
        ${y&&p?`
        if (w + local_id.y < past_sequence_length) {
          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];
        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];
        }
      `:`
            if (w + local_id.y < uniforms.kv_sequence_length) {
              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];
            }`}
        ${p?`
            if (w + local_id.y < present_sequence_length) {
          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];
        }`:""}
      }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + headIdx * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`}}},rG=(t,r,s,i,n,a,o,l,u,d,c,p)=>{let h=Math.min(t.outputCount,1+ +!!o+ +!!l),f=h>1?d.pastSequenceLength:0,m=f+d.kvSequenceLength,_=u&&e5.size(u.dims)>0?u:void 0,g=[r,s];h>1&&o&&e5.size(o.dims)>0&&g.push(o),_&&g.push(_),c&&g.push(c),p&&g.push(p);let y=t.compute(rV(h,r,s,o,_,d,f,c,p),{inputs:g,outputs:h>1?[-1,1]:[-1]})[0];t.compute(rq(y,d.batchSize,d.numHeads,f,d.sequenceLength,m,c,p),{inputs:c&&p?[y,c,p]:[y],outputs:[]});let w=[y,i];h>1&&l&&e5.size(l.dims)>0&&w.push(l),c&&w.push(c),p&&w.push(p),t.compute(rj(h,y,i,l,d,f,c,p),{inputs:w,outputs:h>1?[0,2]:[0]})},rW=(t,r)=>{let s=[r.batchSize,r.numHeads,r.sequenceLength,r.headSize],i=r.sequenceLength,n=r.inputHiddenSize,a=r.headSize,o={x:Math.ceil(r.headSize/12),y:Math.ceil(r.sequenceLength/12),z:r.batchSize*r.numHeads},l=[t.inputs[0],t.inputs[1],t.inputs[2]],u=[{type:12,data:i},{type:12,data:n},{type:12,data:a},{type:12,data:r.numHeads},{type:12,data:r.headSize},{type:12,data:r.hiddenSize},{type:12,data:r.hiddenSize+r.hiddenSize+r.vHiddenSize}];return t.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:s,dataType:t.inputs[0].dataType,gpuDataType:0},{dims:s,dataType:t.inputs[0].dataType,gpuDataType:0},{dims:s,dataType:t.inputs[0].dataType,gpuDataType:0}],dispatchGroup:o,programUniforms:u}),getShaderSource:t=>{let r=tU("output_q",l[0].dataType,s),i=tU("output_k",l[0].dataType,s),n=tU("output_v",l[0].dataType,s),a=tD("input",l[0].dataType,l[0].dims),o=tD("weight",l[1].dataType,l[1].dims),u=tD("bias",l[2].dataType,l[2].dims),d=a.type.storage;return`
  const TILE_SIZE = 12u;
  var<workgroup> tileInput: array<${d}, 144>;
  var<workgroup> tileWeightQ: array<${d}, 144>;
  var<workgroup> tileWeightK: array<${d}, 144>;
  var<workgroup> tileWeightV: array<${d}, 144>;
  ${t.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}]).declareVariables(a,o,u,r,i,n)}
  ${t.mainStart([12,12,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${d}(0);
    var valueK = ${d}(0);
    var valueV = ${d}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`}},{inputs:l,outputs:[-1,-1,-1]})},rH=(t,r)=>{let s=rN(t.inputs,r),[i,n,a]=rW(t,s);return rG(t,i,n,a,t.inputs[4],void 0,void 0,void 0,t.inputs[5],s)}}),o0=L(()=>{ea(),oD(),oF(),oH(),oK(),rK=(t,r)=>{if(!t||5!==t.length)throw Error("BatchNormalization requires 5 inputs");let s=(t,r,s)=>{let i=r.length;if(i!==t.length)throw Error(`${s}: num dimensions != ${i}`);r.forEach((r,i)=>{if(r!==t[i])throw Error(`${s}: dim[${i}] do not match`)})};if(t[0].dims.length>1){let i="NHWC"===r.format?r.spatial?t[0].dims.slice(-1):t[0].dims.slice(-1).concat(t[0].dims.slice(1,t[0].dims.length-1)):t[0].dims.slice(1,r.spatial?2:void 0);s(t[1].dims,i,"Invalid input scale"),s(t[2].dims,i,"Invalid input B"),s(t[3].dims,i,"Invalid input mean"),s(t[4].dims,i,"Invalid input var")}else s(t[1].dims,[1],"Invalid input scale"),s(t[2].dims,[1],"Invalid input B"),s(t[3].dims,[1],"Invalid input mean"),s(t[4].dims,[1],"Invalid input var")},rX=(t,r)=>{let{epsilon:s,spatial:i,format:n}=r,a=t[0].dims,o=i?tM(a[a.length-1]):1,l="NHWC"===n&&a.length>1?o:1,u=e5.size(a)/o,d=i?a.length:a,c=tD("x",t[0].dataType,t[0].dims,o),p=tD("scale",t[1].dataType,t[1].dims,l),h=tD("bias",t[2].dataType,t[2].dims,l),f=tD("inputMean",t[3].dataType,t[3].dims,l),m=tD("inputVar",t[4].dataType,t[4].dims,l),_=tU("y",t[0].dataType,d,o),g=()=>{let t="";if(i)t=`let cOffset = ${1===a.length?"0u":"NHWC"===n?`outputIndices[${a.length-1}] / ${o}`:"outputIndices[1]"};`;else if("NCHW"===n)t=`
            ${_.indicesSet("outputIndices","0","0")}
            let cOffset = ${_.indicesToOffset("outputIndices")};`;else{t=`var cIndices = ${p.type.indices}(0);
                       cIndices[0] = outputIndices[${a.length-1}];`;for(let r=1;r<p.rank;r++)t+=`cIndices[${r}] = outputIndices[${r}];`;t+=`let cOffset = ${p.indicesToOffset("cIndices")};`}return t};return{name:"BatchNormalization",shaderCache:{hint:`${r.epsilon}_${r.format}_${i}_${o}`,inputDependencies:i?["rank","type","type","type","type"]:void 0},getShaderSource:t=>`
  const epsilon = ${s};
  ${t.registerUniform("outputSize","u32").declareVariables(c,p,h,f,m,_)}
  ${t.mainStart()}
  ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${_.offsetToIndices(`global_idx * ${o}`)};
    ${g()}
    let scale = ${p.getByOffset("cOffset")};
    let bias = ${h.getByOffset("cOffset")};
    let inputMean = ${f.getByOffset("cOffset")};
    let inputVar = ${m.getByOffset("cOffset")};
    let x = ${c.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${_.setByOffset("global_idx","value")}
  }`,getRunData:()=>({outputs:[{dims:t[0].dims,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:i?[{type:12,data:u},...tC(a)]:[{type:12,data:u}]})}},rY=t=>tS(t),rQ=(t,r)=>{let{inputs:s,outputCount:i}=t,n=rY({...r,outputCount:i});if(u.webgpu.validateInputContent&&rK(s,n),r.trainingMode)throw Error("BatchNormalization trainingMode is not supported yet.");t.compute(rX(s,n))}}),o1=L(()=>{oF(),oK(),rZ=t=>{if(3!==t[0].dims.length)throw Error("input should have 3 dimensions");if(![320,640,1280].includes(t[0].dims[2]))throw Error("number of channels should be 320, 640 or 1280");if(1!==t[1].dims.length)throw Error("bias is expected to have 1 dimensions");if(t[0].dims[2]!==t[1].dims[0])throw Error("last dimension of input and bias are not the same")},rJ=t=>{let r=t[0].dims,s=t[0].dims[2],i=e5.size(r)/4,n=t[0].dataType,a=tD("input",n,r,4),o=tD("bias",n,[s],4),l=tD("residual",n,r,4),u=tU("output",n,r,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:r,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)}}),getShaderSource:t=>`
  const channels = ${s}u / 4;
  ${t.declareVariables(a,o,l,u)}

  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes(i)}
    let value = ${a.getByOffset("global_idx")}
      + ${o.getByOffset("global_idx % channels")} + ${l.getByOffset("global_idx")};
    ${u.setByOffset("global_idx","value")}
  }`}},r0=t=>{rZ(t.inputs),t.compute(rJ(t.inputs))}}),o2=L(()=>{oD(),oF(),oH(),oK(),r1=(t,r,s,i,n,a,o)=>{let l=Math.ceil(r/4),u="";u="string"==typeof n?`${n}(a)`:n("a");let d=tD("inputData",s,[l],4),c=tU("outputData",i,[l],4),p=[{name:"vec_size",type:"u32"}];return o&&p.push(...o),`
      ${t.registerUniforms(p).declareVariables(d,c)}

  ${a??""}

  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${d.getByOffset("global_idx")};
    ${c.setByOffset("global_idx",u)}
  }`},r2=(t,r,s,i,n,a=t.dataType,o,l)=>{let u=[{type:12,data:Math.ceil(e5.size(t.dims)/4)}];return o&&u.push(...o),{name:r,shaderCache:{hint:n,inputDependencies:["type"]},getShaderSource:r=>r1(r,e5.size(t.dims),t.dataType,a,s,i,l),getRunData:r=>({outputs:[{dims:t.dims,dataType:a}],dispatchGroup:{x:Math.ceil(e5.size(r[0].dims)/64/4)},programUniforms:u})}},r3=t=>{t.compute(r2(t.inputs[0],"Abs","abs"))},r4=t=>{t.compute(r2(t.inputs[0],"Acos","acos"))},r6=t=>{t.compute(r2(t.inputs[0],"Acosh","acosh"))},r8=t=>{t.compute(r2(t.inputs[0],"Asin","asin"))},r5=t=>{t.compute(r2(t.inputs[0],"Asinh","asinh"))},r9=t=>{t.compute(r2(t.inputs[0],"Atan","atan"))},r7=t=>{t.compute(r2(t.inputs[0],"Atanh","atanh"))},se=t=>tS(t),st=(t,r)=>{let s;switch(r.to){case 10:s="vec4<f16>";break;case 1:s="vec4<f32>";break;case 12:s="vec4<u32>";break;case 6:s="vec4<i32>";break;case 9:s="vec4<bool>";break;default:throw RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${r.to}`)}t.compute(r2(t.inputs[0],"Cast",s,void 0,r.cacheKey,r.to))},sr=t=>{let r,s,i=t.length>=2&&0!==t[1].data,n=t.length>=3&&0!==t[2].data;switch(t[0].dataType){case 1:r=i?t[1].getFloat32Array()[0]:-34028234663852886e22,s=n?t[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:r=i?t[1].getUint16Array()[0]:64511,s=n?t[2].getUint16Array()[0]:31743;break;default:throw Error("Unsupport data type")}return tS({min:r,max:s})},ss=(t,r)=>{let s=r||sr(t.inputs),i=tA(t.inputs[0].dataType);t.compute(r2(t.inputs[0],"Clip",t=>`clamp(${t}, vec4<${i}>(uniforms.min), vec4<${i}>(uniforms.max))`,void 0,s.cacheKey,void 0,[{type:t.inputs[0].dataType,data:s.min},{type:t.inputs[0].dataType,data:s.max}],[{name:"min",type:i},{name:"max",type:i}]),{inputs:[0]})},si=t=>{t.compute(r2(t.inputs[0],"Ceil","ceil"))},sn=t=>{t.compute(r2(t.inputs[0],"Cos","cos"))},sa=t=>{t.compute(r2(t.inputs[0],"Cosh","cosh"))},so=t=>tS(t),sl=(t,r)=>{let s=tA(t.inputs[0].dataType);t.compute(r2(t.inputs[0],"Elu",t=>`elu_vf32(${t})`,`
  const elu_alpha_ = ${s}(${r.alpha});

  fn elu_f32(a: ${s}) -> ${s} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${s}>) -> vec4<${s}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,r.cacheKey))},su=(t="f32")=>`
const r0: ${t} = 0.3275911;
const r1: ${t} = 0.254829592;
const r2: ${t} = -0.284496736;
const r3: ${t} = 1.421413741;
const r4: ${t} = -1.453152027;
const r5: ${t} = 1.061405429;

fn erf_vf32(v: vec4<${t}>) -> vec4<${t}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,sd=t=>{let r=tA(t.inputs[0].dataType);t.compute(r2(t.inputs[0],"Erf",t=>`erf_vf32(${t})`,su(r)))},sc=t=>{t.compute(r2(t.inputs[0],"Exp","exp"))},sp=t=>{t.compute(r2(t.inputs[0],"Floor","floor"))},sh=t=>{let r=tA(t.inputs[0].dataType);t.compute(r2(t.inputs[0],"Gelu",t=>`0.5 * ${t} * (1.0 + erf_vf32(${t} * 0.7071067811865475))`,su(r)))},sf=(t,r)=>{let s=tA(t.inputs[0].dataType);t.compute(r2(t.inputs[0],"LeakyRelu",t=>`select(leaky_relu_alpha_ * ${t}, ${t}, ${t} >= vec4<${s}>(0.0))`,`const leaky_relu_alpha_ = ${s}(${r.alpha});`,r.cacheKey))},sm=t=>{t.compute(r2(t.inputs[0],"Not",t=>`!${t}`))},s_=t=>{t.compute(r2(t.inputs[0],"Neg",t=>`-${t}`))},sg=t=>{t.compute(r2(t.inputs[0],"Reciprocal",t=>`1.0/${t}`))},sy=t=>{let r=tA(t.inputs[0].dataType);t.compute(r2(t.inputs[0],"Relu",t=>`select(vec4<${r}>(0.0), ${t}, ${t} > vec4<${r}>(0.0))`))},sw=t=>{t.compute(r2(t.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},sb=t=>tS(t),sx=(t,r)=>{let s=tA(t.inputs[0].dataType);t.compute(r2(t.inputs[0],"HardSigmoid",t=>`max(vec4<${s}>(0.0), min(vec4<${s}>(1.0), ${r.alpha} * ${t} + vec4<${s}>(${r.beta})))`,void 0,r.cacheKey))},sv=t=>{t.compute(r2(t.inputs[0],"Sin","sin"))},s$=t=>{t.compute(r2(t.inputs[0],"Sinh","sinh"))},sk=t=>{t.compute(r2(t.inputs[0],"Sqrt","sqrt"))},sE=t=>{t.compute(r2(t.inputs[0],"Tan","tan"))},sS=t=>`sign(${t}) * (1 - exp(-2 * abs(${t}))) / (1 + exp(-2 * abs(${t})))`,sT=t=>{t.compute(r2(t.inputs[0],"Tanh",sS))},sI=(t="f32")=>`
const fast_gelu_a: ${t} = 0.5;
const fast_gelu_b: ${t} = 0.7978845608028654;
const fast_gelu_c: ${t} = 0.035677408136300125;

fn tanh_v(v: vec4<${t}>) -> vec4<${t}> {
  return ${sS("v")};
}
`,sz=t=>`(fast_gelu_a + fast_gelu_a * tanh_v(${t} * (fast_gelu_c * ${t} * ${t} + fast_gelu_b))) * ${t}`,sA=t=>{let r=tA(t.inputs[0].dataType);t.compute(r2(t.inputs[0],"FastGelu",sz,sI(r),void 0,t.inputs[0].dataType))},sC=(t,r)=>{let s=tA(t.inputs[0].dataType);return t.compute(r2(t.inputs[0],"ThresholdedRelu",t=>`select(vec4<${s}>(0.0), ${t}, ${t} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${s}>(${r.alpha});`,r.cacheKey)),0},sM=t=>{t.compute(r2(t.inputs[0],"Log","log"))},sO=(t,r)=>`
const alpha = vec4<${t}>(${r});
const one = ${t}(1.0);
const zero = ${t}(0.0);

fn quick_gelu_impl(x: vec4<${t}>) -> vec4<${t}> {
  let v = x *alpha;
  var x1 : vec4<${t}>;
  for (var i = 0; i < 4; i = i + 1) {
    if (v[i] >= zero) {
      x1[i] = one / (one + exp(-v[i]));
    } else {
      x1[i] = one - one / (one + exp(v[i]));
    }
  }
  return x * x1;
}
`,sB=t=>`quick_gelu_impl(${t})`,sR=(t,r)=>{let s=tA(t.inputs[0].dataType);t.compute(r2(t.inputs[0],"QuickGelu",sB,sO(s,r.alpha),r.cacheKey,t.inputs[0].dataType))}}),o3=L(()=>{oF(),oK(),o2(),sP=t=>{if(3!==t[0].dims.length)throw Error("input should have 3 dimensions");if(![2560,5120,10240].includes(t[0].dims[2]))throw Error("hidden state should be 2560, 5120 or 10240");if(1!==t[1].dims.length)throw Error("bias is expected to have 1 dimensions");if(t[0].dims[2]!==t[1].dims[0])throw Error("last dimension of input and bias are not the same")},sL=t=>{let r=t[0].dims.slice();r[2]=r[2]/2;let s=tD("input",t[0].dataType,t[0].dims,4),i=tD("bias",t[0].dataType,[t[0].dims[2]],4),n=tU("output",t[0].dataType,r,4),a=e5.size(r)/4,o=tz(t[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:r,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)}}),getShaderSource:r=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${t[0].dims[2]/4/2}u;

  ${r.declareVariables(s,i,n)}

  ${su(o)}

  ${r.mainStart()}
    ${r.guardAgainstOutOfBoundsWorkgroupSizes(a)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${n.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},sD=t=>{sP(t.inputs),t.compute(sL(t.inputs))}}),o4=L(()=>{oD(),oF(),oK(),sU=(t,r,s,i,n,a,o,l,u,d,c,p)=>{let h,f;"string"==typeof l?h=f=(t,r)=>`${l}((${t}),(${r}))`:"function"==typeof l?h=f=l:(h=l.scalar,f=l.vector);let m=tU("outputData",c,i.length,4),_=tD("aData",u,r.length,4),g=tD("bData",d,s.length,4),y;if(n)if(a){let t=1===e5.size(r),i=1===e5.size(s),n=r.length>0&&r[r.length-1]%4==0,a=s.length>0&&s[s.length-1]%4==0;y=t||i?m.setByOffset("global_idx",f(t?`${_.type.value}(${_.getByOffset("0")}.x)`:_.getByOffset("global_idx"),i?`${g.type.value}(${g.getByOffset("0")}.x)`:g.getByOffset("global_idx"))):`
            let outputIndices = ${m.offsetToIndices("global_idx * 4u")};
            let offsetA = ${_.broadcastedIndicesToOffset("outputIndices",m)};
            let offsetB = ${g.broadcastedIndicesToOffset("outputIndices",m)};
            ${m.setByOffset("global_idx",f(o||n?_.getByOffset("offsetA / 4u"):`${_.type.value}(${_.getByOffset("offsetA / 4u")}[offsetA % 4u])`,o||a?g.getByOffset("offsetB / 4u"):`${g.type.value}(${g.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else y=m.setByOffset("global_idx",f(_.getByOffset("global_idx"),g.getByOffset("global_idx")));else{if(!a)throw Error("no necessary to use scalar implementation for element-wise binary op implementation.");let t=(t,r,s="")=>{let i=`aData[indexA${r}][componentA${r}]`,n=`bData[indexB${r}][componentB${r}]`;return`
            let outputIndices${r} = ${m.offsetToIndices(`global_idx * 4u + ${r}u`)};
            let offsetA${r} = ${_.broadcastedIndicesToOffset(`outputIndices${r}`,m)};
            let offsetB${r} = ${g.broadcastedIndicesToOffset(`outputIndices${r}`,m)};
            let indexA${r} = offsetA${r} / 4u;
            let indexB${r} = offsetB${r} / 4u;
            let componentA${r} = offsetA${r} % 4u;
            let componentB${r} = offsetB${r} % 4u;
            ${t}[${r}] = ${s}(${h(i,n)});
          `};y=9===c?`
            var data = vec4<u32>(0);
            ${t("data",0,"u32")}
            ${t("data",1,"u32")}
            ${t("data",2,"u32")}
            ${t("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`
            ${t("outputData[global_idx]",0)}
            ${t("outputData[global_idx]",1)}
            ${t("outputData[global_idx]",2)}
            ${t("outputData[global_idx]",3)}
          `}return`
        ${t.registerUniform("vec_size","u32").declareVariables(_,g,m)}

        ${p??""}

        ${t.mainStart()}
        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${y}
      }`},sN=(t,r,s,i,n,a,o=s.dataType)=>{let l=s.dims.map(t=>Number(t)??1),u=i.dims.map(t=>Number(t)??1),d=!e5.areEqual(l,u),c=l,p=e5.size(l),h=!1,f=!1,m=[d];if(d){let t=e8.calcShape(l,u,!1);if(!t)throw Error("Can't perform binary op on the given tensors");c=t.slice(),p=e5.size(c);let r=1===e5.size(l),s=1===e5.size(u),i=l.length>0&&l[l.length-1]%4==0,n=u.length>0&&u[u.length-1]%4==0;m.push(r),m.push(s),m.push(i),m.push(n);let a=1;for(let t=1;t<c.length;t++){let r=l[l.length-t];if(r===u[u.length-t])a*=r;else break}a%4==0?(f=!0,h=!0):(r||s||i||n)&&(h=!0)}else h=!0;return m.push(h),{name:t,shaderCache:{hint:r+m.map(t=>t.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:t=>sU(t,l,u,c,h,d,f,n,s.dataType,i.dataType,o,a),getRunData:()=>({outputs:[{dims:c,dataType:o}],dispatchGroup:{x:Math.ceil(p/64/4)},programUniforms:[{type:12,data:Math.ceil(e5.size(c)/4)},...tC(l,u,c)]})}},sF=(t,r,s,i,n,a)=>{t.compute(sN(r,n??"",t.inputs[0],t.inputs[1],s,i,a))},sq=t=>{sF(t,"Add",(t,r)=>`${t}+${r}`)},sV=t=>{sF(t,"Div",(t,r)=>`${t}/${r}`)},sj=t=>{sF(t,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},sG=t=>{sF(t,"Mul",(t,r)=>`${t}*${r}`)},sW=t=>{let r=tD("input",t.inputs[0].dataType,t.inputs[0].dims).type.value;sF(t,"Pow",{scalar:(t,r)=>`pow_custom(${t},${r})`,vector:(t,r)=>`pow_vector_custom(${t},${r})`},`
    fn pow_custom(a : ${r}, b : ${r}) -> ${r} {
      if (b == ${r}(0.0)) {
        return ${r}(1.0);
      } else if (a < ${r}(0.0) && f32(b) != floor(f32(b))) {
        return ${r}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${r}(1.0), round(f32(abs(b) % ${r}(2.0))) != 1.0) * ${r}(${"i32"===r?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${r}>, b : vec4<${r}>) -> vec4<${r}> {
      // TODO: implement vectorized pow
      return vec4<${r}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},sH=t=>{sF(t,"Sub",(t,r)=>`${t}-${r}`)},sK=t=>{sF(t,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},sX=t=>{sF(t,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},sY=t=>{sF(t,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},sQ=t=>{sF(t,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}}),o6=L(()=>{oD(),oF(),oH(),oK(),sZ=(t,r)=>{if(!t||t.length<1)throw Error("too few inputs");let s=t[0],i=s.dataType,n=s.dims.length;t.forEach((t,a)=>{if(0!==a){if(t.dataType!==i)throw Error("input tensors should be one type");if(t.dims.length!==n)throw Error("input tensors should have the same shape");t.dims.forEach((t,i)=>{if(i!==r&&t!==s.dims[i])throw Error("non concat dimensions must match")})}})},sJ=(t,r)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${t}u>(${r});
    for (var i: u32 = 0u; i < ${t}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${t}u;
  }`,s0=(t,r)=>{let s=t.length,i=[];for(let n=0;n<s;++n){let a=r.setByOffset("global_idx",t[n].getByIndices("indices"));1===s?i.push(a):0===n?i.push(`if (inputIndex == ${n}u) { ${a} }`):n===s-1?i.push(`else { ${a} }`):i.push(`else if (inputIndex == ${n}) { ${a} }`)}return i.join(`
`)},s1=(t,r,s,i)=>{let n=e5.size(s),a=Array(t.length),o=Array(t.length),l=0,u=[],d=[],c=[{type:12,data:n}];for(let s=0;s<t.length;++s)l+=t[s].dims[r],a[s]=l,d.push(t[s].dims.length),o[s]=tD(`input${s}`,i,d[s]),u.push("rank"),c.push({type:12,data:a[s]});for(let r=0;r<t.length;++r)c.push(...tC(t[r].dims));c.push(...tC(s));let p=tU("output",i,s.length),h=p.indicesGet("indices",r),f=Array.from(Array(a.length).keys()).map(t=>`uniforms.sizeInConcatAxis${t}`).join(",");return{name:"Concat",shaderCache:{hint:`${r}`,inputDependencies:u},getRunData:()=>({outputs:[{dims:s,dataType:i}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:c}),getShaderSource:r=>`

  ${(()=>{r.registerUniform("outputSize","u32");for(let s=0;s<t.length;s++)r.registerUniform(`sizeInConcatAxis${s}`,"u32");return r.declareVariables(...o,p)})()}

  ${sJ(a.length,f)}

  ${r.mainStart()}
    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${p.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${h});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${a.length}u>(${f});
      ${h} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${s0(o,p)}
  }`}},s2=(t,r)=>{let s=t.inputs,i=s[0].dims,n=e5.normalizeAxis(r.axis,i.length);sZ(s,n);let a=i.slice();a[n]=s.reduce((t,r)=>t+(r.dims.length>n?r.dims[n]:0),0);let o=s.filter(t=>e5.size(t.dims)>0);t.compute(s1(o,n,a,s[0].dataType),{inputs:o})},s3=t=>tS({axis:t.axis})}),o8=L(()=>{oD(),oF(),s4=(t,r,s="f32")=>{switch(t.activation){case"Relu":return`value = max(value, ${r}(0.0));`;case"Sigmoid":return`value = (${r}(1.0) / (${r}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${r}(${s}(uniforms.clip_min)), ${r}(${s}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${r}(0.0), min(${r}(1.0), ${s}(uniforms.alpha) * value + ${s}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${s}(uniforms.alpha) * value, value, value >= ${r}(0.0));`;case"Tanh":return`let e2x = exp(-2.0 * abs(value));
              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);
        `;case"":return"";default:throw Error(`Unsupported activation ${t.activation}`)}},s6=(t,r)=>{"Clip"===t.activation?r.push({type:1,data:t.clipMax},{type:1,data:t.clipMin}):"HardSigmoid"===t.activation?r.push({type:1,data:t.alpha},{type:1,data:t.beta}):"LeakyRelu"===t.activation&&r.push({type:1,data:t.alpha})},s8=(t,r)=>{"Clip"===t.activation?r.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):"HardSigmoid"===t.activation?r.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):"LeakyRelu"===t.activation&&r.push({name:"alpha",type:"f32"})},s5=t=>{let r=t?.activation||"";if("HardSigmoid"===r){let[s,i]=t?.activation_params||[.2,.5];return{activation:r,alpha:s,beta:i}}if("Clip"===r){let[s,i]=t?.activation_params||[te,tt];return{activation:r,clipMax:i,clipMin:s}}if("LeakyRelu"===r){let[s]=t?.activation_params||[.01];return{activation:r,alpha:s}}return{activation:r}}}),o5=L(()=>{s9=(t,r)=>{switch(t){case 1:return r;case 2:return`vec2<${r}>`;case 3:return`vec3<${r}>`;case 4:return`vec4<${r}>`;default:throw Error(`${t}-component is not supported.`)}},s7=t=>`
      ${t?"value = value + getBiasByOutputCoords(coords);":""}
      `}),o9=L(()=>{ie=t=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${t}.x), i32(${t}.y), i32(${t}.z), 1));
}
`}),o7=L(()=>{oD(),oF(),oK(),o8(),it=(t,r,s,i,n)=>{let a=i-s;return`
      ${Array.from({length:s}).map((s,o)=>`
      if (${tP(r.shape,o,r.rank)} != 1) {
        ${r.indicesSet(t,o,tP(n,o+a,i))}
      } else {
        ${r.indicesSet(t,o,0)}
      }`).join("")}
`},ir=(t,r,s,i,n=!1,a)=>{let o=t[0].dims,l=t[1].dims,u=o[o.length-2],d=l[l.length-1],c=o[o.length-1],p=tM(d),h=tM(c),f=tM(u),m=e5.size(s)/p/f,_=t.length>2,g=i?i.slice(0,-2):s.slice(0,-2),y=[e5.size(g),u,d],w=[{type:12,data:m},{type:12,data:u},{type:12,data:d},{type:12,data:c}];return s6(r,w),w.push(...tC(g,o,l)),_&&w.push(...tC(t[2].dims)),w.push(...tC(y)),{name:"MatMulNaive",shaderCache:{hint:`${r.activation};${p};${h};${f};${n}`,inputDependencies:_?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:a?a(s):s,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:w}),getShaderSource:i=>{let a=tF("batch_dims",t[0].dataType,g.length),u=tD("a",t[0].dataType,o.length,h),d=tD("b",t[1].dataType,l.length,p),c=tU("output",t[0].dataType,y.length,p),m=tz(c.type.tensor),w=s4(r,c.type.value,m),b=[u,d],x="";if(_){let r=n?p:1;b.push(tD("bias",t[2].dataType,t[2].dims.length,r)),x=`${n?`value += bias[col / ${r}];`:`value += ${c.type.value}(bias[row + i]);`}`}let v=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];return s8(r,v),`
  ${i.registerUniforms(v).registerInternalVariables(a).declareVariables(...b,c)}
  ${i.mainStart()}
    ${i.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${p})) * ${p};
    var index1 = global_idx / (uniforms.N / ${p});
    let stride1 = uniforms.M / ${f};
    let row = (index1 % stride1) * ${f};
    let batch = index1 / stride1;

    ${2===s.length?"":`let batch_indices = ${a.offsetToIndices("batch")};`}

    var a_indices: ${u.type.indices};
    ${it("a_indices",u,u.rank-2,a.rank,"batch_indices")}
    ${u.indicesSet("a_indices",u.rank-2,0)}
    ${u.indicesSet("a_indices",u.rank-1,0)}
    let a_offset = ${u.indicesToOffset("a_indices")};

    var b_indices: ${d.type.indices};
    ${it("b_indices",d,d.rank-2,a.rank,"batch_indices")}
    ${d.indicesSet("b_indices",d.rank-2,0)}
    ${d.indicesSet("b_indices",d.rank-1,0)}
    let b_offset = ${d.indicesToOffset("b_indices")};
    var values: array<${c.type.value}, ${f}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${h}) {
      ${(()=>{let t=`var a_data: ${u.type.value};`;for(let r=0;r<h;r++)t+=`
              let b_data${r} = b[(b_offset + (k + ${r}) * uniforms.N + col) / ${p}];`;for(let r=0;r<f;r++){t+=`a_data = a[(a_offset + (row + ${r}) * uniforms.K + k) / ${h}];`;for(let s=0;s<h;s++)t+=`
            values[${r}] = fma(${d.type.value}(a_data${1===h?"":`[${s}]`}), b_data${s}, values[${r}]);
`}return t})()}
    }
    for (var i = 0u; i < ${f}u; i++) {
      var value = values[i];
      ${x}
      ${w}
      let cur_indices = ${c.type.indices}(batch, row + i, col);
      let offset = ${c.indicesToOffset("cur_indices")};
      ${c.setByOffset(`offset / ${p}`,"value")};
    }
  }
  `}}}}),le=L(()=>{oD(),oF(),oK(),o8(),o7(),o5(),is=(t,r)=>t?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${r?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${r?", batchIndices":""});
        `,ii=(t,r)=>t?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${3===r?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${3===r?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${3===r?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,ia=(t,r,s="f32",i,n=!1,a=32,o=!1,l=32)=>{let u=r[1]*t[1],d=r[0]*t[0],c=n?u:a,p=n?a:u,h=c/r[0],f=a/r[1];if(!((n&&4===h&&4===t[1]||!n&&(3===h||4===h))&&c%r[0]==0&&a%r[1]==0&&4===t[0]))throw Error(`If transposeA ${n} is true, innerElementSize ${h} and workPerThread[1] ${t[1]} must be 4.
      Otherwise, innerElementSize ${h} must be 3 or 4.
  tileAWidth ${c} must be divisible by workgroupSize[0]${r[0]}. tileInner ${a} must be divisible by workgroupSize[1] ${r[1]}. colPerThread ${t[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${h}<${s}>, ${c/h}>, ${p}>;
var<workgroup> mm_Bsub: array<array<vec4<${s}>, ${d/t[0]}>, ${a}>;

const rowPerThread = ${t[1]};
const colPerThread = ${t[0]};
const innerElementSize = ${h};
const tileInner = ${a};

@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${o?"0":"i32(globalId.z)"};
  ${i?`let batchIndices = ${i.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${u};

  let num_tiles = ${o?`${Math.ceil(l/a)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${o?`i32(globalId.z) * ${l}`:"0"};

  var acc: array<vec4<${s}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${f};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${is(n,i)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${f}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${i?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${3===h?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${ii(n,h)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},io=(t,r)=>t?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${r?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${r?", batchIndices":""});
            `,il=t=>t?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",iu=(t,r,s="f32",i,n=!1,a=32,o=!1,l=32,u=!1)=>{let d=t[1]*r[1],c=t[0]*r[0],p=n?d:a,h=n?a:d;if(h%r[1]!=0||p%r[0]!=0||a%r[1]!=0)throw Error(`tileAHight ${h} must be divisible by workgroupSize[1]${r[1]}, tileAWidth ${p} must be divisible by workgroupSize[0]${r[0]}, tileInner ${a} must be divisible by workgroupSize[1]${r[1]}`);let f=h/r[1],m=p/r[0],_=a/r[1],g=u?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${d};
    let globalColStart = i32(workgroupId.x) * ${c};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${h}; inputRow = inputRow + ${r[1]}) {
        for (var inputCol = localCol; inputCol < ${p}; inputCol = inputCol + ${r[0]}) {
          ${io(n,i)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${a}; inputRow = inputRow + ${r[1]}) {
            for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${r[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${i?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${s}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${r[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${n?`mm_Asub[k][localRow + innerRow * ${r[1]}];`:`mm_Asub[localRow + innerRow * ${r[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${r[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${r[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${d};

let tileRowA = i32(localId.y) * ${f};
let tileColA = i32(localId.x) * ${m};
let tileRowB = i32(localId.y) * ${_};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${f}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${m}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${io(n,i)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${i?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${s}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${il(n)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${s}, ${p}>, ${h}>;
  var<workgroup> mm_Bsub : array<array<${s}, ${c}>, ${a}>;
  const rowPerThread = ${t[1]};
  const colPerThread = ${t[0]};
  const tileInner = ${a};

@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${o?"0":"i32(globalId.z)"};
    ${i?`let batchIndices = ${i.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${o?`${Math.ceil(l/a)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${o?`i32(globalId.z) * ${l}`:"0"};

    var acc : array<array<${s}, colPerThread>, rowPerThread>;
    ${g}
  }
`},id=(t,r,s,i,n=!1)=>{let[a,o,l,u]=i,d=tz(i[0].type.tensor);return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${a.type.indices}) -> ${s9(t,d)} {
      var value = ${s9(t,d)}(0.0);
      let col = colIn * ${t};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        var aIndices: ${o.type.indices};
        ${it("aIndices",o,o.rank-2,a.rank,"batchIndices")}
        ${o.indicesSet("aIndices",o.rank-2,"u32(row)")}
        ${o.indicesSet("aIndices",o.rank-1,"u32(colIn)")}
        value = ${o.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${a.type.indices}) -> ${s9(t,d)} {
      var value = ${s9(t,d)}(0.0);
      let col = colIn * ${t};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        var bIndices: ${l.type.indices};
        ${it("bIndices",l,l.rank-2,a.rank,"batchIndices")}
        ${l.indicesSet("bIndices",l.rank-2,"u32(row)")}
        ${l.indicesSet("bIndices",l.rank-1,"u32(colIn)")}
        value = ${l.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${s9(t,d)}) {
      let col = colIn * ${t};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${r?`value = value + ${n?"bias[colIn]":`${s9(t,d)}(bias[row])`};`:""}
        ${s}
        ${u.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},ic=(t,r,s,i,n=!1,a)=>{let o=t[0].dims,l=t[1].dims,u=o.slice(0,-2),d=l.slice(0,-2),c=i?i.slice(0,-2):s.slice(0,-2),p=e5.size(c),h=o[o.length-2],f=o[o.length-1],m=l[l.length-1],_=f%4==0&&m%4==0,g=h<=8?[4,1,1]:[4,4,1],y=[8,8,1],w=[Math.ceil(m/y[0]/g[0]),Math.ceil(h/y[1]/g[1]),Math.ceil(p/y[2]/g[2])],b=_?4:1,x=[...u,h,f/b],v=x.length,$=[...d,f,m/b],k=$.length,E=[p,h,m/b],S=[{type:6,data:h},{type:6,data:m},{type:6,data:f}];s6(r,S),S.push(...tC(c,x,$));let T=["rank","rank"],I=t.length>2;return I&&(S.push(...tC(t[2].dims)),T.push("rank")),S.push(...tC(E)),{name:"MatMul",shaderCache:{hint:`${g};${r.activation};${_};${n}`,inputDependencies:T},getRunData:()=>({outputs:[{dims:a?a(s):s,dataType:t[0].dataType}],dispatchGroup:{x:w[0],y:w[1],z:w[2]},programUniforms:S}),getShaderSource:s=>{let i=c.length,a=tF("batchDims",t[0].dataType,i,1),o=tz(t[0].dataType),l=tD("a",t[0].dataType,v,b),u=tD("b",t[1].dataType,k,b),d=tU("result",t[0].dataType,E.length,b),p=[l,u];if(I){let r=n?b:1;p.push(tD("bias",t[2].dataType,t[2].dims.length,r))}let h=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];s8(r,h);let f=tz(d.type.tensor),m=id(b,I,s4(r,d.type.value,f),[a,l,u,d],n);return`
  ${s.registerUniforms(h).registerInternalVariables(a).declareVariables(...p,d)}
  ${m}
  ${_?ia(g,y,o,a):iu(g,y,o,a)}
                   `}}}}),lt=L(()=>{oD(),oN(),oK(),o8(),o5(),o9(),le(),ip=(t,r,s,i,n=!1,a,o=4,l=4,u=4,d="f32")=>{let c=t=>{switch(t){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw Error(`innerElementSize ${t} is not supported.`)}},p=t?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,h=t?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,f=t?"row":"col",m=t?"col":"row",_=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${t?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${f} / outWidth;
    let outCol = ${f} % outWidth;

    let WRow = ${m} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${m} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${m} % inChannels;
    var resData = ${s9(o,d)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${t?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])"} && xCol >= 0 && xCol < ${t?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])"}) {
      ${p}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${(t=>{switch(t){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${d}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw Error(`innerElementSize ${t} is not supported.`)}})(o)}
    }
    return resData;`,g=t?r&&i?`
    let col = colIn * ${o};
    ${_}`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${_}
    }
    return ${s9(o,d)}(0.0);`:i&&s?`
    let col = colIn * ${o};
    ${_}`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${_}
    }
    return ${s9(o,d)}(0.0);`,y=t?i&&s?c(l):`
    let col = colIn * ${l};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${c(l)}
    }
    return ${s9(l,d)}(0.0);`:`
    let col = colIn * ${l};
    if (row < uniforms.dim_inner && col < uniforms.dim_a_outer) {
      ${c(l)}
    }
    return ${s9(l,d)}(0.0);`,w=s9(u,d),b=t?s9(o,d):s9(l,d),x=t?s9(l,d):s9(o,d),v=s4(a,w,d);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${b} {
      ${t?g:y}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${x} {
      ${t?y:g}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${w}) {
      let col = colIn * ${u};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${t?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${h}
      ${s7(n)}
      ${v}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},ih=(t,r,s,i,n,a,o,l,u)=>{let d="NHWC"===r.format,c=d?t[0].dims[3]:t[0].dims[1],p=s[0],h=d?s[2]:s[3],f=d?s[1]:s[2],m=d?s[3]:s[1],_=d&&(c%4==0||c%3==0)&&m%4==0,g=d?m:h*f,y=d?h*f:m,w=[8,8,1],b=i<=8?[4,1,1]:[4,4,1],x=[Math.ceil(g/w[0]/b[0]),Math.ceil(y/w[1]/b[1]),Math.ceil(p/w[2]/b[2])];e4("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${x}`);let v=_?d&&c%4!=0?3:4:1,$=w[1]*b[1],k=w[0]*b[0],E=Math.max(w[0]*v,w[1]),S=i%$==0,T=n%k==0,I=a%E==0,z=_?[v,4,4]:[1,1,1],A=[{type:6,data:i},{type:6,data:n},{type:6,data:a},{type:6,data:[r.pads[0],r.pads[1]]},{type:6,data:r.strides},{type:6,data:r.dilations}];s6(r,A),A.push(...tC(t[0].dims,t[1].dims));let C=["rank","rank"];return o&&(A.push(...tC(t[2].dims)),C.push("rank")),A.push(...tC(s)),{name:"Conv2DMatMul",shaderCache:{hint:`${r.cacheKey};${v};${_};${S};${T};${I};${$};${k};${E}`,inputDependencies:C},getRunData:()=>({outputs:[{dims:u?u(s):s,dataType:t[0].dataType}],dispatchGroup:{x:x[0],y:x[1],z:x[2]},programUniforms:A}),getShaderSource:i=>{let n=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];s8(r,n);let a=_?4:1,u=tz(t[0].dataType),c=`
      fn setOutputAtIndex(flatIndex : i32, value : ${_?`vec4<${u}>`:u}) {
        result[flatIndex] = ${_?`vec4<${u}>`:u}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${_?`vec4<${u}>`:u}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${_?"/ 4":""}, value);
      }`,p=[tD("x",t[0].dataType,t[0].dims.length,3===v?1:v),tD("w",t[1].dataType,t[1].dims.length,a)],h=tU("result",t[0].dataType,s.length,a);if(o){let r=tD("bias",t[2].dataType,t[2].dims.length,a);p.push(r),c+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${_?`vec4<${u}>`:u} {
          return bias[coords.${d?"w":"y"}${_?"/ 4":""}];
        }`}return`
        ${ie("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${i.registerUniforms(n).declareVariables(...p,h)}
        ${c}
        ${ip(d,S,T,I,o,r,z[0],z[1],z[2],u)}
        ${_?ia(b,w,u,void 0,!d,E):iu(b,w,u,void 0,!d,E,!1,void 0,l)}`}}}}),lr=L(()=>{oD(),oN(),oF(),oK(),o8(),o5(),im=t=>{let r=1;for(let s=0;s<t.length;s++)r*=t[s];return r},i_=t=>"number"==typeof t?[t,t,t]:t,ig=(t,r)=>r<=1?t:t+(t-1)*(r-1),iy=(t,r,s,i=1)=>{let n=ig(r,i);return Math.floor((t[0]*(s-1)-s+n)/2)},iw=(t,r,s,i,n)=>{null==n&&(n=iy(t,r[0],i[0]));let a=[0,0,0,s];for(let s=0;s<3;s++)t[s]+2*n>=r[s]&&(a[s]=Math.trunc((t[s]-r[s]+2*n)/i[s]+1));return a},ib=(t,r,s,i,n,a,o,l,u,d)=>{let c,p,h,f;if("VALID"===t&&(t=0),"number"==typeof t){c={top:t,bottom:t,left:t,right:t,front:t,back:t};let m=iw([r,s,i,1],[l,u,d],1,[n,a,o],t);p=m[0],h=m[1],f=m[2]}else if(Array.isArray(t)){if(!t.every((t,r,s)=>t===s[0]))throw Error(`Unsupported padding parameter: ${t}`);c={top:t[0],bottom:t[1],left:t[2],right:t[3],front:t[4],back:t[5]};let m=iw([r,s,i,1],[l,u,d],1,[n,a,o],t[0]);p=m[0],h=m[1],f=m[2]}else if("SAME_UPPER"===t){p=Math.ceil(r/n),h=Math.ceil(s/a),f=Math.ceil(i/o);let t=(p-1)*n+l-r,m=(h-1)*a+u-s,_=(f-1)*o+d-i,g=Math.floor(t/2),y=Math.floor(m/2),w=Math.floor(_/2);c={top:y,bottom:m-y,left:w,right:_-w,front:g,back:t-g}}else throw Error(`Unknown padding parameter: ${t}`);return{padInfo:c,outDepth:p,outHeight:h,outWidth:f}},ix=(t,r,s,i,n,a=!1,o="channelsLast")=>{let l,u,d,c,p;if("channelsLast"===o)[l,u,d,c,p]=t;else if("channelsFirst"===o)[l,p,u,d,c]=t;else throw Error(`Unknown dataFormat ${o}`);let[h,,f,m,_]=r,[g,y,w]=i_(s),[b,x,v]=i_(i),$=ig(f,b),k=ig(m,x),E=ig(_,v),{padInfo:S,outDepth:T,outHeight:I,outWidth:z}=ib(n,u,d,c,g,y,w,$,k,E),A=a?h*p:h,C=[0,0,0,0,0];return"channelsFirst"===o?C=[l,A,T,I,z]:"channelsLast"===o&&(C=[l,T,I,z,A]),{batchSize:l,dataFormat:o,inDepth:u,inHeight:d,inWidth:c,inChannels:p,outDepth:T,outHeight:I,outWidth:z,outChannels:A,padInfo:S,strideDepth:g,strideHeight:y,strideWidth:w,filterDepth:f,filterHeight:m,filterWidth:_,effectiveFilterDepth:$,effectiveFilterHeight:k,effectiveFilterWidth:E,dilationDepth:b,dilationHeight:x,dilationWidth:v,inShape:t,outShape:C,filterShape:r}},iv=(t,r,s,i,n,a)=>{let o="channelsLast"===a,l=(o?t[0].dims[3]:t[0].dims[1],[Math.ceil(im(({x:s.map((t,r)=>r)}).x.map(t=>s[t]))/64),1,1]);e4("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${l}`);let u=[{type:12,data:e5.size(s)},{type:12,data:i},{type:12,data:n},{type:12,data:r.strides},{type:12,data:r.dilations}];s6(r,u),u.push(...tC(t[0].dims,t[1].dims));let d=["rank","rank"],c=3===t.length;return c&&(u.push(...tC(t[2].dims)),d.push("rank")),u.push(...tC(s)),{name:"Conv3DNaive",shaderCache:{hint:`${r.cacheKey};${o};1;${c}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:s,dataType:t[0].dataType}],dispatchGroup:{x:l[0],y:l[1],z:l[2]},programUniforms:u}),getShaderSource:a=>{let l=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:i.length},{name:"pads",type:"u32",length:n.length},{name:"strides",type:"u32",length:r.strides.length},{name:"dilations",type:"u32",length:r.dilations.length}];s8(r,l);let u=tz(t[0].dataType),d=tD("x",t[0].dataType,t[0].dims.length,1),p=tD("W",t[1].dataType,t[1].dims.length,1),h=[d,p],f=tU("result",t[0].dataType,s.length,1),m="";if(c){let r=tD("bias",t[2].dataType,t[2].dims.length,1);h.push(r),m+=`
        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${u} {
          return bias[${o?tP("coords",4,5):tP("coords",1,5)}];
        }`}let _=s9(1,u),g=s4(r,_,u);return`
            ${m}
            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${d.getByIndices("aIndices")};
            }
            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${p.getByIndices("aIndices")};
            }
          ${a.registerUniforms(l).declareVariables(...h,f)}
          ${a.mainStart()}
          ${a.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
              let coords = ${f.offsetToIndices("global_idx")};
              let batch = ${tP("coords",0,d.rank)};
              let d2 = ${o?tP("coords",d.rank-1,d.rank):tP("coords",1,d.rank)};
              let xFRCCorner = vec3<u32>(${o?tP("coords",1,d.rank):tP("coords",2,d.rank)},
              ${o?tP("coords",2,d.rank):tP("coords",3,d.rank)},
              ${o?tP("coords",3,d.rank):tP("coords",4,d.rank)}) * uniforms.strides - uniforms.pads;
              let xFCorner = xFRCCorner.x;
              let xRCorner = xFRCCorner.y;
              let xCCorner = xFRCCorner.z;
              let xShapeY = ${o?tP("uniforms.x_shape",1,d.rank):tP("uniforms.x_shape",2,d.rank)};
              let xShapeZ = ${o?tP("uniforms.x_shape",2,d.rank):tP("uniforms.x_shape",3,d.rank)};
              let xShapeW = ${o?tP("uniforms.x_shape",3,d.rank):tP("uniforms.x_shape",4,d.rank)};
              let xShapeU = ${o?tP("uniforms.x_shape",4,d.rank):tP("uniforms.x_shape",1,d.rank)};
              let inputDepthNearestVec4 = (xShapeU / 4) * 4;
              let inputDepthVec4Remainder = xShapeU % 4;

              var value = 0.0;
              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {
                let xF = xFCorner + wF * uniforms.dilations[0];
                if (xF < 0 || xF >= xShapeY) {
                  continue;
                }

                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {
                  let xR = xRCorner + wR * uniforms.dilations[1];
                  if (xR < 0 || xR >= xShapeZ) {
                    continue;
                  }

                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {
                    let xC = xCCorner + wC * uniforms.dilations[2];
                    if (xC < 0 || xC >= xShapeW) {
                      continue;
                    }

                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {
                      ${o?`let xValues = vec4<f32>(
                               getX(batch, xF, xR, xC, d1),
                               getX(batch, xF, xR, xC, d1 + 1),
                               getX(batch, xF, xR, xC, d1 + 2),
                               getX(batch, xF, xR, xC, d1 + 3));
                            `:`let xValues = vec4<f32>(
                               getX(batch, d1, xF, xR, xC),
                               getX(batch, d1 + 1, xF, xR, xC),
                               getX(batch, d1 + 2, xF, xR, xC),
                               getX(batch, d1 + 3, xF, xR, xC));
                            `}
                            let wValues = vec4<f32>(
                              getW(d2, d1, wF, wR, wC),
                              getW(d2, d1 + 1, wF, wR, wC),
                              getW(d2, d1 + 2, wF, wR, wC),
                              getW(d2, d1 + 3, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                    if (inputDepthVec4Remainder == 1) {
                        ${o?`value += getX(batch, xF, xR, xC, inputDepthNearestVec4)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`:`value += getX(batch, inputDepthNearestVec4, xF, xR, xC)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}
                    } else if (inputDepthVec4Remainder == 2) {
                      ${o?`let xValues = vec2<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));
                      `:`let xValues = vec2<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));
                    `}
                    let wValues = vec2<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));
                      value += dot(xValues, wValues);
                    } else if (inputDepthVec4Remainder == 3) {
                      ${o?`let xValues = vec3<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));
                      `:`let xValues = vec3<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));
                    `}
                    let wValues = vec3<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                  }
                }
              }
              ${c?"value = value + getBiasByOutputCoords(coords)":""};
              ${g}
              result[global_idx] = f32(value);
          }`}}}}),ls=L(()=>{oD(),oF(),oK(),o8(),i$=(t,r,s,i)=>{let n=t.length>2,a=n?"value += b[output_channel];":"",o=t[0].dims,l=t[1].dims,u="NHWC"===r.format,d=u?s[3]:s[1],c=d/r.group,p=u&&c>=4?tM(d):1,h=e5.size(s)/p,f=[{type:12,data:h},{type:12,data:r.dilations},{type:12,data:[r.strides[0],r.strides[1]]},{type:12,data:[r.pads[0],r.pads[1]]},{type:12,data:c}];return s6(r,f),f.push(...tC(o,[l[0],l[1],l[2],l[3]/p])),f.push(...tC([s[0],s[1],s[2],s[3]/p])),{name:"GroupedConv",shaderCache:{hint:`${r.cacheKey}_${p}`,inputDependencies:n?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:i?i(s):s,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:f}),getShaderSource:i=>{let d=tU("output",t[0].dataType,s.length,p),c=tz(d.type.tensor),h=s4(r,d.type.value,c),f=tD("x",t[0].dataType,o.length),m=tD("w",t[1].dataType,l.length,p),_=[f,m];n&&_.push(tD("b",t[2].dataType,t[2].dims,p));let g=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:r.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];s8(r,g);let y=u?`
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {
            let input_channel = in_channel_offset + wInChannel;
            let xVal = ${f.get("batch","xHeight","xWidth","input_channel")};
            let wVal = ${m.get("wHeight","wWidth","wInChannel","output_channel")};
            value += xVal * wVal;
          }
        }
      }
      `:`
      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
        let input_channel = in_channel_offset + wInChannel;
        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {
              continue;
            }

            let xVal = ${f.get("batch","input_channel","xHeight","xWidth")};
            let wVal = ${m.get("output_channel","wInChannel","wHeight","wWidth")};
            value += xVal * wVal;
          }
        }
      }
      `;return`
  ${i.registerUniforms(g).declareVariables(..._,d)}

  ${i.mainStart()}
    ${i.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${d.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${u?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${u?1:2}], outputIndices[${u?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel * ${p} / uniforms.output_channels_per_group;
    var in_channel_offset = group_id * uniforms.w_shape[${u?2:1}];

    var value: ${d.type.value} = ${d.type.value}(0);
    ${y}
    ${a}
    ${h}
    ${d.setByOffset("global_idx","value")}
  }`}}},ik=(t,r,s,i)=>{let n=t.length>2,a=tM(s[3]),o=tM(s[2]),l=e5.size(s)/a/o,u=[t[0].dims[0],t[0].dims[1],t[0].dims[2],t[0].dims[3]/a],d=[t[1].dims[0],t[1].dims[1],t[1].dims[2],t[1].dims[3]/a],c=[s[0],s[1],s[2],s[3]/a],p=[{type:12,data:l},{type:6,data:[r.strides[0],r.strides[1]]},{type:6,data:[r.pads[0],r.pads[1]]}];s6(r,p),p.push(...tC(u,d,c));let h=(o-1)*r.strides[1]+d[1];return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${r.cacheKey};${a};${o};${h};${d[0]};${d[1]}`,inputDependencies:n?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:i?i(s):s,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:p}),getShaderSource:s=>{let i=tU("output",t[0].dataType,c.length,a),l=tz(i.type.tensor),p=s4(r,i.type.value,l),f=tD("x",t[0].dataType,u.length,a),m=tD("w",t[1].dataType,d.length,a),_=[f,m];n&&_.push(tD("b",t[2].dataType,t[2].dims,a));let g=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return s8(r,g),`
  ${s.registerUniforms(g).declareVariables(..._,i)}
  ${s.mainStart()}
    ${s.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${o}u;
    let col = (index1 % width1) * ${o}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${f.type.value}, ${h}>;
    var values: array<${i.type.value}, ${o}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${d[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${h}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${f.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${f.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${d[1]}; w_width++) {
          let w_val = ${m.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${o}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${o}u; i++) {
      var value = values[i];
      ${n?"value += b[output_channel];":""}
      ${p}
      ${i.set("batch","row","col + i","output_channel","value")};
    }
  }`}}}}),li=L(()=>{oF(),lt(),lr(),le(),ls(),o8(),o7(),oX(),iE=(t,r,s,i,n,a)=>{let o=t[0],l=t.slice(a?1:2,a?3:4),u=l.length,d=r[0],c=r.slice(2).map((t,r)=>t+(t-1)*(s[r]-1)),p=l.map((t,r)=>t+i[r]+i[r+u]).map((t,r)=>Math.floor((t-c[r]+n[r])/n[r]));return p.splice(0,0,o),p.splice(a?3:1,0,d),p},iS=[2,3,1,0],iT=(t,r)=>{if(!t||2!==t.length&&3!==t.length)throw Error("Conv requires 2 or 3 inputs");if(t[0].dims.length>5)throw Error("greater than 5D is not supported");if(t[0].dims.length!==t[1].dims.length)throw Error("filter does not have same dimension as input");if(t[0].dims["NHWC"===r.format?t[0].dims.length-1:1]!==t[1].dims[1]*r.group)throw Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(3===t.length&&(1!==t[2].dims.length||t[1].dims[0]!==t[2].dims[0]))throw Error("invalid bias");let s=t[0].dims.length-2;if(r.dilations.length!==s)throw Error(`dilations should be ${s}D`);if(r.strides.length!==s)throw Error(`strides should be ${s}D`);if(r.pads.length!==2*s)throw Error(`pads should be ${2*s}D`);if(0!==r.kernelShape.length&&r.kernelShape.length!==t[1].dims.length-2)throw Error("invalid kernel shape")},iI=(t,r)=>{let s=t.kernelShape.slice();s.length<r[1].dims.length-2&&s.push(...Array(r[1].dims.length-2-s.length).fill(0));for(let t=2;t<r[1].dims.length;++t)0===s[t-2]&&(s[t-2]=r[1].dims[t]);let i=t.pads.slice();e9.adjustPadsBasedOnAutoPad(r[0].dims,t.strides,t.dilations,s,i,"NHWC"===t.format,t.autoPad);let n=Object.assign({},t);return Object.assign(n,{kernelShape:s,pads:i}),n},iz=t=>{let r=s5(t),s=t.format;return{autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][t.auto_pad],format:s,dilations:t.dilations,group:t.group,kernelShape:t.kernel_shape,pads:t.pads,strides:t.strides,wIsConst:t.w_is_const(),...r,cacheKey:`${t.format};${r.activation};`}},iA=(t,r,s,i)=>{let n="NHWC"===s.format,a=iE(r[0].dims,r[1].dims,s.dilations,s.pads,s.strides,n);if(1!==s.group){let o=[r[0]];if(n){let i=t.kernelCustomData.wT??t.compute(tY(r[1],iS),{inputs:[1],outputs:[s.wIsConst?-2:-1]})[0];s.wIsConst&&!t.kernelCustomData.wT&&(t.kernelCustomData.wT=i),o.push(i)}else o.push(r[1]);3===r.length&&o.push(r[2]),!t.adapterInfo.isArchitecture("ampere")&&n&&r[1].dims[0]===s.group&&1===r[1].dims[1]&&1===s.dilations[0]&&1===s.dilations[1]?t.compute(ik(o,s,a,i),{inputs:o}):t.compute(i$(o,s,a,i),{inputs:o});return}let o=3===r.length,l=r[0].dims[n?1:2],u=r[0].dims[n?2:3],d=r[0].dims[n?3:1],c=r[1].dims[2],p=r[1].dims[3],h=a[n?1:2],f=a[n?2:3],m=a[n?3:1],_=n&&c===l&&p===u&&0===s.pads[0]&&0===s.pads[1];if(_||1===c&&1===p&&1===s.dilations[0]&&1===s.dilations[1]&&1===s.strides[0]&&1===s.strides[1]&&0===s.pads[0]&&0===s.pads[1]){let c=a[0],p,g,y,w=[];if(n){let i=t.kernelCustomData.wT??t.compute(tY(r[1],iS),{inputs:[1],outputs:[s.wIsConst?-2:-1]})[0];if(s.wIsConst&&!t.kernelCustomData.wT&&(t.kernelCustomData.wT=i),_){let t=l*u*d;p=r[0].reshape([1,c,t]),g=i.reshape([1,t,m]),y=[1,c,m]}else p=r[0].reshape([c,l*u,d]),g=i.reshape([1,d,m]),y=[c,h*f,m];w.push(p),w.push(g)}else p=r[0].reshape([c,d,l*u]),g=r[1].reshape([1,m,d]),y=[c,m,h*f],w.push(g),w.push(p);o&&w.push(r[2]);let b=y[2],x=w[0].dims[w[0].dims.length-1];b<8&&x<8?t.compute(ir(w,s,a,y,n,i),{inputs:w}):t.compute(ic(w,s,a,y,n,i),{inputs:w});return}let g=t.kernelCustomData.wT??t.compute(tY(r[1],iS),{inputs:[1],outputs:[s.wIsConst?-2:-1]})[0];s.wIsConst&&!t.kernelCustomData.wT&&(t.kernelCustomData.wT=g);let y=[r[0],g];o&&y.push(r[2]);let w=n?h*f:m,b=n?m:h*f,x=c*p*d;t.compute(ih(y,s,a,w,b,x,o,!0,i),{inputs:y})},iC=(t,r)=>{let s="NHWC"===r.format,i=[t.inputs[0].reshape(s?[t.inputs[0].dims[0],1,t.inputs[0].dims[1],t.inputs[0].dims[2]]:[t.inputs[0].dims[0],t.inputs[0].dims[1],1,t.inputs[0].dims[2]]),t.inputs[1].reshape([t.inputs[1].dims[0],t.inputs[1].dims[1],1,t.inputs[1].dims[2]])];3===t.inputs.length&&i.push(t.inputs[2]);let n=[0,r.pads[0],0,r.pads[1]],a=[1].concat(r.strides),o=[1].concat(r.dilations),l=[1].concat(r.kernelShape),u=iI({...r,pads:n,strides:a,dilations:o,kernelShape:l},i);iA(t,i,u,t=>s?[t[0],t[2],t[3]]:[t[0],t[1],t[3]])},iM=(t,r,s)=>{let i="NHWC"===s.format?"channelsLast":"channelsFirst",n=iI(s,r),a="NOTSET"===s.autoPad?s.pads:s.autoPad,o=ix(r[0].dims,r[1].dims,s.strides,s.dilations,a,!1,i);t.compute(iv(r,n,o.outShape,[o.filterDepth,o.filterHeight,o.filterWidth],[o.padInfo.front,o.padInfo.top,o.padInfo.left],i))},iO=(t,r)=>{if(iT(t.inputs,r),3===t.inputs[0].dims.length)iC(t,r);else if(5===t.inputs[0].dims.length)iM(t,t.inputs,r);else{let s=iI(r,t.inputs);iA(t,t.inputs,s)}}}),ln=L(()=>{oD(),oN(),oF(),oK(),iB=(t,r,s)=>{let i=t.length>2,n=r.outputShape,a="NHWC"===r.format,o=r.group,l=t[1].dims,u=l[2]/o,d=l[3],c=a?tM(u):1,p=a&&1===d&&u>=4,h=p?4*Math.floor(u/4):Math.floor(u/c)*c,f=u-h,m=a?tM(d):1,_=a?1===d?c:m:1,g=e5.size(n)/m,y=[Math.ceil(g/64),1,1];e4("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${y}`);let w=["rank","rank"],b=[r.strides[0],r.strides[1]],x=[r.kernelShape[a?1:2],r.kernelShape[a?2:3]],v=[r.dilations[0],r.dilations[1]],$=[x[0]+(r.dilations[0]<=1?0:(r.kernelShape[a?1:2]-1)*(r.dilations[0]-1)),x[1]+(r.dilations[1]<=1?0:(r.kernelShape[a?2:3]-1)*(r.dilations[1]-1))],k=[$[0]-1-Math.floor((r.pads[0]+r.pads[2])/2),$[1]-1-Math.floor((r.pads[1]+r.pads[3])/2)],E=[{type:12,data:g},{type:12,data:b},{type:12,data:x},{type:12,data:v},{type:12,data:$},{type:6,data:k},{type:12,data:h},{type:12,data:u},{type:12,data:d},...tC(t[0].dims,t[1].dims)];return i&&(E.push(...tC(t[2].dims)),w.push("rank")),E.push(...tC(n)),{name:"ConvTranspose2D",shaderCache:{hint:`${r.cacheKey};${c}${_}${m}${p}${f}`,inputDependencies:w},getRunData:()=>({dispatchGroup:{x:y[0],y:y[1],z:y[2]},outputs:[{dims:s?s(n):n,dataType:t[0].dataType}],programUniforms:E}),getShaderSource:r=>{let s=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:b.length},{name:"filter_dims",type:"u32",length:x.length},{name:"dilations",type:"u32",length:x.length},{name:"effective_filter_dims",type:"u32",length:$.length},{name:"pads",type:"i32",length:k.length},{name:"input_channels_per_group_int",type:"u32"},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],o=tz(t[0].dataType),l=a?1:2,u=a?2:3,d=a?3:1,h=tD("W",t[1].dataType,t[1].dims.length,_),g=tD("Dy",t[0].dataType,t[0].dims.length,c),y=[g,h];i&&y.push(tD("bias",t[2].dataType,[n[d]].length,m));let w=tU("result",t[0].dataType,n.length,m),v=`
            let outputIndices = ${w.offsetToIndices(`global_idx * ${m}`)};
            let batch = ${w.indicesGet("outputIndices",0)};
            let d1 = ${w.indicesGet("outputIndices",d)};
            let r = ${w.indicesGet("outputIndices",l)};
            let c = ${w.indicesGet("outputIndices",u)};
            let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
            let dyRCorner = dyCorner.x;
            let dyCCorner = dyCorner.y;
            let groupId = d1 / uniforms.output_channels_per_group;
            let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
            // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
            // ? = to be determined. : = across all values in that axis.
            var dotProd = ${w.type.value}(0.0);
            var wR: u32 = 0;
            if (uniforms.dilations.x == 1) {
              // Minimum wR >= 0 that satisfies (dyRCorner + wR) % (uniforms.strides.x) == 0
              wR = u32(((dyRCorner + i32(uniforms.strides.x) - 1) / i32(uniforms.strides.x)) * i32(uniforms.strides.x) - dyRCorner);
            }
            for (; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
              if (wR % uniforms.dilations.x != 0) {
                continue;
              }
              let dyR = (${o}(dyRCorner) + ${o}(wR)) / ${o}(uniforms.strides[0]);
              let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
              if (dyR < 0.0 || dyR >= ${o}(uniforms.Dy_shape[${l}]) || fract(dyR) > 0.0 ||
                  wRPerm < 0) {
                continue;
              }
              let idyR: u32 = u32(dyR);
              var wC: u32 = 0;
              if (uniforms.dilations.y == 1) {
                // Minimum wC >= 0 that satisfies (dyCCorner + wC) % (uniforms.strides.y) == 0
                wC = u32(((dyCCorner + i32(uniforms.strides.y) - 1) / i32(uniforms.strides.y)) * i32(uniforms.strides.y) - dyCCorner);
              }
              for (; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
                if (wC % uniforms.dilations.y != 0) {
                  continue;
                }
                let dyC = (${o}(dyCCorner) + ${o}(wC)) / ${o}(uniforms.strides.y);
                let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
                if (dyC < 0.0 || dyC >= ${o}(uniforms.Dy_shape[${u}]) ||
                    fract(dyC) > 0.0 || wCPerm < 0) {
                  continue;
                }
                let idyC: u32 = u32(dyC);
                var inputChannel = groupId * uniforms.input_channels_per_group;
                ${p?`
                var x_offset = ${g.indicesToOffset(`${g.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${c};
                var w_offset = ${h.indicesToOffset(`${h.type.indices}(wRPerm, wCPerm, inputChannel, wOutChannel)`)} / ${_};
                  `:""}
                for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group_int; d2 = d2 + ${p?4:c}) {
                  ${(()=>{let t="";if(p)4===c?t+=`
        let xValue = ${g.getByOffset("x_offset")};
        let wValue = ${h.getByOffset("w_offset")};
        dotProd = dotProd + dot(xValue, wValue);
        x_offset += 1u;
        w_offset += 1u;`:2===c?t+=`
          dotProd = dotProd + dot(vec4<${o}>(${g.getByOffset("x_offset")}, ${g.getByOffset("x_offset + 1u")}), vec4<${o}>(${h.getByOffset("w_offset")}, ${h.getByOffset("w_offset + 1u")}));
          x_offset += 2u;
          w_offset += 2u;`:1===c&&(t+=`
          dotProd = dotProd + dot(vec4<${o}>(${g.getByOffset("x_offset")}, ${g.getByOffset("x_offset + 1u")}, ${g.getByOffset("x_offset + 2u")}, ${g.getByOffset("x_offset + 3u")}), vec4<${o}>(${h.getByOffset("w_offset")}, ${h.getByOffset("w_offset + 1u")}, ${h.getByOffset("w_offset + 2u")}, ${h.getByOffset("w_offset + 3u")}));
          x_offset += 4u;
          w_offset += 4u;`);else if(t+=`
                  let xValue = ${a?g.getByOffset(`${g.indicesToOffset(`${g.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${c}`):g.get("batch","inputChannel","idyR","idyC")};
        `,1===c)t+=`
          let w_offset = ${h.indicesToOffset(`${h.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)};
          let wValue = ${h.getByOffset(`w_offset / ${_}`)};
          dotProd = dotProd + xValue * wValue;`;else for(let r=0;r<c;r++)t+=`
            let wValue${r} = ${h.getByOffset(`${h.indicesToOffset(`${h.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel + ${r}, wOutChannel)`)} / ${_}`)};
            dotProd = dotProd + xValue[${r}] * wValue${r};`;return t})()}
                  inputChannel = inputChannel + ${p?4:c};
                }
                ${(()=>{if(0===f)return"";if(!p)throw Error(`packInputAs4 ${p} is not true.`);let t="";if(1===c){t+="dotProd = dotProd";for(let r=0;r<f;r++)t+=`
            + ${g.getByOffset(`x_offset + ${r}`)} * ${h.getByOffset(`w_offset + ${r}`)}`;t+=";"}else if(2===c){if(2!==f)throw Error(`Invalid inputChannelsRemainder ${f}.`);t+=`
          let xValue = ${g.getByOffset("x_offset")};
          let wValue = ${h.getByOffset("w_offset")};
          dotProd = dotProd + dot(xValue, wValue);`}return t})()}
                wC = wC + uniforms.strides.y - 1;
              }
              wR = wR + uniforms.strides[0] - 1;
            }
            let value = dotProd${i?` + bias[d1 / ${m}]`:""};
            ${w.setByOffset("global_idx","value")};
          `;return`
    ${r.registerUniforms(s).declareVariables(...y,w)}
      ${r.mainStart()}
      ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
    ${v}}`}}}}),la=L(()=>{ln(),o8(),oX(),iR=(t,r,s,i,n,a)=>(t-1)*r+s+(i-1)*n+1-a,iP=(t,r,s,i,n)=>{let a=Math.floor(t/2);"SAME_UPPER"===r?(s[i]=a,s[n]=t-a):"SAME_LOWER"===r&&(s[i]=t-a,s[n]=a)},iL=(t,r,s,i,n,a,o,l,u,d)=>{let c=t.length-2,p=0===d.length;u.length<c&&u.push(...Array(c-u.length).fill(0));let h=t[0],f=r[l?3:1]*n;for(let n=0,h=t.length-c-!!l;n<c;++n,++h){let l=t[h],f=p?l*o[n]:d[n];iP(iR(l,o[n],a[n],r[h],s[n],f),i,a,n,n+c),p&&d.push(o[n]*(l-1)+u[n]+(r[h]-1)*s[n]+1-a[n]-a[n+c])}d.splice(0,0,h),d.splice(l?3:1,0,f)},iD=(t,r)=>{let s=t.kernelShape.slice();if(0===t.kernelShape.length||0===t.kernelShape.reduce((t,r)=>t*r,1)){s.length=0;for(let t=2;t<r[1].dims.length;++t)s.push(r[1].dims[t])}let i="NHWC"===t.format;s.splice(0,0,r[1].dims[0]),s.splice(i?3:1,0,r[1].dims[1]);let n=t.pads.slice(),a=t.outputShape.slice(),o=t.outputPadding.slice(),l=r[0].dims,u=t.dilations.slice();0===u.reduce((t,r)=>t+r,0)&&(u=Array(r[0].dims.length-2).fill(1));let d=t.strides.slice();0===d.reduce((t,r)=>t+r,0)&&(d=Array(r[0].dims.length-2).fill(1)),iL(l,s,u,t.autoPad,t.group,n,d,i,o,a);let c=Object.assign({},t);return Object.assign(c,{kernelShape:s,pads:n,outputPadding:o,outputShape:a,dilations:u,strides:d}),c},iU=t=>{let r=s5(t),s=t.format,i=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof t.autoPad>"u"?0:t.autoPad],n=t.dilations,a=t.group,o=t.kernelShape,l=t.pads,u=t.strides,d=t.wIsConst();return{autoPad:i,format:s,dilations:n,group:a,kernelShape:o,outputPadding:t.outputPadding,outputShape:t.outputShape,pads:l,strides:u,wIsConst:d,...r,cacheKey:`${t.format};${r.activation};`}},iN=(t,r)=>{if(!t||2!==t.length&&3!==t.length)throw Error("Conv requires 2 or 3 inputs");if(4!==t[0].dims.length&&3!==t[0].dims.length)throw Error("currently only support 2-dimensional conv");if(t[0].dims.length!==t[1].dims.length)throw Error("filter does not have same dimension as input");if(t[0].dims["NHWC"===r.format?t[0].dims.length-1:1]!==t[1].dims[0])throw Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let s=t[1].dims[1]*r.group;if(3===t.length&&(1!==t[2].dims.length||t[2].dims[0]!==s))throw Error("invalid bias");let i=t[0].dims.length-2;if(r.dilations.reduce((t,r)=>t+r,0)>0&&r.dilations.length!==i)throw Error(`dilations should be ${i}D`);if(r.strides.reduce((t,r)=>t+r,0)>0&&r.strides.length!==i)throw Error(`strides should be ${i}D`);if(r.pads.reduce((t,r)=>t+r,0)>0&&r.pads.length!==2*i)throw Error(`pads should be ${2*i}D`);if(r.outputPadding.length!==i&&0!==r.outputPadding.length)throw Error(`output_padding should be ${i}D`);if(r.kernelShape.reduce((t,r)=>t+r,0)>0&&0!==r.kernelShape.length&&r.kernelShape.length!==t[1].dims.length-2)throw Error("invalid kernel shape");if(0!==r.outputShape.length&&r.outputShape.length!==t[0].dims.length-2)throw Error("invalid output shape")},iF=(t,r,s,i)=>{let n=t.kernelCustomData.wT??t.compute(tY(r[1],[2,3,0,1]),{inputs:[1],outputs:[s.wIsConst?-2:-1]})[0];s.wIsConst&&!t.kernelCustomData.wT&&(t.kernelCustomData.wT=n);let a=[r[0],n];3===r.length&&a.push(r[2]),t.compute(iB(a,s,i),{inputs:a})},iq=(t,r)=>{let s="NHWC"===r.format,i=[t.inputs[0].reshape(s?[t.inputs[0].dims[0],1,t.inputs[0].dims[1],t.inputs[0].dims[2]]:[t.inputs[0].dims[0],t.inputs[0].dims[1],1,t.inputs[0].dims[2]]),t.inputs[1].reshape([t.inputs[1].dims[0],t.inputs[1].dims[1],1,t.inputs[1].dims[2]])];3===t.inputs.length&&i.push(t.inputs[2]);let n=r.kernelShape;(0===n.length||0===n[0])&&(n=[t.inputs[1].dims[2]]);let a=r.dilations;(0===a.length||0===a[0])&&(a=[1]);let o=r.strides;(0===o.length||0===o[0])&&(o=[1]);let l=r.pads;0===l.length&&(l=[0,0]),l=[0,l[0],0,l[1]],o=[1].concat(o),a=[1].concat(a),n=[1].concat(n);let u=r.outputPadding;u=[0].concat(u);let d=iD({...r,pads:l,strides:o,dilations:a,kernelShape:n,outputPadding:u},i);iF(t,i,d,t=>s?[t[0],t[2],t[3]]:[t[0],t[1],t[3]])},iV=(t,r)=>{if(iN(t.inputs,r),3===t.inputs[0].dims.length)iq(t,r);else{let s=iD(r,t.inputs);iF(t,t.inputs,s)}}}),lo=L(()=>{oD(),oF(),oH(),oK(),ij=(t,r,s,i)=>{let n=e5.size(r),a=r.length,o=tD("input",t,a),l=tU("output",t,a),u=6===s.dataType?s.getInt32Array()[0]:Number(s.getBigInt64Array()[0]),d=e5.normalizeAxis(u,a);return{name:"CumSum",shaderCache:{hint:i.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:r,dataType:t}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:[{type:12,data:n},{type:12,data:d},...tC(r,r)]}),getShaderSource:t=>{let r=` i32(${o.indicesGet("inputIndices","uniforms.axis")}) `,s=tP("uniforms.input_shape","uniforms.axis",a),n=i.reverse?r+(i.exclusive?" + 1":""):"0",u=i.reverse?s:r+(i.exclusive?"":" + 1");return`
                ${t.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(o,l)}
                ${t.mainStart()}
                  ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${l.offsetToIndices("global_idx")};
                  var sum = ${l.type.value}(0);
                  let first : i32 = ${n};
                  let last : i32 = ${u};
                  for (var i : i32 = first; i < last; i++) {
                    ${o.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${o.getByIndices("inputIndices")};
                  }
                  ${l.setByOffset("global_idx","sum")};
                }`}}},iG=(t,r)=>{let s=t.inputs[0].dims,i=t.inputs[0].dataType,n=t.inputs[1];t.compute(ij(i,s,n,r),{inputs:[0]})},iW=t=>{let r=1===t.exclusive,s=1===t.reverse;return tS({exclusive:r,reverse:s})}}),ll=L(()=>{oD(),oF(),oH(),oK(),iH=t=>{if(!t||1!==t.length)throw Error("DepthToSpace requires 1 input.");if(4!==t[0].dims.length)throw Error("DepthToSpace requires 4D input.")},iK=(t,r,s,i)=>{let n=[];n.push(`fn perm(i: ${i.type.indices}) -> ${s.type.indices} {
    var a: ${s.type.indices};`);for(let i=0;i<r;++i)n.push(s.indicesSet("a",t[i],`i[${i}]`));return n.push("return a;}"),n.join(`
`)},iX=(t,r)=>{let s,i,n,a,o,l,u="NHWC"===r.format,d=r.blocksize,c="DCR"===r.mode;u?([s,i,n,a]=t.dims,o=c?[s,i,n,d,d,a/d**2]:[s,i,n,a/d**2,d,d],l=c?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([s,i,n,a]=[t.dims[0],t.dims[2],t.dims[3],t.dims[1]],o=c?[s,d,d,a/d**2,i,n]:[s,a/d**2,d,d,i,n],l=c?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let p=t.reshape(o),h=p.dims.length,f=t.dataType,m=tD("a",f,h),_=tU("output",f,h);return{name:"DepthToSpace",shaderCache:{hint:`${t.dims};${r.blocksize};${r.mode}`,inputDependencies:["rank"]},getRunData:t=>{let r=u?[s,i*d,n*d,a/d**2]:[s,a/d**2,i*d,n*d],o=e5.size(r),c=p.dims,h=e5.sortBasedOnPerm(c,l);return{outputs:[{dims:r,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:[{type:12,data:o},...tC(c,h)]}},getShaderSource:t=>`
  ${t.registerUniform("output_size","u32").declareVariables(m,_)}

  ${iK(l,h,m,_)}

  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${_.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${_.setByOffset("global_idx",m.getByIndices("aIndices"))}
  }`}},iY=(t,r)=>{iH(t.inputs),t.compute(iX(t.inputs[0],r))},iQ=t=>tS({blocksize:t.blocksize,mode:t.mode,format:t.format})}),lu=L(()=>{oD(),oF(),oH(),oK(),i0="^"+(iJ="("+(iZ="[a-zA-Z]|\\.\\.\\.")+")+")+"$",i1="^"+("("+iJ+",)*")+iJ+"$",i2=class{constructor(t=-1){this.symbolToIndices=new Map,this.inputIndex=t}addSymbol(t,r){let s=this.symbolToIndices.get(t);void 0===s?s=[r]:s.push(r),this.symbolToIndices.set(t,s)}},i3=class{constructor(t,r){this.equation=r,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=[],this.outputDims=[];let[s,i]=r.includes("->")?r.split("->",2):[r,""];if(!s.match(RegExp(i1)))throw Error("Invalid LHS term");if(s.split(",").forEach((r,s)=>{let i=t[s].dims.slice();if(!r.match(RegExp(i0)))throw Error("Invalid LHS term");let n=this.processTerm(r,!0,i,s);this.lhs.push(n)}),""===i)i+=[...this.symbolToInfo.entries()].filter(([t,r])=>1===r.count||"..."===t).map(([t])=>t).join("");else if(!i.match(RegExp(iJ)))throw Error("Invalid RHS");i.match(RegExp(iZ,"g"))?.forEach(t=>{if("..."===t)this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let r=this.symbolToInfo.get(t);if(void 0===r)throw Error("Invalid RHS symbol");this.outputDims.push(r.dimValue)}}),this.rhs=this.processTerm(i,!1,this.outputDims)}addSymbol(t,r,s){let i=this.symbolToInfo.get(t);if(void 0!==i){if(i.dimValue!==r&&1!==i.count)throw Error("Dimension mismatch");i.count++,i.inputIndices.push(s)}else i={count:1,dimValue:r,inputIndices:[s]};this.symbolToInfo.set(t,i)}processTerm(t,r,s,i=-1){let n=s.length,a=!1,o=[],l=0;if(!t.match(RegExp(i0))&&!r&&""!==t)throw Error("Invalid LHS term");let u=t.match(RegExp(iZ,"g")),d=new i2(i);return u?.forEach((t,c)=>{if("..."===t){if(a)throw Error("Only one ellipsis is allowed per input term");a=!0;let t=n-u.length+1;if(t<0)throw Error("Ellipsis out of bounds");if(o=s.slice(l,l+t),this.hasEllipsis){if(this.ellipsisDims.length!==o.length||this.ellipsisDims.toString()!==o.toString())throw Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=o;else throw Error("Ellipsis must be specified in the LHS");for(let t=0;t<o.length;t++){let r=String.fromCharCode(48+t);d.addSymbol(r,c+t),this.addSymbol(r,s[l++],i)}}else d.addSymbol(t,c+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(t,s[l++],i)}),d}},i4=t=>t+"_max",i6=(t,r,s,i)=>{let n=t.map(t=>t.length).map((t,s)=>tD(`input${s}`,r,t)),a=e5.size(i),o=tU("output",r,i.length),l=[...s.symbolToInfo.keys()].filter(t=>!s.rhs.symbolToIndices.has(t));return{name:"Einsum",shaderCache:{hint:s.equation,inputDependencies:t.map(()=>"rank")},getRunData:()=>{let n=l.filter(t=>s.symbolToInfo.has(t)).map(t=>({type:12,data:s.symbolToInfo.get(t)?.dimValue||0}));n.push({type:12,data:a});let o=t.map((t,r)=>[...tC(t)]).reduce((t,r)=>t.concat(r),n);return o.push(...tC(i)),{outputs:[{dims:i,dataType:r}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:o}},getShaderSource:t=>{let r=[],i=[],a=[],u=[],d=[],c=s.symbolToInfo.size===s.rhs.symbolToIndices.size;s.symbolToInfo.forEach((t,l)=>{if(s.rhs.symbolToIndices.has(l)){let i=s.rhs.symbolToIndices.get(l)?.[0];void 0!==i&&s.lhs.forEach((s,a)=>{if(t.inputIndices.includes(a)){let t=s.symbolToIndices.get(l);if(void 0===t)throw Error("Invalid symbol error");t.forEach(t=>{r.push(`${n[a].indicesSet(`input${a}Indices`,t,o.indicesGet("outputIndices",i))}`)})}})}else s.lhs.forEach((r,s)=>{if(t.inputIndices.includes(s)){let t=r.symbolToIndices.get(l);if(void 0===t)throw Error("Invalid symbol error");t.forEach(t=>{i.push(`${n[s].indicesSet(`input${s}Indices`,t,`${l}`)}`)}),d.push(`prod *= ${n[s].getByIndices(`input${s}Indices`)};`)}}),a.push(`for(var ${l}: u32 = 0; ${l} < uniforms.${i4(l)}; ${l}++) {`),u.push("}")});let p=c?[...r,`let sum = ${n.map((t,r)=>t.getByIndices(`input${r}Indices`)).join(" * ")};`]:[...r,"var sum = 0.0;",...a,...i,"var prod = 1.0;",...d,"sum += prod;",...u];return`
            ${t.registerUniforms(l.map(t=>({name:`${i4(t)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...n,o)}

            ${t.mainStart()}
            ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${o.offsetToIndices("global_idx")};
            ${n.map((t,r)=>`var input${r}Indices: ${n[r].type.indices};`).join(`
`)}
            ${p.join(`
`)};
            ${o.setByOffset("global_idx","sum")};
          }`}}},i8=(t,r)=>{let s=new i3(t.inputs,r.equation),i=s.outputDims,n=t.inputs.map((t,r)=>t.dims);t.compute(i6(n,t.inputs[0].dataType,s,i))},i5=t=>{let r=t.equation.replace(/\s+/g,"");return tS({equation:r})}}),ld=L(()=>{oD(),oF(),oK(),i9=t=>{if(!t||2!==t.length)throw Error("Expand requires 2 input.");let r=t[0].dims,s=Array.from(t[1].getBigInt64Array(),Number),i=s.length<r.length?0:s.length-r.length,n=r.length<s.length?0:r.length-s.length;for(;i<s.length&&n<r.length;++i,++n)if(s[i]!==r[n]&&1!==s[i]&&1!==r[n])throw Error("Expand requires shape to be broadcastable to input")},i7=(t,r)=>{let s=t.length-r.length,i=[];for(let r=0;r<s;++r)i.push(t[r]);for(let n=0;n<r.length;++n)i.push(1===r[n]?t[n+s]:r[n]);return i},ne=(t,r)=>t.length>r.length?i7(t,r):i7(r,t),nt=t=>{let r=t[0].dims,s=ne(r,Array.from(t[1].getBigInt64Array(),Number)),i=t[0].dataType,n=9===i||1===e5.size(r),a=9===i||r.length>0&&r[r.length-1]%4==0?4:1,o=n||s.length>0&&s[s.length-1]%4==0?4:1,l=Math.ceil(e5.size(s)/o),u=[{type:12,data:l},...tC(r,s)];return{name:"Expand",shaderCache:{hint:`${s.length};${a}${o}`,inputDependencies:["rank"]},getShaderSource:t=>{let n=tD("input",i,r.length,a),l=tU("output",i,s.length,o),u;if(9===i){let t=(t,r,s="")=>`
          let outputIndices${r} = ${l.offsetToIndices(`outputOffset + ${r}u`)};
          let offset${r} = ${n.broadcastedIndicesToOffset(`outputIndices${r}`,l)};
          let index${r} = offset${r} / 4u;
          let component${r} = offset${r} % 4u;
          ${t}[${r}] = ${s}(${n.getByOffset(`index${r}`)}[component${r}]);
        `;u=`
        let outputOffset = global_idx * ${o};
        var data = vec4<u32>(0);
        ${t("data",0,"u32")}
        ${t("data",1,"u32")}
        ${t("data",2,"u32")}
        ${t("data",3,"u32")}
        ${l.setByOffset("global_idx","data")}
      }`}else u=`
        let outputIndices = ${l.offsetToIndices(`global_idx * ${o}`)};
        let inputOffset = ${n.broadcastedIndicesToOffset("outputIndices",l)};
        let data = ${l.type.value}(${n.getByOffset(`inputOffset / ${a}`)});
        ${l.setByOffset("global_idx","data")}
      }`;return`
    ${t.registerUniform("vec_size","u32").declareVariables(n,l)}
    ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${u}`},getRunData:()=>({outputs:[{dims:s,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:u})}},nr=t=>{i9(t.inputs),t.compute(nt(t.inputs),{inputs:[0]})}}),lc=L(()=>{oD(),oF(),oK(),o2(),ns=t=>{let r=t[0].dataType,s=e5.size(t[0].dims),i=e5.size(t[1].dims),n=i%4==0;return{name:"FastGeluWithBias",shaderCache:{hint:`${n}`,inputDependencies:["type","type"]},getShaderSource:t=>{let s=tD("x",r,[1],4),i=tD("bias",r,[1],4),a=tU("y",r,[1],4),o=t=>`
      let bias${t}_offset: u32 = (global_idx * 4 + ${t}) % uniforms.bias_size;
      let bias${t} = ${i.getByOffset(`bias${t}_offset / 4`)}[bias${t}_offset % 4];`,l=n?`
      let bias = ${i.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${o(0)}${o(1)}${o(2)}${o(3)}
      let bias = ${s.type.value}(bias0, bias1, bias2, bias3);`;return`${t.registerUniforms([{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}]).declareVariables(s,i,a)}

    ${sI(tA(r))}

    ${t.mainStart(tT)}
      ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${s.getByOffset("global_idx")};
      ${l}
      let x_in = x + bias;
      ${a.setByOffset("global_idx",sz("x_in"))}
    }`},getRunData:t=>({outputs:[{dims:t[0].dims,dataType:t[0].dataType}],programUniforms:[{type:12,data:Math.ceil(s/4)},{type:12,data:i}],dispatchGroup:{x:Math.ceil(s/tT/4)}})}},ni=t=>{t.inputs.length<2||0===e5.size(t.inputs[1].dims)?sA(t):t.compute(ns(t.inputs))}}),lp=L(()=>{oD(),oF(),oH(),oK(),nn=t=>{if(!t||2!==t.length)throw Error("Gather requires 2 inputs.")},na=(t,r)=>{let s=t[0].dims,i=t[1].dims,n=s.length,a=e5.normalizeAxis(r.axis,n),o=s.slice(0);o.splice(a,1,...i);let l=s[a],u=9===t[0].dataType?4:1,d=Math.ceil(e5.size(o)/u),c=[{type:12,data:d},{type:6,data:l},{type:12,data:a},...tC(t[0].dims,t[1].dims,o)];return{name:"Gather",shaderCache:{hint:r.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:o,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:c}),getShaderSource:r=>{let s=tD("data",t[0].dataType,t[0].dims.length,u),l=tD("inputIndices",t[1].dataType,t[1].dims.length),d=tU("output",t[0].dataType,o.length,u),c=t=>{let r=i.length,u=`var indicesIndices${t}  = ${l.type.indices}(0);`;for(let s=0;s<r;s++)u+=`${r>1?`indicesIndices${t}[${s}]`:`indicesIndices${t}`} = ${o.length>1?`outputIndices${t}[uniforms.axis + ${s}]`:`outputIndices${t}`};`;u+=`
          var idx${t} = ${l.getByIndices(`indicesIndices${t}`)};
          if (idx${t} < 0) {
            idx${t} = idx${t} + uniforms.axisDimLimit;
          }
          var dataIndices${t} : ${s.type.indices};
        `;for(let s=0,i=0;s<n;s++)s===a?(u+=`${n>1?`dataIndices${t}[${s}]`:`dataIndices${t}`} = u32(idx${t});`,i+=r):(u+=`${n>1?`dataIndices${t}[${s}]`:`dataIndices${t}`} = ${o.length>1?`outputIndices${t}[${i}]`:`outputIndices${t}`};`,i++);return u},p;if(9===t[0].dataType){let t=(t,r,i="")=>`
          let outputIndices${r} = ${d.offsetToIndices(`outputOffset + ${r}u`)};
          ${c(r)};
          let offset${r} = ${s.indicesToOffset(`dataIndices${r}`)};
          let index${r} = offset${r} / 4u;
          let component${r} = offset${r} % 4u;
          ${t}[${r}] = ${i}(${s.getByOffset(`index${r}`)}[component${r}]);
        `;p=`
        let outputOffset = global_idx * ${u};
        var value = vec4<u32>(0);
        ${t("value",0,"u32")}
        ${t("value",1,"u32")}
        ${t("value",2,"u32")}
        ${t("value",3,"u32")}
        ${d.setByOffset("global_idx","value")}
      `}else p=`
      let outputIndices = ${d.offsetToIndices("global_idx")};
      ${c("")};
      let value = ${s.getByIndices("dataIndices")};
      ${d.setByOffset("global_idx","value")};
      `;return`
      ${r.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(s,l,d)}
      ${r.mainStart()}
        ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${p}
      }`}}},no=t=>tS({axis:t.axis}),nl=(t,r)=>{nn(t.inputs),t.compute(na(t.inputs,r))}}),lh=L(()=>{oD(),oF(),oK(),nu=(t,r,s,i,n,a,o,l,u)=>{let d=[{type:12,data:a},{type:12,data:i},{type:12,data:n},{type:12,data:s},{type:12,data:o},{type:12,data:l},{type:12,data:u}],c=[a];return d.push(...tC(r.dims,c)),t.compute({name:"computeSliceOffsets",shaderCache:{hint:`${n.length}_${s.length}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:c,dataType:t.inputs[1].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:d}),getShaderSource:t=>{let i=tD("indices_data",r.dataType,r.dims.length),a=tU("input_slice_offsets_data",12,1,1),o=[{name:"output_size",type:"u32"},{name:"batch_dims",type:"u32"},{name:"input_dims",type:"u32",length:n.length},{name:"sizes_from_slice_dims_data",type:"u32",length:s.length},{name:"num_slices_per_batch",type:"u32"},{name:"input_batch_stride",type:"u32"},{name:"num_slice_dims",type:"u32"}];return`
  ${t.registerUniforms(o).declareVariables(i,a)}
  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let batch_idx = global_idx / uniforms.num_slices_per_batch;
    let base_offset = batch_idx * uniforms.input_batch_stride;

    let slice_indices_base_offset = global_idx * uniforms.num_slice_dims;
    var relative_slice_offset = 0;
    for (var dim_idx = 0u; dim_idx < uniforms.num_slice_dims; dim_idx ++) {
      var index = i32(indices_data[dim_idx + slice_indices_base_offset].x);
      let input_dim_idx = uniforms.batch_dims + dim_idx;
      if (index < 0) {
        ${1===n.length?"index += i32(uniforms.input_dims);":"index += i32(uniforms.input_dims[input_dim_idx]);"}
      }
      ${1===s.length?"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data);":"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data[dim_idx]);"}
    }

    input_slice_offsets_data[global_idx] =  base_offset + u32(relative_slice_offset);
  }`}},{inputs:[r],outputs:[-1]})[0]},nd=(t,r)=>{let s=t.inputs,i=s[0].dims,n=s[0].dataType,a=s[1].dims,o=a[a.length-1],l=e5.sizeToDimension(a,a.length-1),u=e5.sizeFromDimension(i,r.batchDims+o),d=e5.sizeToDimension(i,r.batchDims),c=e5.sizeFromDimension(i,r.batchDims),p=Array(o),h=u;for(let t=0;t<o;++t)p[o-1-t]=h,h*=i[r.batchDims+o-1-t];let f=nu(t,s[1],p,r.batchDims,i,l,l/d,c,o),m=r.batchDims+o;if(m>i.length)throw Error("last dimension of indices must not be larger than rank of input tensor");let _=a.slice(0,-1).concat(i.slice(m)),g=e5.size(_),y=[{type:12,data:g},{type:12,data:u},...tC(s[0].dims,f.dims,_)];t.compute({name:"GatherND",shaderCache:{hint:r.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:_,dataType:n}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:y}),getShaderSource:t=>{let r=tD("data",s[0].dataType,s[0].dims.length),i=tD("slice_offsets",12,f.dims.length),n=tU("output",s[0].dataType,_.length);return`
          ${t.registerUniform("output_size","u32").registerUniform("slice_size","u32").declareVariables(r,i,n)}
            ${t.mainStart()}
            ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let slice_offset = slice_offsets[global_idx / uniforms.slice_size];
          output[global_idx] = data[u32(slice_offset) + global_idx % uniforms.slice_size];
        }`}},{inputs:[s[0],f]})},nc=t=>({batchDims:t.batch_dims,cacheKey:""})}),lf=L(()=>{oD(),oF(),oH(),oK(),np=(t,r)=>{if(t.length<3||t.length>4)throw Error("GatherBlockQuantized requires 3 or 4 inputs.");let s=e5.normalizeAxis(r.quantizeAxis,t[0].dims.length),i=r.blockSize,n=t[0],a=t[2],o=4===t.length?t[3]:void 0;if(a.dims.length!==n.dims.length||!n.dims.map((t,r)=>r===s?Math.ceil(t/i)===a.dims[r]:t===a.dims[r]).reduce((t,r)=>t&&r,!0))throw Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(o){if(o.dataType!==n.dataType)throw Error("Zero point must have the same data type as the input tensor.");if(o.dims.length!==a.dims.length||!o.dims.map((t,r)=>t===a.dims[r]).reduce((t,r)=>t&&r,!0))throw Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},nh=(t,r)=>{let s=t[0].dims,i=t[1].dims,n=s.length,a=e5.normalizeAxis(r.gatherAxis,n),o=e5.normalizeAxis(r.quantizeAxis,n),l=s.slice(0);l.splice(a,1,...i);let u=e5.size(l),d=t[2].dataType,c=22===t[0].dataType,p=[{type:12,data:u},{type:12,data:o},{type:12,data:a},{type:12,data:r.blockSize},...tC(...t.map((t,r)=>t.dims),l)];return{name:"GatherBlockQuantized",shaderCache:{hint:`${r.cacheKey};${t.filter((t,r)=>1!==r).map(t=>t.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:t.length},(t,r)=>"rank")},getRunData:()=>({outputs:[{dims:l,dataType:d}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:p}),getShaderSource:r=>{let n=tD("data",t[0].dataType,t[0].dims.length),o=tD("inputIndices",t[1].dataType,t[1].dims.length),u=tD("scales",t[2].dataType,t[2].dims.length),p=t.length>3?tD("zeroPoint",t[3].dataType,t[3].dims.length):void 0,h=tU("output",d,l.length),f=[n,o,u];return p&&f.push(p),`
        ${r.registerUniforms([{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}]).declareVariables(...f,h)}
        ${r.mainStart()}
        let output_indices = ${h.offsetToIndices("global_idx")};
        var indices_indices = ${o.type.indices}(0);
        ${i.length>1?`
          for (var i: u32 = 0; i < ${i.length}; i++) {
            let index = ${h.indicesGet("output_indices","uniforms.gather_axis + i")};
            ${o.indicesSet("indices_indices","i","index")};
          }`:`indices_indices = ${h.indicesGet("output_indices","uniforms.gather_axis")};`};
        var data_indices = ${n.type.indices}(0);
        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {
          let index = ${h.indicesGet("output_indices","i")};
          ${n.indicesSet("data_indices","i","index")};
        }
        var index_from_indices = ${o.getByIndices("indices_indices")};
        if (index_from_indices < 0) {
          index_from_indices += ${s[a]};
        }
        ${n.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};
        for (var i = uniforms.gather_axis + 1; i < ${l.length}; i++) {
          let index = ${h.indicesGet("output_indices",`i + ${i.length} - 1`)};
          ${n.indicesSet("data_indices","i","index")};
        }
        let data_offset = ${n.indicesToOffset("data_indices")};
        let data_index = data_offset % 8;
        // Convert 4-bit packed data to 8-bit packed data.
        let packed_4bit_quantized_data = ${n.getByOffset("data_offset / 8")};
        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;
        let quantized_data_vec = ${c?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));
        let quantized_data = quantized_data_vec[data_index / 2];
        var scale_indices = data_indices;
        let quantize_axis_index = ${u.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;
        ${u.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};
        var scale = ${u.getByIndices("scale_indices")};
        ${p?`
              let zero_point_indices = scale_indices;
              let zero_point_offset = ${p.indicesToOffset("zero_point_indices")};
              let zero_point_index = zero_point_offset % 8;
              let packed_4bit_zero_points = ${p.getByOffset("zero_point_offset / 8")};
              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;
              let zero_point_vec = ${c?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));
              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};
        let dequantized_data = ${tA(d)}(quantized_data - zero_point) * scale;
        ${h.setByOffset("global_idx","dequantized_data")};
    }`}}},nf=(t,r)=>{np(t.inputs,r),t.compute(nh(t.inputs,r))},nm=t=>tS({blockSize:t.blockSize,gatherAxis:t.gatherAxis,quantizeAxis:t.quantizeAxis})}),lm=L(()=>{oD(),oF(),oH(),oK(),n_=t=>{if(!t||2!==t.length)throw Error("GatherElements requires 2 inputs.");if(t[0].dims.length<1)throw Error("GatherElements requires that the data input be rank >= 1.");if(t[0].dims.length!==t[1].dims.length)throw Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},ng=(t,r)=>{let s=t[0].dims,i=t[0].dataType,n=s.length,a=t[1].dims,o=t[1].dataType,l=e5.normalizeAxis(r.axis,n),u=s[l],d=a.slice(0),c=e5.size(d),p=tD("input",i,n),h=tD("indicesInput",o,a.length),f=tU("output",i,d.length),m=[{type:12,data:c},{type:6,data:u},{type:12,data:l}];return m.push(...tC(s,a,d)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:d,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:m}),getShaderSource:t=>`
      ${t.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(p,h,f)}
      ${t.mainStart()}
      ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${f.offsetToIndices("global_idx")};

      var idx = ${h.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${p.type.indices}(outputIndices);
      ${p.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${p.getByIndices("inputIndices")};

      ${f.setByOffset("global_idx","value")};
  }`}},ny=t=>tS({axis:t.axis}),nw=(t,r)=>{n_(t.inputs),t.compute(ng(t.inputs,r))}}),l_=L(()=>{oD(),oF(),oK(),nb=t=>{if(!t)throw Error("Input is missing");if(t.length<2||t.length>3)throw Error("Invaid input number.");if(3===t.length&&t[2].dims.length>2)throw Error("Invalid input shape of C");if(t[0].dataType!==t[1].dataType||3===t.length&&t[0].dataType!==t[2].dataType)throw Error("Input types are mismatched")},nx=(t,r)=>{let s=t[0].dims.slice(),i=t[1].dims.slice(),[n,a,o]=e7.getShapeOfGemmResult(s,r.transA,i,r.transB,3===t.length?t[2].dims:void 0),l=[n,a];if(!l)throw Error("Can't use gemm on the given tensors");let u=Math.ceil(a/16),d=Math.ceil(n/16),c=(e5.size(l),[{type:12,data:u},{type:12,data:n},{type:12,data:a},{type:12,data:o},{type:1,data:r.alpha},{type:1,data:r.beta}]),p=["type","type"];return 3===t.length&&(c.push(...tC(t[2].dims)),p.push("rank")),c.push(...tC(l)),{name:"GemmShared",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:p},getRunData:()=>({outputs:[{dims:l,dataType:t[0].dataType}],dispatchGroup:{x:u*d},programUniforms:c}),getShaderSource:s=>{let i=tD("a",t[0].dataType,t[0].dims),n=tD("b",t[1].dataType,t[1].dims),a=null,o=[i,n];3===t.length&&(a=tD("c",t[2].dataType,t[2].dims.length),o.push(a));let u=tU("output",t[0].dataType,l.length);o.push(u);let d="",c="";r.transA&&r.transB?(c=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${i.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${n.type.value}(0);
      }
      `,d="value += tile_a[k][local_id.y] * tile_b[local_id.x][k];"):r.transA&&!r.transB?(c=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${i.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${n.type.value}(0);
      }
      `,d="value += tile_a[k][local_id.y] * tile_b[k][local_id.x];"):!r.transA&&r.transB?(c=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${i.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${n.type.value}(0);
      }
      `,d="value += tile_a[local_id.y][k] * tile_b[local_id.x][k];"):r.transA||r.transB||(c=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${i.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${n.type.value}(0);
      }
      `,d="value += tile_a[local_id.y][k] * tile_b[k][local_id.x];");let p=1===r.alpha?"":"value *= uniforms.alpha;";return`
  ${s.registerUniforms([{name:"num_tile_n",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}]).declareVariables(...o)}
  var<workgroup> tile_a: array<array<${i.type.storage}, 16>, 16>;
  var<workgroup> tile_b: array<array<${n.type.storage}, 16>, 16>;
  ${s.mainStart([16,16,1])}
    let tile_col_start = (workgroup_index % uniforms.num_tile_n) * 16;
    let tile_row_start = (workgroup_index / uniforms.num_tile_n) * 16;
    let num_tiles = (uniforms.K - 1) / 16 + 1;
    var k_start = 0u;
    var value = ${u.type.value}(0);
    for (var t: u32 = 0u; t < num_tiles; t++) {
      ${c}
      k_start = k_start + 16;
      workgroupBarrier();

      for (var k: u32 = 0u; k < 16; k++) {
        ${d}
      }
      workgroupBarrier();
    }

    ${p}
    let m = tile_row_start + local_id.y;
    let n = tile_col_start + local_id.x;
    ${null!=a?`let cOffset = ${a.broadcastedIndicesToOffset("vec2(m, n)",u)}; value += ${u.type.value}(uniforms.beta) * ${a.getByOffset("cOffset")};`:""}
    if (m < uniforms.M && n < uniforms.N) {
      output[m * uniforms.N + n] = value;
    }
  }`}}},nv=t=>({transA:t.transA,transB:t.transB,alpha:t.alpha,beta:t.beta,cacheKey:`${t.transA};${t.transB};${1===t.alpha}`}),n$=(t,r)=>{nb(t.inputs),t.compute(nx(t.inputs,r))}}),lg=L(()=>{oD(),oF(),oH(),oK(),[nk,nE,nS,nT]=[0,1,2,3],nI=t=>{if(4!==t[0].dims.length)throw Error("only 4-D tensor is supported.");if(t[0].dims.length!==t[1].dims.length)throw Error("input dimensions must be equal to grid dimensions");if(t[0].dims.length-2!==t[1].dims[t[1].dims.length-1])throw Error(`last dimension of grid must be equal to ${t[0].dims.length-2}`);if(t[0].dims[0]!==t[1].dims[0])throw Error("grid batch size must match input batch size")},nz=`
  fn gs_get_cubic_coeffs(x: f32) -> vec4<f32> {
    let cubic_alpha = -0.75f;
    let x_abs = abs(x);
    var coeffs: vec4<f32>;
    coeffs[0] = (((cubic_alpha * (x_abs + 1) - 5 * cubic_alpha) * (x_abs + 1) + 8 * cubic_alpha) * (x_abs + 1) - 4 * cubic_alpha);
    coeffs[1] = (((cubic_alpha + 2) * x_abs - (cubic_alpha + 3)) * x_abs * x_abs + 1);
    coeffs[2] = (((cubic_alpha + 2) * (1 - x_abs) - (cubic_alpha + 3)) * (1 - x_abs) * (1 - x_abs) + 1);
    coeffs[3] = (((cubic_alpha * (2 - x_abs) - 5 * cubic_alpha) * (2 - x_abs) + 8 * cubic_alpha) * (2 - x_abs) - 4 * cubic_alpha);
    return coeffs;
  }
`,nA=t=>`
  fn gs_bicubic_interpolate(p: mat4x4<${t}>, x: f32, y: f32) -> ${t} {
    var v: vec4<f32>;
    var coeffs = gs_get_cubic_coeffs(x);
    for (var i = 0; i < 4; i++) {
      v[i] = coeffs[0] * p[i][0] + coeffs[1] * p[i][1] + coeffs[2] * p[i][2] + coeffs[3] * p[i][3];
    }
    coeffs = gs_get_cubic_coeffs(y);
    let pixel = ${t}(coeffs[0] * v[0] + coeffs[1] * v[1] + coeffs[2] * v[2] + coeffs[3] * v[3]);
    return pixel;
  }
`,nC=t=>`
  fn gs_denormalize(n: f32, length: i32) -> f32 {
    ${0===t.alignCorners?`
    // alignCorners: false => [-1, 1] to [-0.5, length - 0.5]
    return ((n + 1.0) * f32(length) - 1.0) / 2.0;
    `:`
    // alignCorners: true => [-1, 1] to [0, length - 1]
    return (n + 1.0) / 2.0 * (f32(length - 1));
    `}
  }
`,nM=t=>`
  ${"reflection"===t.paddingMode?`
      fn gs_reflect(x: i32, x_min: f32, x_max: f32) -> u32 {
        var dx = 0.0;
        var fx = f32(x);
        let range = x_max - x_min;
        if (fx < x_min) {
          dx = x_min - fx;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_min + r;
          } else {
            fx = x_max - r;
          }
        } else if (fx > x_max) {
          dx = fx - x_max;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_max - r;
          } else {
            fx = x_min + r;
          }
        }
        return u32(fx);
      }`:""}
`,nO=(t,r,s)=>`
  fn pixel_at_grid(r: i32, c: i32, H: i32, W: i32, batch: u32, channel: u32, border: vec4<f32>) -> ${r} {
     var pixel = ${r}(0);
     var indices = vec4<u32>(0);
     indices[${nk}] = batch;
     indices[${nE}] = channel;`+(()=>{switch(s.paddingMode){case"zeros":return`
          if (r >= 0 && r < H && c >=0 && c < W) {
            indices[${nS}] = u32(r);
            indices[${nT}] = u32(c);
          } else {
            return ${r}(0);
          }
        `;case"border":return`
          indices[${nS}] = u32(clamp(r, 0, H - 1));
          indices[${nT}] = u32(clamp(c, 0, W - 1));
        `;case"reflection":return`
          indices[${nS}] = gs_reflect(r, border[1], border[3]);
          indices[${nT}] = gs_reflect(c, border[0], border[2]);
        `;default:throw Error(`padding mode ${s.paddingMode} is not supported`)}})()+`
    return ${t.getByIndices("indices")};
  }
`,nB=(t,r,s)=>(()=>{switch(s.mode){case"nearest":return`
          let result = pixel_at_grid(i32(round(y)), i32(round(x)), H_in, W_in, indices[${nk}], indices[${nE}], border);
        `;case"bilinear":return`
          let x1 = i32(floor(x));
          let y1 = i32(floor(y));
          let x2 = x1 + 1;
          let y2 = y1 + 1;

          let p11 = pixel_at_grid(y1, x1, H_in, W_in, indices[${nk}], indices[${nE}], border);
          let p12 = pixel_at_grid(y1, x2, H_in, W_in, indices[${nk}], indices[${nE}], border);
          let p21 = pixel_at_grid(y2, x1, H_in, W_in, indices[${nk}], indices[${nE}], border);
          let p22 = pixel_at_grid(y2, x2, H_in, W_in, indices[${nk}], indices[${nE}], border);

          let dx2 = ${r}(f32(x2) - x);
          let dx1 = ${r}(x - f32(x1));
          let dy2 = ${r}(f32(y2) - y);
          let dy1 = ${r}(y - f32(y1));
          let result = dy2 * (dx2 * p11 + dx1 * p12) + dy1 * (dx2 * p21 + dx1 * p22);
        `;case"bicubic":return`
          let x0 = i32(floor(x)) - 1;
          let y0 = i32(floor(y)) - 1;
          var p: mat4x4<${r}>;
          for (var h = 0; h < 4; h++) {
            for (var w = 0; w < 4; w++) {
              p[h][w] = pixel_at_grid(h + y0, w + x0, H_in, W_in, indices[${nk}], indices[${nE}], border);
            }
          }

          let dx = x - f32(x0 + 1);
          let dy = y - f32(y0 + 1);
          let result = gs_bicubic_interpolate(p, dx, dy);
        `;default:throw Error(`mode ${s.mode} is not supported`)}})()+`${t.setByOffset("global_idx","result")}`,nR=(t,r)=>{let s=tD("x",t[0].dataType,t[0].dims.length),i=[t[1].dims[0],t[1].dims[1],t[1].dims[2]],n=tD("grid",t[1].dataType,i.length,2),a=[t[0].dims[0],t[0].dims[1],t[1].dims[1],t[1].dims[2]];"NHWC"===r.format&&(a=[t[0].dims[0],t[1].dims[1],t[1].dims[2],t[0].dims[3]],[nk,nE,nS,nT]=[0,3,1,2]);let o=tU("output",t[0].dataType,a.length),l=s.type.value,u=[{type:12,data:e5.size(a)},...tC(t[0].dims,i,a)];return{name:"GridSample",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:["type","type"]},getRunData:t=>{let r=e5.size(a);return{outputs:[{dims:a,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(r/64)},programUniforms:u}},getShaderSource:t=>`
  ${t.registerUniform("output_size","u32").declareVariables(s,n,o)}
  ${nz}
  ${nA(l)}
  ${nC(r)}
  ${nM(r)}
  ${nO(s,l,r)}

  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let H_in = i32(uniforms.x_shape[${nS}]);
      let W_in = i32(uniforms.x_shape[${nT}]);

      ${0===r.alignCorners?`
      let x_min = -0.5;
      let x_max = f32(W_in) - 0.5;
      let y_min = -0.5;
      let y_max = f32(H_in) - 0.5;
      `:`
      let x_min = 0.0;
      let x_max = f32(W_in) - 1.0;
      let y_min = 0.0;
      let y_max = f32(H_in) - 1.0;
      `};
      let border = vec4<f32>(x_min, y_min, x_max, y_max);

      let indices = ${o.offsetToIndices("global_idx")};
      var grid_indices = vec3<u32>(indices[${nk}], indices[${nS}], indices[${nT}]);
      let nxy = ${n.getByIndices("grid_indices")};
      var x = gs_denormalize(f32(nxy[0]), W_in);
      var y = gs_denormalize(f32(nxy[1]), H_in);

      ${nB(o,l,r)}
  }`}},nP=(t,r)=>{nI(t.inputs),t.compute(nR(t.inputs,r))},nL=t=>tS({alignCorners:t.align_corners,mode:t.mode,paddingMode:t.padding_mode,format:t.format})}),ly=L(()=>{oD(),oF(),oH(),oG(),oJ(),oK(),oX(),nD=(t,r)=>t.length>r&&t[r].dims.length>0?t[r]:void 0,nU=(t,r)=>{let s,i=t[0],n=nD(t,1),a=nD(t,2),o=nD(t,3),l=nD(t,4),u=nD(t,5),d=nD(t,6),c=nD(t,7);if(3!==i.dims.length&&5!==i.dims.length)throw Error("Input query is expected to have 3 or 5 dimensions");let p=i.dims[0],h=i.dims[1],f=3===i.dims.length?i.dims[2]:r.numHeads*i.dims[4],m=h,_=0,g=0,y=Math.floor(f/r.numHeads);if(d&&c&&e5.size(d.dims)&&e5.size(c.dims)){if(4!==d.dims.length)throw Error('Input "past_key" is expected to have 4 dimensions');if(d.dims[0]!==p||d.dims[1]!==r.numHeads||d.dims[3]!==y)throw Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(c.dims[0]!==p||c.dims[1]!==r.numHeads||c.dims[3]!==y)throw Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(d.dims[2]!==c.dims[2])throw Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(4!==c.dims.length)throw Error('Input "past_value" is expected to have 4 dimensions');_=d.dims[2],g=d.dims[2]}else if(d&&e5.size(d.dims)||c&&e5.size(c.dims))throw Error('Input "past_key" and "past_value" shall be both present or both absent');if(n&&e5.size(n.dims)>0){if(3!==i.dims.length)throw Error('Input "query" is expected to have 3 dimensions when key is given');if(n.dims.length<3||n.dims.length>5)throw Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(i.dims[0]!==n.dims[0])throw Error('Input "query" and "key" shall have same dim 0 (batch size)');if(3===n.dims.length){if(n.dims[2]!==i.dims[2])throw Error('Input "query" and "key" shall have same dim 2 (hidden_size)');s=2,m=n.dims[1]}else if(5===n.dims.length){if(n.dims[2]!==r.numHeads||2!==n.dims[3]||n.dims[4]!==y)throw Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(a)throw Error('Expect "value" be none when "key" has packed kv format.');s=5,m=n.dims[1]}else{if(n.dims[1]!==r.numHeads||n.dims[3]!==y)throw Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');s=0,m=n.dims[2]}}else{if(5!==i.dims.length)throw Error('Input "query" is expected to have 5 dimensions when key is empty');if(i.dims[2]!==r.numHeads||3!==i.dims[3])throw Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');s=3}if(o&&e5.size(o.dims)>0){if(1!==o.dims.length)throw Error('Input "bias" is expected to have 1 dimension');if(n&&5===n.dims.length&&2===n.dims[3])throw Error("bias is not allowed for packed kv.")}let w=_+m,b=0;if(l&&e5.size(l.dims)>0){b=8;let t=l.dims;throw 1===t.length?t[0]===p?b=1:t[0]===3*p+2&&(b=3):2===t.length&&t[0]===p&&t[1]===w&&(b=5),8===b?Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):Error("Mask not supported")}let x=!1,v=f;if(a&&e5.size(a.dims)>0){if(3!==a.dims.length&&4!==a.dims.length)throw Error('Input "value" is expected to have 3 or 4 dimensions');if(i.dims[0]!==a.dims[0])throw Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(3===a.dims.length){if(m!==a.dims[1])throw Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');v=a.dims[2]}else{if(m!==a.dims[2])throw Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');v=a.dims[1]*a.dims[3],x=!0}}if(l&&e5.size(l.dims)>0)throw Error("Key padding mask is not supported");if(u&&e5.size(u.dims)>0){if(4!==u.dims.length)throw Error('Input "attention_bias" is expected to have 4 dimensions');if(u.dims[0]!==p||u.dims[1]!==r.numHeads||u.dims[2]!==h||u.dims[3]!==w)throw Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:p,sequenceLength:h,pastSequenceLength:_,kvSequenceLength:m,totalSequenceLength:w,maxSequenceLength:g,inputHiddenSize:0,hiddenSize:f,vHiddenSize:v,headSize:y,vHeadSize:Math.floor(v/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:b,scale:r.scale,broadcastResPosBias:!1,passPastInKv:x,qkvFormat:s}},nN=t=>tS({...t}),nF=tS({perm:[0,2,1,3]}),nq=(t,r,s,i,n,a,o)=>{let l=[i,n,a],u=e5.size(l),d=[{type:12,data:u},{type:12,data:o},{type:12,data:a}];return t.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:l,dataType:r.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:d}),getShaderSource:t=>{let i=tU("qkv_with_bias",r.dataType,l),n=tD("qkv",r.dataType,l),a=tD("bias",s.dataType,l);return`
  ${t.registerUniforms([{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}]).declareVariables(n,a,i)}
  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`}},{inputs:[r,s],outputs:[-1]})[0]},nV=(t,r,s,i,n,a,o,l)=>{let u=a;if(!(o&&e5.size(o.dims)>0))return 3===a.dims.length&&(u=a.reshape([r,i,s,n])),1===s||1===i?u:t.compute(tY(u,nF.perm),{inputs:[u],outputs:[-1]})[0];if(1===i)throw Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return u=(u=nq(t,a,o,r,i,s*n,l)).reshape([r,i,s,n]),1===s||1===i?u:t.compute(tY(u,nF.perm),{inputs:[u],outputs:[-1]})[0]},nj=(t,r)=>{let s=nU(t.inputs,r),i=t.inputs[0],n=nD(t.inputs,1),a=nD(t.inputs,2),o=nD(t.inputs,3),l=nD(t.inputs,4),u=nD(t.inputs,5),d=nD(t.inputs,6),c=nD(t.inputs,7);if(5===i.dims.length)throw Error("Packed QKV is not implemented");if(n?.dims.length===5)throw Error("Packed KV is not implemented");let p=n&&a&&4===n.dims.length&&4===a.dims.length,h=nV(t,s.batchSize,s.numHeads,s.sequenceLength,s.headSize,i,o,0);if(p)return rG(t,h,n,a,l,void 0,d,c,u,s);if(!n||!a)throw Error("key and value must be provided");let f=nV(t,s.batchSize,s.numHeads,s.kvSequenceLength,s.headSize,n,o,s.hiddenSize),m=nV(t,s.batchSize,s.numHeads,s.kvSequenceLength,s.vHeadSize,a,o,2*s.hiddenSize);rG(t,h,f,m,l,void 0,d,c,u,s)}}),lw=L(()=>{oD(),oF(),oH(),oK(),nG=t=>{if(!t||t.length<1)throw Error("too few inputs")},nW=(t,r)=>{let s=[],i=r.numOutputs;return t[1].dims[0]>0&&(t[1].getBigInt64Array().forEach(t=>s.push(Number(t))),i=s.length),tS({numOutputs:i,axis:r.axis,splitSizes:s})},nH=t=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${t}u; i += 1u ) {
    if (index < ${tP("uniforms.size_in_split_axis","i",t)}) {
        return i;
    }
    }
    return ${t}u;
}`,nK=t=>{let r=t.length,s=[];for(let i=0;i<r;++i){let n=t[i].setByIndices("indices","input[global_idx]");1===r?s.push(n):0===i?s.push(`if (output_number == ${i}u) { ${n} }`):i===r-1?s.push(`else { ${n} }`):s.push(`else if (output_number == ${i}) { ${n} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${t[0].type.indices}, global_idx: u32) {
        ${s.join(`
`)}
      }`},nX=(t,r)=>{let s=t[0].dims,i=e5.size(s),n=t[0].dataType,a=e5.normalizeAxis(r.axis,s.length),o=Array(r.numOutputs),l=tD("input",n,s.length),u=Array(r.numOutputs),d=[],c=[],p=0,h=[{type:12,data:i}];for(let i=0;i<r.numOutputs;i++){p+=r.splitSizes[i],u[i]=p;let l=s.slice();l[a]=r.splitSizes[i],c.push(l),o[i]=tU(`output${i}`,n,l.length),d.push({dims:c[i],dataType:t[0].dataType})}return h.push({type:12,data:u},...tC(s,...c)),{name:"Split",shaderCache:{hint:r.cacheKey,inputDependencies:["rank"]},getShaderSource:t=>`
  ${t.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",u.length).declareVariables(l,...o)}
  ${nH(u.length)}
  ${nK(o)}

  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${l.offsetToIndices("global_idx")};
    var index = ${l.indicesGet("indices",a)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${tP("uniforms.size_in_split_axis","output_number - 1u",u.length)};
      ${l.indicesSet("indices",a,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`,getRunData:()=>({outputs:d,dispatchGroup:{x:Math.ceil(i/64)},programUniforms:h})}},nY=(t,r)=>{nG(t.inputs);let s=1===t.inputs.length?r:nW(t.inputs,r);t.compute(nX(t.inputs,s),{inputs:[0]})},nQ=t=>{let r=t.axis,s=t.splitSizes,i=t.numOutputs<0?s.length:t.numOutputs;if(i!==s.length)throw Error("numOutputs and splitSizes lengh must be equal");return tS({axis:r,numOutputs:i,splitSizes:s})}}),lb=L(()=>{oD(),oF(),oH(),oK(),nZ=(t,r)=>{let[s,i,n,a]=t,{numHeads:o,rotaryEmbeddingDim:l}=r;if(3!==s.dims.length&&4!==s.dims.length)throw Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${s.dims.length}`);if(!e5.areEqual(i.dims,[])&&!e5.areEqual(i.dims,[1])&&2!==i.dims.length)throw Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${i.dims.length}`);if(2!==n.dims.length)throw Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${n.dims.length}`);if(2!==a.dims.length)throw Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${a.dims.length}`);if(!e5.areEqual(n.dims,a.dims))throw Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(l>0&&0===o)throw Error("num_heads must be provided if rotary_embedding_dim is specified");let u=s.dims[0],d=s.dims[s.dims.length-2],c=n.dims[0],p=e5.sizeFromDimension(s.dims,1)/d,h=0===l?2*n.dims[1]:p/o;if(l>h)throw Error("rotary_embedding_dim must be less than or equal to head_size");if(2===i.dims.length){if(u!==i.dims[0])throw Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${i.dims[0]}`);if(d!==i.dims[1])throw Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${i.dims[1]}`)}if(h/2!==n.dims[1]&&l/2!==n.dims[1])throw Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${n.dims[1]}`);if(d>c)throw Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},nJ=(t,r)=>{let{interleaved:s,numHeads:i,rotaryEmbeddingDim:n,scale:a}=r,o=t[0].dims[0],l=e5.sizeFromDimension(t[0].dims,1),u=t[0].dims[t[0].dims.length-2],d=l/u,c=t[2].dims[1],p=0===n?2*c:d/i,h=[o,u,d/p,p-c],f=e5.computeStrides(h),m=[{type:1,data:a},{type:12,data:h},{type:12,data:f},...3===t[0].dims.length?Array({type:12,data:[l,d,p,1]}):[],...4===t[0].dims.length?Array({type:12,data:[l,p,u*p,1]}):[],...tC(t[0].dims,t[1].dims,t[2].dims,t[3].dims,t[0].dims)];return{name:"RotaryEmbedding",shaderCache:{hint:tS({interleaved:s}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:r=>{let i=tD("input",t[0].dataType,t[0].dims.length),n=tD("position_ids",t[1].dataType,t[1].dims.length),a=tD("cos_cache",t[2].dataType,t[2].dims.length),o=tD("sin_cache",t[3].dataType,t[3].dims.length),l=tU("output",t[0].dataType,t[0].dims.length);return r.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:h.length},{name:"global_strides",type:"u32",length:f.length},{name:"input_output_strides",type:"u32",length:f.length}]),`
        ${r.declareVariables(i,n,a,o,l)}

        ${r.mainStart(tT)}
          let half_rotary_emb_dim = uniforms.${a.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${r.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${n.broadcastedIndicesToOffset("bsnh.xy",tU("",n.type.tensor,2))};
            let position_id =
                u32(${n.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${s});
            let j = i + select(half_rotary_emb_dim, 1, ${s});
            let re = ${i.getByOffset("i")} * ${a.get("position_id","bsnh[3]")} -
                ${i.getByOffset("j")} * ${o.get("position_id","bsnh[3]")};
            ${l.setByOffset("i","re")}
            let im = ${i.getByOffset("i")} * ${o.get("position_id","bsnh[3]")} +
                ${i.getByOffset("j")} * ${a.get("position_id","bsnh[3]")};
            ${l.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${l.setByOffset("k",i.getByOffset("k"))}
          }
        }`},getRunData:()=>({outputs:[{dims:t[0].dims,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(e5.size(h)/tT)},programUniforms:m})}},n0=(t,r)=>{nZ(t.inputs,r),t.compute(nJ(t.inputs,r))}}),lx=L(()=>{oH(),oD(),oJ(),ly(),lw(),oX(),lb(),oK(),n1=(t,r)=>{if(r.doRotary&&t.length<=7)throw Error("cos_cache and sin_cache inputs are required if do_rotary is specified");let s=t[0],i=t[1],n=t[2],a=t[3],o=t[4];if(0!==r.doRotary&&t.length<=7)throw Error("cos_cast and sin_cache are expected if do_rotary attribute is non-zero");if(-1!==r.localWindowSize)throw Error("Local attention is not supported");if(0!==r.softcap)throw Error("Softcap is not supported");if(0!==r.rotaryInterleaved)throw Error("Rotary interleaved is not supported");if(r.smoothSoftmax)throw Error("Smooth softmax is not supported");if(3!==s.dims.length&&5!==s.dims.length)throw Error("Input query is expected to have 3 or 5 dimensions");let l=s.dims[0],u=s.dims[1],d=3===s.dims.length?s.dims[2]:r.numHeads*s.dims[4],c=u,p=0,h=!i||0===i.dims.length,f=Math.floor(h?d/(r.numHeads+2*r.kvNumHeads):d/r.numHeads);h&&(d=f*r.numHeads);let m=a&&0!==a.dims.length,_=o&&0!==o.dims.length;if(m&&4===a.dims.length&&a.dims[0]===l&&a.dims[1]!==r.kvNumHeads&&a.dims[2]===r.kvNumHeads&&a.dims[3]===f)throw Error("BSNH pastKey/pastValue is not supported");if(m&&_){if(4!==a.dims.length)throw Error('Input "past_key" is expected to have 4 dimensions');if(4!==o.dims.length)throw Error('Input "past_value" is expected to have 4 dimensions');p=a.dims[2]}else if(m||_)throw Error('Input "past_key" and "past_value" shall be both present or both absent');let g=1;if(i&&i.dims.length>0){if(3!==s.dims.length)throw Error('Input "query" is expected to have 3 dimensions when key is given');if(i.dims.length<3||i.dims.length>5)throw Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(s.dims[0]!==i.dims[0])throw Error('Input "query" and "key" shall have same dim 0 (batch size)');if(3===i.dims.length){if(s.dims[2]%i.dims[2]!=0)throw Error('Dimension 2 of "query" should be a multiple of "key"');c=i.dims[1]}else if(5===i.dims.length){if(i.dims[2]!==r.numHeads||2!==i.dims[3]||i.dims[4]!==f)throw Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(n)throw Error('Expect "value" be none when "key" has packed kv format.');c=i.dims[1]}else{if(i.dims[1]!==r.numHeads||i.dims[3]!==f)throw Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');c=i.dims[2]}}else{if(3!==s.dims.length&&5!==s.dims.length)throw Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(5===s.dims.length&&(s.dims[2]!==r.numHeads||3!==s.dims[3]))throw Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');g=3}let y=!1,w=r.kvNumHeads?f*r.kvNumHeads:d;if(n&&n.dims.length>0){if(3!==n.dims.length&&4!==n.dims.length)throw Error('Input "value" is expected to have 3 or 4 dimensions');if(s.dims[0]!==n.dims[0])throw Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(3===n.dims.length){if(c!==n.dims[1])throw Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');w=n.dims[2]}else{if(c!==n.dims[2])throw Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');w=n.dims[1]*n.dims[3],y=!0}}let b=t.length>4?t[5]:void 0;if(b&&1!==b.dims.length&&b.dims[0]!==l)throw Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:l,sequenceLength:u,pastSequenceLength:p,kvSequenceLength:c,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:d,vHiddenSize:w,headSize:f,vHeadSize:Math.floor(w/r.kvNumHeads),numHeads:r.numHeads,kvNumHeads:r.kvNumHeads,nReps:r.numHeads/r.kvNumHeads,pastPresentShareBuffer:!1,maskType:0,scale:r.scale,broadcastResPosBias:!1,passPastInKv:y,qkvFormat:g}},n2=tS({perm:[0,2,1,3]}),n3=(t,r,s)=>{let i=r,n=s.kvNumHeads;return 3===r.dims.length&&0!==s.kvSequenceLength&&(i=r.reshape([s.batchSize,s.kvSequenceLength,n,s.headSize]),i=t.compute(tY(i,n2.perm),{inputs:[i],outputs:[-1]})[0]),i},n4=(t,r,s,i)=>{let n=[t*r],a=t*r,o=[{type:12,data:a},{type:12,data:r},{type:12,data:t}];return{name:"GeneratePositionIds",shaderCache:{hint:`${t};${r}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:n,dataType:7}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:o}),getShaderSource:t=>{let r=tD("seq_lens",s.dataType,s.dims),a=tD("total_seq_lens",i.dataType,i.dims),o=tU("pos_ids",7,n);return`
  ${t.registerUniforms([{name:"output_size",type:"u32"},{name:"sequence_length",type:"u32"},{name:"batch_size",type:"u32"}]).declareVariables(r,a,o)}
  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let total_sequence_length = u32(${a.getByOffset("0")});
    let is_subsequent_prompt = uniforms.sequence_length > 1 && uniforms.sequence_length != total_sequence_length;
    let is_first_prompt = !is_subsequent_prompt && uniforms.sequence_length == total_sequence_length;
    let batch_idx = global_idx / uniforms.sequence_length;
    let sequence_idx = i32(global_idx % uniforms.sequence_length);
    var pos_id: i32 = 0;
    let seqlen = ${r.getByOffset("batch_idx")};
    let total_seqlen = seqlen + 1;
    if (is_first_prompt) {
      if (sequence_idx < total_seqlen) {
        pos_id = sequence_idx;
      } else {
        pos_id = 1;
      }
      ${o.setByOffset("global_idx","pos_id")}
    } else if (is_subsequent_prompt) {
      let past_seqlen = total_seqlen - i32(uniforms.sequence_length);
      if (past_seqlen + sequence_idx < total_seqlen) {
        pos_id = past_seqlen + sequence_idx;
      } else {
        pos_id = 1;
      }
      ${o.setByOffset("global_idx","pos_id")}
    } else if (global_idx < uniforms.batch_size) {
      ${o.setByOffset("global_idx","seqlen")}
    };
  }
  `}}},n6=(t,r)=>{let s=n1(t.inputs,r);if(5===t.inputs[0].dims.length)throw Error("Packed QKV is not implemented");if(t.inputs[1]?.dims.length===5)throw Error("Packed KV is not implemented");let i=t.inputs[0],n=t.inputs[1]&&t.inputs[1].dims.length>0?t.inputs[1]:void 0,a=t.inputs[2]&&t.inputs[2].dims.length>0?t.inputs[2]:void 0,o=t.inputs[3]&&0!==t.inputs[3].dims.length?t.inputs[3]:void 0,l=t.inputs[4]&&0!==t.inputs[4].dims.length?t.inputs[4]:void 0,u=t.inputs.length>4?t.inputs[5]:void 0,d=t.inputs.length>5?t.inputs[6]:void 0,c=s.kvNumHeads?s.kvNumHeads:s.numHeads,p=tS({axis:2,numOutputs:3,splitSizes:[s.numHeads*s.headSize,c*s.headSize,c*s.headSize]}),[h,f,m]=n||a?[i,n,a]:t.compute(nX([i],p),{inputs:[i],outputs:[-1,-1,-1]}),_,g;if(r.doRotary){let i=t.compute(n4(s.batchSize,s.sequenceLength,u,d),{inputs:[u,d],outputs:[-1]})[0],n=t.inputs[7],a=t.inputs[8],o=tS({interleaved:0!==r.rotaryInterleaved,numHeads:s.numHeads,rotaryEmbeddingDim:0,scale:r.scale}),l=[h,i,n,a],c=[-1];_=t.compute(nJ(l,o),{inputs:l,outputs:c})[0],l.splice(0,1,f);let p=tS({interleaved:0!==r.rotaryInterleaved,numHeads:s.kvNumHeads,rotaryEmbeddingDim:0,scale:r.scale});g=t.compute(nJ(l,p),{inputs:l,outputs:c})[0]}let y=nV(t,s.batchSize,s.numHeads,s.sequenceLength,s.headSize,r.doRotary?_:h,void 0,0),w=n3(t,r.doRotary?g:f,s),b=n3(t,m,s);rG(t,y,w,b,void 0,void 0,o,l,void 0,s,u,d)}}),lv=L(()=>{oD(),oF(),oX(),oK(),n8=(t,r,s,i,n,a,o,l)=>{let u=tM(a),d=1===u?"f32":`vec${u}f`,c=1===u?"vec2f":`mat2x${u}f`,p=n*o,h=64;1===p&&(h=256);let f=[n,o,a/u],m=[n,o,2],_=[];return _.push(...tC(f,m)),t.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${u};${l};${h}`,inputDependencies:["rank","type","type"]},getRunData:()=>({outputs:[{dims:m,dataType:1}],dispatchGroup:{x:p},programUniforms:_}),getShaderSource:t=>{let n=tD("x",r.dataType,3,u),a=[n,tD("scale",s.dataType,s.dims),tD("bias",i.dataType,i.dims),tU("output",1,3,2)];return`
  var<workgroup> workgroup_shared : array<${c}, ${h}>;
  const workgroup_size = ${h}u;
  ${t.declareVariables(...a)}
  ${t.mainStart(h)}
    let batch = workgroup_index / uniforms.x_shape[1];
    let channel = workgroup_index % uniforms.x_shape[1];
    let hight = uniforms.x_shape[2];
    // initialize workgroup memory
    var sum = ${d}(0);
    var squared_sum = ${d}(0);
    for (var h = local_idx; h < hight; h += workgroup_size) {
      let value = ${d}(${n.get("batch","channel","h")});
      sum += value;
      squared_sum += value * value;
    }
    workgroup_shared[local_idx] = ${c}(sum, squared_sum);
    workgroupBarrier();

    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (local_idx < currSize) {
        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];
      }
      workgroupBarrier();
    }
    if (local_idx == 0) {
      let sum_final = ${tR("workgroup_shared[0][0]",u)} / f32(hight * ${u});
      let squared_sum_final = ${tR("workgroup_shared[0][1]",u)} / f32(hight * ${u});

      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${l}));
      let channel_scale = inv_std_dev * f32(scale[channel]);
      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;
      output[workgroup_index] = vec2f(channel_scale, channel_shift);
    }
  }`}},{inputs:[r,s,i],outputs:[-1]})[0]},n5=(t,r,s)=>{let i=r[0].dims,n=i[0],a=i[1],o=e5.sizeFromDimension(i,2),l=tM(o),u=e5.size(i)/l,d=n8(t,r[0],r[1],r[2],n,o,a,s.epsilon),c=[n,a,o/l],p=[n,a];t.compute({name:"InstanceNormalization",shaderCache:{hint:`${l}`,inputDependencies:["type","none"]},getRunData:()=>({outputs:[{dims:i,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:[{type:12,data:u},...tC(c,p,c)]}),getShaderSource:t=>{let s=tD("x",r[0].dataType,c.length,l),i=tD("scale_shift",1,p.length,2),n=tU("output",r[0].dataType,c.length,l),a=[s,i,n];return`
  ${t.registerUniform("output_size","u32").declareVariables(...a)}
  ${t.mainStart()}
  ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let outputIndices = ${n.offsetToIndices("global_idx")};
      let batch = outputIndices[0];
      let channel = outputIndices[1];
      let scale_shift = ${i.getByIndices("vec2<u32>(batch, channel)")};
      let value = ${s.getByOffset("global_idx")} * ${n.type.value}(scale_shift.x) + ${n.type.value}(scale_shift.y);
      ${n.setByOffset("global_idx","value")};
  }`}},{inputs:[r[0],d]})},n9=(t,r,s)=>{let i=r[0].dims,n=i[0],a=i[i.length-1],o=e5.sizeFromDimension(i,1)/a,l=tM(a),u=e5.size(i)/l,d=[{type:12,data:o},{type:12,data:Math.floor(a/l)}],c=!1,p=[0,i.length-1];for(let t=0;t<i.length-2;t++)c=c||1!==i[t+1],p.push(t+1);let h=(c=c&&1!==i[i.length-1])?t.compute(tY(t.inputs[0],p),{inputs:[t.inputs[0]],outputs:[-1]})[0]:t.inputs[0].reshape(Array.from({length:i.length},(t,r)=>i[p[r]])),f=n8(t,h,r[1],r[2],n,o,a,s.epsilon);t.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${l}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:i,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:d}),getShaderSource:t=>{let s=tz(r[0].dataType),n=1===l?"vec2f":`mat${l}x2f`,a=t=>{let r=0===t?"x":"y",i=1===l?"f32":`vec${l}f`;switch(l){case 1:return`${s}(${i}(scale.${r}))`;case 2:return`vec2<${s}>(${i}(scale[0].${r}, scale[1].${r}))`;case 4:return`vec4<${s}>(${i}(scale[0].${r}, scale[1].${r}, scale[2].${r}, scale[3].${r}))`;default:throw Error(`Not supported compoents ${l}`)}},o=tD("input",r[0].dataType,r[0].dims,l),u=tU("output",r[0].dataType,i,l);return`
  @group(0) @binding(0) var<storage, read> input : array<${o.type.storage}>;
  @group(0) @binding(1) var<storage, read> scale_input : array<${n}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${u.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${t.mainStart()}
    let current_image_number = global_idx / (uniforms.C * uniforms.H);
    let current_channel_number = global_idx % uniforms.C;

    let scale_offset = current_image_number * uniforms.C + current_channel_number;
    let scale = scale_input[scale_offset];
    output[global_idx] = fma(input[global_idx], ${a(0)}, ${a(1)});
  }`}},{inputs:[r[0],f]})},n7=(t,r)=>{"NHWC"===r.format?n9(t,t.inputs,r):n5(t,t.inputs,r)}}),l$=L(()=>{oD(),oF(),oK(),ae=t=>{if(!t||t.length<2)throw Error("layerNorm requires at least 2 inputs.")},at=(t,r,s)=>{let i=r.simplified,n=t[0].dims,a=t[1],o=!i&&t[2],l=e5.normalizeAxis(r.axis,n.length),u=e5.sizeToDimension(n,l),d=e5.sizeFromDimension(n,l),c=e5.size(a.dims),p=o?e5.size(o.dims):0;if(c!==d||o&&p!==d)throw Error(`Size of X.shape()[axis:] == ${d}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${c} and bias size of ${p}`);let h=[];for(let t=0;t<n.length;++t)t<l?h.push(n[t]):h.push(1);let f=tM(d),m=["type","type"],_=[{type:12,data:u},{type:1,data:d},{type:12,data:Math.floor(d/f)},{type:1,data:r.epsilon}];o&&m.push("type");let g=s>1,y=s>2,w=[{dims:n,dataType:t[0].dataType}];return g&&w.push({dims:h,dataType:1}),y&&w.push({dims:h,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${f};${s};${i}`,inputDependencies:m},getRunData:()=>({outputs:w,dispatchGroup:{x:Math.ceil(u/64)},programUniforms:_}),getShaderSource:r=>{let s=tz(t[0].dataType),l=[tD("x",t[0].dataType,t[0].dims,f),tD("scale",a.dataType,a.dims,f)];return o&&l.push(tD("bias",o.dataType,o.dims,f)),l.push(tU("output",t[0].dataType,n,f)),g&&l.push(tU("mean_data_output",1,h)),y&&l.push(tU("inv_std_output",1,h)),`
  ${r.registerUniforms([{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}]).declareVariables(...l)}
  ${r.mainStart()}
    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${tO("f32",f)};
    var mean_square_vector = ${tO("f32",f)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${tB(s,f,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${tR("mean_vector",f)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${tR("mean_square_vector",f)} / uniforms.norm_size ${i?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${tB(s,f,"x[j + offset]")};
      let f32scale = ${tB(s,f,"scale[j]")};
      output[j + offset] = ${l[0].type.value}((f32input ${i?"":"- mean"}) * inv_std_dev * f32scale
        ${o?`+ ${tB(s,f,"bias[j]")}`:""}
      );
    }

    ${g?"mean_data_output[global_idx] = mean":""};
    ${y?"inv_std_output[global_idx] = inv_std_dev":""};
  }`}}},ar=(t,r)=>{ae(t.inputs),t.compute(at(t.inputs,r,t.outputCount))}}),lk=L(()=>{oF(),o7(),le(),as=t=>{if(!t||2!==t.length)throw Error("MatMul requires 2 inputs.");if(t[0].dims[t[0].dims.length-1]!==t[1].dims[t[1].dims.length-2])throw Error("shared dimension does not match.")},ai=t=>{as(t.inputs);let r=e8.calcShape(t.inputs[0].dims,t.inputs[1].dims,!0);if(!r)throw Error("Can't use matmul on the given tensors");let s=r[r.length-1],i=t.inputs[0].dims[t.inputs[0].dims.length-1];if(s<8&&i<8)t.compute(ir(t.inputs,{activation:""},r));else{let n=r[r.length-2],a=e5.size(t.inputs[0].dims.slice(0,-2)),o=e5.size(t.inputs[1].dims.slice(0,-2));if(1!==a&&1===n&&1===o){let n=t.inputs[0].reshape([1,a,i]),o=t.inputs[1].reshape([1,i,s]),l=[1,a,s],u=[n,o];t.compute(ic(u,{activation:""},r,l),{inputs:u})}else t.compute(ic(t.inputs,{activation:""},r))}}}),lE=L(()=>{oD(),oF(),oH(),oK(),an=(t,r)=>{if(t.length<3||t.length>4)throw Error("MatMulNBits requires 3 or 4 inputs");let s=t[0],i=s.dims.length;if(s.dims[i-1]!==r.k)throw Error("The last dim of input shape does not match the k value");let n=Math.floor((r.k+r.blockSize-1)/r.blockSize),a=r.blockSize/8*r.bits,o=t[1];if(!e5.areEqual(o.dims,[r.n,n,a]))throw Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let l=t[2].dims;if(e5.size(l)!==r.n*n)throw Error("scales input size error.");if(4===t.length){let s=t[3].dims,i=r.bits>4?r.n*n:r.n*Math.floor((n+1)/2);if(e5.size(s)!==i)throw Error("zeroPoints input size error.")}},aa=(t,r)=>{let s=t[0].dims,i=s.length,n=s[i-2],a=r.k,o=r.n,l=s.slice(0,i-2),u=e5.size(l),d=t[1].dims[2]/4,c=t[0].dataType,p=tM(r.k),h=tM(d),f=tM(o),m=l.concat([n,o]),_=n>1&&o/f%2==0?2:1,g=e5.size(m)/f/_,y=[],w=[u,n,a/p],b=e5.convertShape(t[1].dims).slice();b.splice(-1,1,d/h),y.push(...tC(w)),y.push(...tC(b)),y.push(...tC(t[2].dims)),4===t.length&&y.push(...tC(e5.convertShape(t[3].dims)));let x=[u,n,o/f];return y.push(...tC(x)),{name:"MatMulNBits",shaderCache:{hint:`${r.blockSize};${r.bits};${p};${h};${f};${_};64`,inputDependencies:Array(t.length).fill("rank")},getRunData:()=>({outputs:[{dims:m,dataType:c}],dispatchGroup:{x:g},programUniforms:y}),getShaderSource:s=>{let i=w.length,n=tD("a",t[0].dataType,i,p),a=tD("b",12,b.length,h),o=tD("scales",t[2].dataType,t[2].dims.length),l=[n,a,o],u=4===t.length?tD("zero_points",12,t[3].dims.length):void 0;u&&l.push(u);let c=x.length,m=tU("output",t[0].dataType,c,f),g=tz(t[0].dataType),y=(()=>{switch(p){case 1:return`array<${g}, 8>`;case 2:return`mat4x2<${g}>`;case 4:return`mat2x4<${g}>`;default:throw Error(`${p}-component is not supported.`)}})();return`
        var<workgroup> workgroup_shared: array<${m.type.value}, ${64*_}>;
        ${s.declareVariables(...l,m)}
        ${s.mainStart([64,1,1])}
          let output_indices = ${m.offsetToIndices(`(global_idx / 64) * ${_}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let nBlocksPerCol = uniforms.b_shape[1];

          for (var block = local_id.x; block < nBlocksPerCol; block += 64) {
            //process one block
            var word_offset: u32 = block * ${r.blockSize/p};
            ${(()=>{let t=`
            var col_index = col * ${f};
            ${u?`
            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;
            var zero_point_byte_count: u32;
            var zero_point_word_index: u32;
            var zero_point_byte_offset: u32;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32;
            var zero_point_word: u32;`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${g}(8);`}
            `;for(let r=0;r<f*_;r++)t+=`
            let scale${r} = ${o.getByOffset("col_index * nBlocksPerCol + block")};
            ${u?`
            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);
            zero_point_word_index = zero_point_byte_count >> 0x2u;
            zero_point_byte_offset = zero_point_byte_count & 0x3u;
            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            zero_point_word = ${u.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point${r} = ${g}((zero_point_word) & 0xFu);`:""}
            col_index += 1;`;return t})()}
            for (var word: u32 = 0; word < ${d}; word += ${h}) {
              ${(()=>{let t=`col_index = col * ${f};`;for(let r=0;r<f*_;r++)t+=`
            let b${r}_data = ${a.getByIndices(`${a.type.indices}(col_index, block, word)`)};
            col_index += 1;`;return t+`
            var b_value: u32;
            let b_mask: u32 = 0x0F0F0F0Fu;
            var b_value_lower: vec4<u32>;
            var b_value_upper: vec4<u32>;
            var b_quantized_values: ${y};
            var b_dequantized_values: ${y};`})()}
              for (var i: u32 = 0; i < ${h}; i++) {
                ${(()=>{let t=`
          // reuse a data
            var input_offset = ${n.indicesToOffset(`${n.type.indices}(batch, row, word_offset)`)};
            var a_data: ${y};
            for (var j: u32 = 0; j < ${8/p}; j++) {
              a_data[j] = ${n.getByOffset("input_offset")};
              input_offset++;
            }
          `;for(let r=0;r<f*_;r++)t+=`
            b_value = ${1===h?`b${r}_data`:`b${r}_data[i]`};
            b_value_lower = unpack4xU8(b_value & b_mask);
            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);
            b_quantized_values = ${y}(${Array.from({length:4},(t,r)=>`${g}(b_value_lower[${r}]), ${g}(b_value_upper[${r}])`).join(", ")});
            b_dequantized_values = ${1===p?`${y}(${Array.from({length:8},(t,s)=>`(b_quantized_values[${s}] - ${u?`zero_point${r}`:"zero_point"}) * scale${r}`).join(", ")});`:`(b_quantized_values - ${y}(${Array(8).fill(`${u?`zero_point${r}`:"zero_point"}`).join(",")})) * scale${r};`};
            workgroup_shared[local_id.x * ${_} + ${Math.floor(r/f)}]${f>1?`[${r%f}]`:""} += ${Array.from({length:8/p},(t,r)=>`${1===p?`a_data[${r}] * b_dequantized_values[${r}]`:`dot(a_data[${r}], b_dequantized_values[${r}])`}`).join(" + ")};
          `;return t})()}
                word_offset += ${8/p};
              }
            }
          }
          workgroupBarrier();

          if (local_id.x < ${_}) {
            var output_value: ${m.type.value} = ${m.type.value}(0);
            var workgroup_shared_offset: u32 = local_id.x;
            for (var b: u32 = 0u; b < 64u; b++) {
              output_value += workgroup_shared[workgroup_shared_offset];
              workgroup_shared_offset += ${_};
            }
            ${m.setByIndices(`${m.type.indices}(batch, row, col + local_id.x)`,"output_value")};
          }
        }`}}},ao=(t,r)=>{let s=t[0].dims,i=s.length,n=s[i-2],a=r.k,o=r.n,l=s.slice(0,i-2),u=e5.size(l),d=t[1].dims[2]/4,c=t[0].dataType,p=tM(r.k),h=tM(d),f=l.concat([n,o]),m=o%8==0?8:o%4==0?4:1,_=128/m,g=_*h*8,y=g/p,w=g/r.blockSize,b=e5.size(f)/m,x=[],v=[u,n,a/p],$=e5.convertShape(t[1].dims).slice();$.splice(-1,1,d/h),x.push(...tC(v)),x.push(...tC($)),x.push(...tC(t[2].dims)),4===t.length&&x.push(...tC(e5.convertShape(t[3].dims)));let k=[u,n,o];return x.push(...tC(k)),{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${r.blockSize};${p};${h};${_};${m}`,inputDependencies:Array(t.length).fill("rank")},getRunData:()=>({outputs:[{dims:f,dataType:c}],dispatchGroup:{x:b},programUniforms:x}),getShaderSource:s=>{let i=v.length,n=tD("a",t[0].dataType,i,p),a=tD("b",12,$.length,h),o=tD("scales",t[2].dataType,t[2].dims.length),l=[n,a,o],u=4===t.length?tD("zero_points",12,t[3].dims.length):void 0;u&&l.push(u);let d=k.length,c=tU("output",t[0].dataType,d),f=tz(t[0].dataType);return`
        var<workgroup> sub_a: array<${n.type.value}, ${y}>;
        var<workgroup> inter_results: array<array<${c.type.value}, ${_}>, ${m}>;
        ${s.declareVariables(...l,c)}
        ${s.mainStart([_,m,1])}
          let output_indices = ${c.offsetToIndices(`workgroup_index * ${m}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let n_blocks_per_col = uniforms.b_shape[1];
          let num_tiles =  (n_blocks_per_col - 1) / ${w} + 1;

          // Loop over shared dimension.
          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {
            let a_col_start = tile * ${y};
            // load one tile A data into shared memory.
            for (var a_offset = local_idx; a_offset < ${y}; a_offset += 128)
            {
              let a_col = a_col_start + a_offset;
              if (a_col < uniforms.a_shape[2])
              {
                sub_a[a_offset] = ${n.getByIndices(`${n.type.indices}(batch, row, a_col)`)};
              } else {
                sub_a[a_offset] = ${n.type.value}(0);
              }
            }
            workgroupBarrier();

            // each thread process one block
            let b_row = col + local_id.y;
            let block = tile * ${w} + local_id.x;
            ${u?`
            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;
            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);
            let zero_point_word_index = zero_point_byte_count >> 0x2u;
            let zero_point_byte_offset = zero_point_byte_count & 0x3u;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            let zero_point_word = ${u.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point = ${f}((zero_point_word) & 0xFu);`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${f}(8);`}
            let scale = ${o.getByOffset("b_row * n_blocks_per_col + block")};
            let b_data = ${a.getByIndices(`${a.type.indices}(b_row, block, 0)`)};
            var word_offset = local_id.x * ${r.blockSize/p};
            for (var i: u32 = 0; i < ${h}; i++) {
              ${(()=>{switch(p){case 1:return`
          let a_data0 = vec4<${f}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);
          let a_data1 = vec4<${f}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`
          let a_data0 = vec4<${f}>(sub_a[word_offset], sub_a[word_offset + 1]);
          let a_data1 = vec4<${f}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return`
          let a_data0 = sub_a[word_offset];
          let a_data1 = sub_a[word_offset + 1];`;default:throw Error(`${p}-component is not supported.`)}})()}
              let b_value = ${1===h?"b_data":"b_data[i]"};
              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);
              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);
              let b_quantized_values = mat2x4<${f}>(${Array.from({length:4},(t,r)=>`${f}(b_value_lower[${r}]), ${f}(b_value_upper[${r}])`).join(", ")});
              let b_dequantized_values = (b_quantized_values - mat2x4<${f}>(${Array(8).fill("zero_point").join(",")})) * scale;
              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(t,r)=>`dot(a_data${r}, b_dequantized_values[${r}])`).join(" + ")};
              word_offset += ${8/p};
            }
            workgroupBarrier();
          }

          if (local_idx < ${m}) {
            var output_value: ${c.type.value} = ${c.type.value}(0);
            for (var b = 0u; b < ${_}; b++) {
              output_value += inter_results[local_idx][b];
            }
            if (col + local_idx < uniforms.output_shape[2])
            {
              ${c.setByIndices(`${c.type.indices}(batch, row, col + local_idx)`,"output_value")}
            }
          }
        }`}}},al=(t,r)=>{an(t.inputs,r),32===r.blockSize&&t.adapterInfo.isVendor("intel")&&t.adapterInfo.isArchitecture("gen-12lp")?t.compute(ao(t.inputs,r)):t.compute(aa(t.inputs,r))},au=t=>tS(t)}),lS=L(()=>{oD(),oF(),oK(),ad=t=>{if(!t||t.length<1)throw Error("Too few inputs");if(1!==t[0].dataType&&10!==t[0].dataType)throw Error("Input type must be float or float16.");if(t.length>=2){let r=2*t[0].dims.length===t[1].dims[0];if(4===t.length&&(r=2*t[3].dims[0]===t[1].dims[0]),!r)throw Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},ac=(t,r,s)=>{let i="";for(let n=r-1;n>=0;--n)i+=`
            k = i32(${t.indicesGet("indices",n)}) - ${tP("uniforms.pads",n,s)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${tP("uniforms.x_shape",n,r)})) {
              break;
            }
            offset += k * i32(${tP("uniforms.x_strides",n,r)});
        `;return`
          value = ${t.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${i}
            value = x[offset];
          }
      `},ap=(t,r,s)=>{let i="";for(let n=r-1;n>=0;--n)i+=`
                k = i32(${t.indicesGet("indices",n)}) - ${tP("uniforms.pads",n,s)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${tP("uniforms.x_shape",n,r)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${tP("uniforms.x_shape",n,r)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${tP("uniforms.x_strides",n,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${i}
              value = x[offset];
          `},ah=(t,r,s)=>{let i="";for(let n=r-1;n>=0;--n)i+=`
                k = i32(${t.indicesGet("indices",n)}) - ${tP("uniforms.pads",n,s)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${tP("uniforms.x_shape",n,r)})) {
                  k = i32(${tP("uniforms.x_shape",n,r)}) - 1;
                }
                offset += k * i32(${tP("uniforms.x_strides",n,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${i}
              value = x[offset];
          `},af=(t,r,s)=>{let i="";for(let n=r-1;n>=0;--n)i+=`
                k = i32(${t.indicesGet("indices",n)}) - ${tP("uniforms.pads",n,s)};
                if (k < 0)  {
                  k += i32(${tP("uniforms.x_shape",n,r)}]);
                }
                if (k >= i32(${tP("uniforms.x_shape",n,r)})) {
                  k -= i32(${tP("uniforms.x_shape",n,r)});
                }
                offset += k * i32(${tP("uniforms.x_strides",n,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${i}
              value = x[offset];
          `},am=(t,r,s)=>{switch(s.mode){case 0:return ac(t,r,s.pads.length);case 1:return ap(t,r,s.pads.length);case 2:return ah(t,r,s.pads.length);case 3:return af(t,r,s.pads.length);default:throw Error("Invalid mode")}},a_=(t,r)=>{let s=e5.padShape(t[0].dims.slice(),r.pads),i=t[0].dims,n=[{type:12,data:e5.size(s)},{type:6,data:r.pads}],a=t.length>=3&&t[2].data;return 0===r.mode&&n.push({type:a?t[2].dataType:1,data:r.value}),n.push(...tC(t[0].dims,s)),{name:"Pad",shaderCache:{hint:`${r.mode}${a}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:s,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(e5.size(s)/64)},programUniforms:n}),getShaderSource:n=>{let o=tU("output",t[0].dataType,s.length),l=tD("x",t[0].dataType,i.length),u=l.type.value,d=am(o,i.length,r),c=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:r.pads.length}];return 0===r.mode&&c.push({name:"constant_value",type:a?u:"f32"}),`
            ${n.registerUniforms(c).declareVariables(l,o)}
            ${n.mainStart()}
            ${n.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${o.offsetToIndices("global_idx")};

            var value = ${u}(0);
            ${d}
            output[global_idx] = value;
        }`}}},ag=(t,r)=>{if(!(t.length>1))return r;{let s=t[1].getBigInt64Array(),i=t.length>=3&&t[2].data?10===t[2].dataType?t[2].getUint16Array()[0]:t[2].getFloat32Array()[0]:0,n=t[0].dims.length,a=new Int32Array(2*n).fill(0);if(t.length>=4){let r=t[3].getBigInt64Array();for(let t=0;t<r.length;t++)a[Number(r[t])]=Number(s[t]),a[Number(r[t])+n]=Number(s[t+r.length])}else s.forEach((t,r)=>a[Number(r)]=Number(t));let o=[];return a.forEach(t=>o.push(t)),{mode:r.mode,value:i,pads:o}}},ay=(t,r)=>{ad(t.inputs);let s=ag(t.inputs,r);t.compute(a_(t.inputs,s),{inputs:[0]})}}),lT=L(()=>{ea(),oD(),oF(),oK(),aw=t=>{if(u.webgpu.validateInputContent&&(!t||1!==t.length))throw Error("Pool ops requires 1 input.")},ab=(t,r,s)=>{let i="NHWC"===r.format,n=t.dims.slice();i&&n.splice(1,0,n.pop());let a=Object.hasOwnProperty.call(r,"dilations"),o=r.kernelShape.slice(),l=r.strides.slice(),u=a?r.dilations.slice():[],d=r.pads.slice();e9.adjustPoolAttributes(s,n,o,l,u,d);let c=e9.computePoolOutputShape(s,n,l,u,o,d,r.autoPad),p=Object.assign({},r);a?Object.assign(p,{kernelShape:o,strides:l,pads:d,dilations:u,cacheKey:r.cacheKey}):Object.assign(p,{kernelShape:o,strides:l,pads:d,cacheKey:r.cacheKey});let h=c.slice();return h.push(h.splice(1,1)[0]),[p,i?h:c]},ax=(t,r)=>{let s="NHWC"===r.format,i=[{type:12,data:e5.size(t)},{type:12,data:e5.size(r.kernelShape)}],n=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(r.kernelShape.length<=2){let t=r.kernelShape[r.kernelShape.length-1],s=r.strides[r.strides.length-1],a=r.pads[r.pads.length/2-1],o=r.pads[r.pads.length-1],l=!!(a+o);i.push({type:12,data:t},{type:12,data:s},{type:12,data:a},{type:12,data:o}),n.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let u=!1;if(2===r.kernelShape.length){let t=r.kernelShape[r.kernelShape.length-2],s=r.strides[r.strides.length-2],a=r.pads[r.pads.length/2-2],o=r.pads[r.pads.length-2];u=!!(a+o),i.push({type:12,data:t},{type:12,data:s},{type:12,data:a},{type:12,data:o}),n.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[i,n,!0,l,u]}{if(s)throw Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let t=e5.computeStrides(r.kernelShape);return i.push({type:12,data:t},{type:12,data:r.pads},{type:12,data:r.strides}),n.push({name:"kernelStrides",type:"u32",length:t.length},{name:"pads",type:"u32",length:r.pads.length},{name:"strides",type:"u32",length:r.strides.length}),[i,n,!!r.pads.reduce((t,r)=>t+r),!1,!1]}},av=(t,r,s,i,n,a,o,l,u,d,c,p)=>{let h="NHWC"===n.format,f=r.type.value,m=tU("output",r.type.tensor,i);if(n.kernelShape.length<=2){let i="",d="",_="",g=s-(h?2:1);if(i=c?`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${g}] = indices[${g}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${g}] < 0 || xIndices[${g}]
                      >= uniforms.x_shape[${g}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${r.indicesToOffset("xIndices")}];
                  ${a}
                }`:`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${g}] = indices[${g}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${r.indicesToOffset("xIndices")}];
                  ${a}
                }`,2===n.kernelShape.length){let t=s-(h?3:2);d=p?`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${t}] = indices[${t}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${t}] < 0 || xIndices[${t}] >= uniforms.x_shape[${t}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${t}] = indices[${t}] * uniforms.sh - uniforms.phStart + j;
                `,_=`
              }
            `}return`
            ${t.registerUniforms(u).declareVariables(r,m)}

            ${t.mainStart()}
              ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${m.offsetToIndices("global_idx")};
              var xIndices = ${m.offsetToIndices("global_idx")};

              var value = ${f}(${l});
              var pad = 0;
              ${d}
              ${i}
              ${_}
              ${o}

              output[global_idx] = value;
            }`}{if(h)throw Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let i=n.kernelShape.length,c=n.pads.length,p="";return p=d?`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${r.indicesToOffset("xIndices")}];
                ${a}
              }`:`
              }
              let x_val = x[${r.indicesToOffset("xIndices")}];
              ${a}
            `,`
            ${t.registerUniforms(u).declareVariables(r,m)}

            ${t.mainStart()}
              ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${m.offsetToIndices("global_idx")};
              var xIndices = ${m.offsetToIndices("global_idx")};

              var offsets: array<u32, ${i}>;

              var value = ${f}(${l});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${i-1}u; j++) {
                  offsets[j] = offset / ${tP("uniforms.kernelStrides","j",i)};
                  offset -= offsets[j] * ${tP("uniforms.kernelStrides","j",i)};
                }
                offsets[${i-1}] = offset;

                isPad = false;
                for (var j = ${s-i}u; j < ${s}u; j++) {
                  xIndices[j] = indices[j] * ${tP("uniforms.strides",`j - ${s-i}u`,i)}
                    + offsets[j - ${s-i}u] - ${tP("uniforms.pads","j - 2u",c)};
                  ${p}
              }
              ${o}

              output[global_idx] = value;
            }`}},a$=t=>`${t.format};${t.ceilMode};${t.autoPad};${t.kernelShape.length}`,ak=t=>`${a$(t)};${t.countIncludePad}`,aE=t=>`${a$(t)};${t.storageOrder};${t.dilations}`,aS=t=>({format:t.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][t.auto_pad],ceilMode:t.ceil_mode,kernelShape:t.kernel_shape,strides:t.strides,pads:t.pads}),aT=(t,r,s,i)=>{let[n,a]=ab(r,i,s),o=tD("x",r.dataType,r.dims.length),l=o.type.value,u="";n.countIncludePad?u+=`value /= ${l}(uniforms.kernelSize);`:u+=`value /= ${l}(i32(uniforms.kernelSize) - pad);`;let[d,c,p,h,f]=ax(a,n);return d.push(...tC(r.dims,a)),{name:t,shaderCache:{hint:`${i.cacheKey};${p};${h};${f}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:a,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(e5.size(a)/64)},programUniforms:d}),getShaderSource:t=>av(t,o,r.dims.length,a.length,n,"value += x_val;",u,0,c,p,h,f)}},aI=t=>{let r=0!==t.count_include_pad,s=aS(t);if(0!==s.ceilMode)throw Error("using ceil() in shape computation is not yet supported for AveragePool");let i={countIncludePad:r,...s,cacheKey:""};return{...i,cacheKey:ak(i)}},az=(t,r)=>{aw(t.inputs),t.compute(aT("AveragePool",t.inputs[0],!1,r))},aA={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},aC=t=>{let r=t.format;return{format:r,...aA,cacheKey:r}},aM=(t,r)=>{aw(t.inputs),t.compute(aT("GlobalAveragePool",t.inputs[0],!0,r))},aO=(t,r,s,i)=>{let[n,a]=ab(r,i,s),o=`
      value = max(x_val, value);
    `,l=tD("x",r.dataType,r.dims.length),[u,d,c,p,h]=ax(a,n);return u.push(...tC(r.dims,a)),{name:t,shaderCache:{hint:`${i.cacheKey};${c};${p};${h}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:a,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(e5.size(a)/64)},programUniforms:u}),getShaderSource:t=>av(t,l,r.dims.length,a.length,n,o,"",10===r.dataType?-65504:-1e5,d,c,p,h)}},aB=(t,r)=>{aw(t.inputs),t.compute(aO("MaxPool",t.inputs[0],!1,r))},aR=t=>{let r=t.storage_order,s=t.dilations,i=aS(t);if(0!==r)throw Error("column major storage order is not yet supported for MaxPool");if(0!==i.ceilMode)throw Error("using ceil() in shape computation is not yet supported for MaxPool");let n={storageOrder:r,dilations:s,...i,cacheKey:""};return{...n,cacheKey:aE(n)}},aP=t=>{let r=t.format;return{format:r,...aA,cacheKey:r}},aL=(t,r)=>{aw(t.inputs),t.compute(aO("GlobalMaxPool",t.inputs[0],!0,r))}}),lI=L(()=>{oD(),oF(),oH(),oK(),aD=(t,r)=>{if(t.length<2||t.length>3)throw Error("DequantizeLinear requires 2 or 3 inputs.");if(3===t.length&&t[1].dims===t[2].dims)throw Error("x-scale and x-zero-point must have the same shape.");if(3===t.length&&t[0].dataType!==t[2].dataType)throw Error("x and x-zero-point must have the same data type.");if(6===t[0].dataType&&t.length>2)throw Error("In the case of dequantizing int32 there is no zero point.");if(0!==t[1].dims.length&&1!==t[1].dims.length&&t[1].dims.length!==t[0].dims.length)throw Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(t.length>2){if(t[0].dataType!==t[2].dataType)throw Error("x and x-zero-point must have the same data type.");if(t[1].dims.length!==t[2].dims.length)throw Error("scale and zero-point inputs must have the same rank.");if(!t[1].dims.map((r,s)=>r===t[2].dims[s]).reduce((t,r)=>t&&r,!0))throw Error("scale and zero-point inputs must have the same shape.")}if(r.blockSize>0){if(0===t[1].dims.length||1===t[1].dims.length&&1===t[1].dims[0])throw Error("blockSize must be set only for block quantization.");if(!t[1].dims.map((s,i)=>i===r.axis||s===t[0].dims[i]).reduce((t,r)=>t&&r,!0))throw Error("For block qunatization, scale input shape to match the input shape except for the axis");if(t[1].dims.length!==t[0].dims.length)throw Error("For block qunatization the scale input rank must be the same as the x rank.");let s=t[0].dims[r.axis],i=t[1].dims[r.axis];if(r.blockSize<Math.ceil(s/i)||r.blockSize>Math.ceil(s/(i-1)-1))throw Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},aU=(t,r)=>{let s=e5.normalizeAxis(r.axis,t[0].dims.length),i=t[0].dataType,n=3===i,a=t[0].dims,o=t[1].dataType,l=e5.size(a),u=3===i||2===i,d=u?[Math.ceil(e5.size(t[0].dims)/4)]:t[0].dims,c=t[1].dims,p=t.length>2?t[2]:void 0,h=p?u?[Math.ceil(e5.size(p.dims)/4)]:p.dims:void 0,f=0===c.length||1===c.length&&1===c[0],m=!1===f&&1===c.length,_=tM(l),g=f&&(!u||4===_),y=g?_:1,w=tD("input",u?12:i,d.length,g&&!u?_:1),b=tD("scale",o,c.length),x=p?tD("zero_point",u?12:i,h.length):void 0,v=tU("output",o,a.length,y),$=[w,b];x&&$.push(x);let k=[d,c];p&&k.push(h);let E=[{type:12,data:l/y},{type:12,data:s},{type:12,data:r.blockSize},...tC(...k,a)];return{name:"DequantizeLinear",shaderCache:{hint:r.cacheKey,inputDependencies:x?["rank","rank","rank"]:["rank","rank"]},getShaderSource:t=>`
      ${t.registerUniforms([{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}]).declareVariables(...$,v)}
      ${t.mainStart()}
          ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let output_indices = ${v.offsetToIndices("global_idx")};

          // Set input x
          ${u?`
            let input = ${w.getByOffset("global_idx / 4")};
            let x_vec = ${n?"unpack4xI8(input)":"unpack4xU8(input)"};
            let x_value = ${1===y?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${w.getByOffset("global_idx")};`};

          // Set scale input
          ${f?`let scale_value= ${b.getByOffset("0")}`:m?`
            let scale_index = ${v.indicesGet("output_indices","uniforms.axis")};
            let scale_value= ${b.getByOffset("scale_index")};`:`
            var scale_indices: ${b.type.indices} = output_indices;
            let index = ${b.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;
            ${b.indicesSet("scale_indices","uniforms.axis","index")};
            let scale_value= ${b.getByIndices("scale_indices")};`};

          // Set zero-point input
          ${x?f?u?`
                let zero_point_input = ${x.getByOffset("0")};
                let zero_point_vec =  ${n?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${x.getByOffset("0")}`:m?u?`
                let zero_point_index = ${v.indicesGet("output_indices","uniforms.axis")};
                let zero_point_input = ${x.getByOffset("zero_point_index / 4")};
                let zero_point_vec =  ${n?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`
                let zero_point_index = ${v.indicesGet("output_indices","uniforms.axis")};
                let zero_point_value = ${x.getByOffset("zero_point_index")};`:u?`
                let zero_point_offset = ${b.indicesToOffset("scale_indices")};
                let zero_point_input = ${x.getByOffset("zero_point_offset / 4")};
                let zero_point_vec = ${n?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${x.getByIndices("scale_indices")};`:`let zero_point_value = ${u?n?"i32":"u32":w.type.value}(0);`};
      // Compute and write output
      ${v.setByOffset("global_idx",`${v.type.value}(x_value - zero_point_value) * scale_value`)};
      }`,getRunData:()=>({outputs:[{dims:a,dataType:o}],dispatchGroup:{x:Math.ceil(l/y/64),y:1,z:1},programUniforms:E})}},aN=(t,r)=>{aD(t.inputs,r),t.compute(aU(t.inputs,r))},aF=t=>tS({axis:t.axis,blockSize:t.blockSize})}),lz=L(()=>{ea(),oD(),oK(),aq=(t,r,s)=>{if(t===r||t<r&&s<0||t>r&&s>0)throw Error("Range these inputs' contents are invalid.")},aV=(t,r,s,i)=>{let n=Math.abs(Math.ceil((r-t)/s)),a=[n],o=[{type:12,data:n},{type:i,data:t},{type:i,data:s},...tC(a)];return{name:"Range",shaderCache:{hint:`${i}`},getShaderSource:t=>{let r=tU("output",i,a.length),s=r.type.value;return`
        ${t.registerUniforms([{name:"outputSize",type:"u32"},{name:"start",type:s},{name:"delta",type:s}]).declareVariables(r)}
        ${t.mainStart()}
        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${s}(global_idx) * uniforms.delta;
      }`},getRunData:()=>({outputs:[{dims:a,dataType:i}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:o})}},aj=t=>{let r=0,s=0,i=0;6===t.inputs[0].dataType?(r=t.inputs[0].getInt32Array()[0],s=t.inputs[1].getInt32Array()[0],i=t.inputs[2].getInt32Array()[0]):1===t.inputs[0].dataType&&(r=t.inputs[0].getFloat32Array()[0],s=t.inputs[1].getFloat32Array()[0],i=t.inputs[2].getFloat32Array()[0]),u.webgpu.validateInputContent&&aq(r,s,i),t.compute(aV(r,s,i,t.inputs[0].dataType),{inputs:[]})}}),lA=L(()=>{oD(),oF(),oH(),oK(),aG=(t,r,s,i)=>{if("none"!==t&&"i32"!==i&&"u32"!==i&&"f32"!==i)throw Error(`Input ${i} is not supported with reduction ${t}.`);let n=`{
                var oldValue = 0;
                loop {
                  let newValueF32 =`,a=`;
                  let newValue = bitcast<i32>(newValueF32);
                  let res = atomicCompareExchangeWeak(&${r}, oldValue, newValue);
                  if res.exchanged {
                    break;
                  }
                  oldValue = res.old_value;
                }
              }`;switch(t){case"none":return`${r}=${s};`;case"add":return"i32"===i||"u32"===i?`atomicAdd(&${r}, bitcast<${i}>(${s}));`:`
              ${n}bitcast<${i}>(oldValue) + (${s})${a}`;case"max":return"i32"===i||"u32"===i?`atomicMax(&${r}, bitcast<${i}>(${s}));`:`
                ${n}max(bitcast<f32>(oldValue), (${s}))${a}`;case"min":return"i32"===i||"u32"===i?`atomicMin(&${r}, bitcast<${i}>(${s}));`:`${n}min(bitcast<${i}>(oldValue), (${s}))${a}`;case"mul":return`${n}(bitcast<${i}>(oldValue) * (${s}))${a}`;default:throw Error(`Reduction ${t} is not supported.`)}},aW=(t,r)=>`${1===t?`
    let element_count_dim = uniforms.output_strides;
    let dim_value = uniforms.output_shape;`:`
    let element_count_dim = uniforms.output_strides[${r?"i - indices_start":"i"}];
    let dim_value = uniforms.output_shape[${r?"i - indices_start":"i"} + uniforms.last_index_dimension];`}
    
    if (index >= 0) {
      if (index >= i32(dim_value)) {
        index = i32(dim_value - 1);
      }
    } else {
      if (index < -i32(dim_value)) {
        index = 0;
      } else {
        index += i32(dim_value);
      }
    }
    data_offset += u32((u32(index) * element_count_dim));`,aH=(t,r,s)=>`for (var i = 0u; i < uniforms.num_updates_elements; i++) {
        let value = updates[uniforms.num_updates_elements * ${s?"global_idx":"idx"} + i];
        ${aG(t.reduction,"output[data_offset + i]","value",r)}
      }`,aK=(t,r)=>{let s=t[0].dims,i=t[1].dims,n=Math.ceil(e5.size(i)/1),a=i[i.length-1],o=e5.sizeFromDimension(s,a),l=e5.sizeFromDimension(i,0)/a,u=[{type:12,data:n},{type:12,data:a},{type:12,data:o},...tC(t[1].dims,t[2].dims,s)];return{name:"ScatterND",shaderCache:{hint:`${r.cacheKey}_${r.reduction}`,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:s,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:u}),getShaderSource:i=>{let n=tD("indices",t[1].dataType,t[1].dims.length),a=tD("updates",t[2].dataType,t[2].dims.length,1),o="none"!==r.reduction&&""!==r.reduction?tN("output",t[0].dataType,s.length):tU("output",t[0].dataType,s.length,1);return`
      ${i.registerUniform("output_size","u32").registerUniform("last_index_dimension","u32").registerUniform("num_updates_elements","u32").declareVariables(n,a,o)}
      ${i.mainStart()}
        ${i.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
  var hasDuplicates = false;
  if (${"none"===r.reduction}) {
    for (var i = 0; i < ${l}; i = i + 1) {
      for (var j = i + 1; j < ${l}; j = j + 1) {
        var index_i = i32(indices[i].x);
        var index_j = i32(indices[j].x);
        if (index_i == index_j) {
          hasDuplicates = true;
          break;
        }
      }
      if (hasDuplicates) {
        break;
      }
    }
  }

  if (${"none"===r.reduction} && hasDuplicates) {
    if (global_idx != 0u) {
      return;
    }
    // Process each index-update pair individually when duplicates exist
    for (var idx = 0u; idx < ${l}u; idx++) {
      var data_offset = 0u;
      for (var i = 0u; i < uniforms.last_index_dimension; i++) {
        var index = i32(indices[idx * uniforms.last_index_dimension + i].x);
        ${aW(s.length,!1)}
      }
      ${aH(r,o.type.value,!1)}
    }
    return;
  }

  var data_offset = 0u;
  var indices_start = uniforms.last_index_dimension * global_idx;
  var indices_end = indices_start + uniforms.last_index_dimension;
  for (var i = indices_start; i < indices_end; i++) {
    var index = i32(indices[i].x);
    ${aW(s.length,!0)}
  }
  ${aH(r,o.type.value,!0)}
  }`}}},aX=t=>tS({reduction:t.reduction}),aY=(t,r)=>{t.compute(aK(t.inputs,r),{inputs:[t.inputs[1],t.inputs[2]],outputs:[]})}}),lC=L(()=>{oD(),oF(),oH(),oK(),aQ=(t,r)=>{if(t.every(t=>t>0||(()=>{throw Error("Resize requires scales input values to be positive")})),t.length>0){if("linear"===r.mode){if(2!==t.length&&3!==t.length&&(4!==t.length||1!==t[0]||1!==t[1])&&(4!==t.length||1!==t[0]||1!==t[3])&&(5!==t.length||1!==t[0]||1!==t[1]))throw Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if("cubic"===r.mode&&2!==t.length&&(4!==t.length||1!==t[0]||1!==t[1])&&(4!==t.length||1!==t[0]||1!==t[3]))throw Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},aZ=(t,r,s)=>{r.every(t=>t>=0&&t<s||(()=>{throw Error("Resize requires axes input values to be positive and less than rank")}));let i=Array(s).fill(1);return r.forEach((r,s)=>i[r]=t[s]),i},aJ=(t,r,s,i,n,a)=>{let[o,l,u]=s>10?[1,2,3]:[-1,t.length>1?1:-1,-1],d=t[0].dims.length;if(o>0&&t.length>o&&t[o].dims.length>0)t[o].getFloat32Array().forEach(t=>a.push(t));else if("tf_crop_and_resize"===r.coordinateTransformMode)throw Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(l>0&&t.length>l&&1===t[l].dims.length&&t[l].dims[0]>0){if(t[l].getFloat32Array().forEach(t=>i.push(t)),0!==i.length&&i.length!==d&&s>=18&&i.length!==r.axes.length)throw Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");aQ(i,r),r.axes.length>0&&aZ(i,r.axes,d).forEach((t,r)=>i[r]=t)}if(u>0&&t.length>u&&1===t[u].dims.length&&t[u].dims[0]>0&&(t[u].getBigInt64Array().forEach(t=>n.push(Number(t))),0!==n.length&&n.length!==d&&s>=18&&n.length!==r.axes.length))throw Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(r.axes.length>0){if(0!==i.length&&i.length!==r.axes.length)throw Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(0!==n.length&&n.length!==r.axes.length)throw Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if("u">typeof i&&"u">typeof n&&i.length>0&&n.length>d)throw Error("Resize requires only of scales or sizes to be specified")},a0=(t,r,s,i)=>`
  // The whole part and the fractional part are calculated separately due to inaccuracy of floating
  // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
  // offset-by-one error later in floor().
  let big = (${t}) * (${r});
  let whole = ${i}(big / (${s}));
  let fract = ${i}(big % (${s})) / ${i}(${s});
  return whole + fract;
`,a1=(t,r)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${r} { `+(()=>{switch(t){case"asymmetric":return`
          if (xScale < 1.0 || floor(xScale) != xScale) {
            return ${r}(xResized) / ${r}(xScale);
          } else {
            ${a0("xResized","lengthOriginal","lengthResized",r)}
          }
        `;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${r}(xResized) + 0.5) / ${r}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${r}(xResized) + 0.5) / ${r}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    ${a0("xResized","lengthOriginal - 1","lengthResized - 1",r)}
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${r}(roiStart) * ${r}(lengthOriginal - 1) +
                        (${r}(xResized) * ${r}(roiEnd - roiStart) * ${r}(lengthOriginal - 1)) /
                        ${r}(lengthResized - 1);
                  } else {
                    return 0.5 * ${r}(roiStart + roiEnd) * ${r}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${r}xScale * ${r}(lengthResized);
                  const adjustment = ${r}(lengthResized) / outputWidth;
                  const center = ${r}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;case"half_pixel":return`return ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;default:throw Error(`Coordinate transform mode ${t} is not supported`)}})()+"}",a2=(t,r,s)=>`fn getNearestPixelFromOriginal(xOriginal: ${s}, isDownSample: bool) -> ${s} {`+(()=>{switch(t){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";default:if(r<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw Error(`Nearest mode ${t} is not supported`)}})()+"}",a3=(t,r,s)=>{let i=Array(s).fill(0).concat(Array(s).fill(1)),n=0===t.length?i:t.slice();return r.length>0?(r.forEach((t,a)=>{i[t]=n[a],i[a+s]=n[r.length+a]}),i):n},a4=(t,r,s,i)=>{let n=[];if(s.length>0)if(i.length>0){if(t.forEach(t=>n.push(t)),Math.max(...i)>t.length)throw Error("axes is out of bound");i.forEach((t,r)=>n[t]=s[r])}else s.forEach(t=>n.push(t));else{if(0===r.length)throw Error("Resize requires either scales or sizes.");n=t.map((t,s)=>Math.round(t*r[s]))}return n},a6=(t,r,s)=>{let i=(()=>{switch(s.keepAspectRatioPolicy){case"not_larger":return s.axes.length>0?Math.min(...s.axes.map(t=>r[t]),Number.MAX_VALUE):Math.min(...r,Number.MAX_VALUE);case"not_smaller":return s.axes.length>0?Math.max(...s.axes.map(t=>r[t]),Number.MIN_VALUE):Math.max(...r,Number.MIN_VALUE);default:throw Error(`Keep aspect ratio policy ${s.keepAspectRatioPolicy} is not supported`)}})();r.fill(1,0,r.length);let n=t.slice();return s.axes.length>0?(s.axes.forEach(t=>r[t]=i),s.axes.forEach(s=>n[s]=Math.round(t[s]*r[s]))):(r.fill(i,0,r.length),n.forEach((t,s)=>n[s]=Math.round(t*r[s]))),n},a8=(t,r,s,i,n)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> array<${t.type.value}, ${s.length}> {
      var original_indices: array<${t.type.value}, ${s.length}>;
      for (var i:u32 = 0; i < ${s.length}; i++) {
        var output_index = ${t.indicesGet("output_indices","i")};
        var scale = ${tP("uniforms.scales","i",i)};
        var roi_low = ${tP("uniforms.roi","i",n)};
        var roi_hi = ${tP("uniforms.roi",`i + ${r.length}`,n)};
        if (scale == 1.0) {
          original_indices[i] = ${t.type.value}(output_index);
        } else {
          var input_shape_i = ${tP("uniforms.input_shape","i",r.length)};
          var output_shape_i = ${tP("uniforms.output_shape","i",s.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,a5=(t,r,s,i,n,a,o)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${r.type.indices}) -> ${t.type.indices} {
      var input_indices: ${t.type.indices};
      for (var i:u32 = 0; i < ${i.length}; i++) {
        var output_index = ${r.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${tP("uniforms.scales","i",n)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${tP("uniforms.roi","i",a)};
          var roi_hi = ${tP("uniforms.roi",`i + ${s.length}`,a)};
          var input_shape_i = ${tP("uniforms.input_shape","i",s.length)};
          var output_shape_i = ${tP("uniforms.output_shape","i",i.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${o} || (original_idx >= 0 && original_idx < ${r.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${r.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${t.indicesSet("input_indices","i","input_index")}
      }
      return input_indices;
    }`,a9=(t,r)=>`
    fn checkInputIndices(input_indices: ${t.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var input_index = ${t.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${tP("uniforms.input_shape","i",r.length)}) {
          return false;
        }
      }
      return true;
    }`,a7=(t,r,s,i)=>t.rank>i?`
    ${t.indicesSet("input_indices",r,"channel")};
    ${t.indicesSet("input_indices",s,"batch")};
`:"",oe=(t,r,s,i,n)=>{let[a,o,l,u]=2===s.length?[-1,0,1,-1]:[0,2,3,1],d=t.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${d} {
      var input_indices: ${t.type.indices};
      ${t.indicesSet("input_indices",o,`max(0, min(row, ${s[o]} - 1))`)};
      ${t.indicesSet("input_indices",l,`max(0, min(col, ${s[l]} - 1))`)};
      ${a7(t,u,a,2)}
      return ${t.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${r.type.indices}) -> ${d} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${d} = originalIndices[${o}];
      var col:${d} = originalIndices[${l}];
      ${i?`if (row < 0 || row > (${s[o]} - 1) || col < 0 || col > (${s[l]} - 1)) {
        return ${n};
      }`:""};
      row = max(0, min(row, ${s[o]} - 1));
      col = max(0, min(col, ${s[l]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${s.length>2?`u32(originalIndices[${u}])`:"0"};
      var batch: u32 =  ${s.length>2?`u32(originalIndices[${a}])`:"0"};
      var x11: ${d} = getInputValue(batch, channel, row1, col1);
      var x12: ${d} = getInputValue(batch, channel, row1, col2);
      var x21: ${d} = getInputValue(batch, channel, row2, col1);
      var x22: ${d} = getInputValue(batch, channel, row2, col2);
      var dx1: ${d} = abs(row - ${d}(row1));
      var dx2: ${d} = abs(${d}(row2) - row);
      var dy1: ${d} = abs(col - ${d}(col1));
      var dy2: ${d} = abs(${d}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},ot=(t,r,s,i,n,a,o,l,u,d)=>{let[c,p]=2===s.length?[0,1]:[2,3],h=t.type.value,f=o=>{let p=o===c?"row":"col";return`
      fn ${p}CubicInterpolation(input_indices: ${t.type.indices}, output_indices: ${r.type.indices}) -> ${h} {
        var output_index = ${r.indicesGet("output_indices",o)};
        var originalIdx: ${h} = getOriginalCoordinateFromResizedCoordinate(output_index, ${n[o]},
        ${i[o]}, ${s[o]}, ${a[o]}, ${a[o]} + ${s.length});
        var fractOriginalIdx: ${h} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${l} && (originalIdx < 0 || originalIdx > (${s[o]} - 1))) {
          return ${u};
        }
        var data: array<${h}, 4> = array<${h}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${p}: ${h} = originalIdx + ${h}(i);
          if (${p} < 0 || ${p} >= ${s[o]}) {
            ${d?`coefs[i + 1] = 0.0;
                        continue;`:l?`return ${u};`:`${p} = max(0, min(${p}, ${s[o]} - 1));`};
          }
        var input_indices_copy: ${t.type.indices} = input_indices;
          ${t.indicesSet("input_indices_copy",o,`u32(${p})`)};
          data[i + 1] = ${o===c?t.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${f(c)};
    ${f(p)};
  fn getCubicInterpolationCoefs(s: ${h}) -> array<${h}, 4> {
    var absS = abs(s);
    var coeffs: array<${h}, 4> = array<${h}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${h} = 1.0 - absS;
    var twoMinusAbsS: ${h} = 2.0 - absS;
    var onePlusAbsS: ${h} = 1.0 + absS;
    coeffs[0] = ((${o} * onePlusAbsS - 5 * ${o}) * onePlusAbsS + 8 * ${o}) * onePlusAbsS - 4 * ${o};
    coeffs[1] = ((${o} + 2) * absS - (${o} + 3)) * absS * absS + 1;
    coeffs[2] = ((${o} + 2) * oneMinusAbsS - (${o} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${o} * twoMinusAbsS - 5 * ${o}) * twoMinusAbsS + 8 * ${o}) * twoMinusAbsS - 4 * ${o};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${h}, 4>, coefs: array<${h}, 4>) -> ${h} {
    var coefsSum: ${h} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${r.type.indices}) -> ${h} {
    var input_indices: ${t.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},or=(t,r,s,i,n)=>{let[a,o,l,u,d]=3===s.length?[-1,0,1,2,-1]:[0,2,3,4,1],c=t.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${c} {
      var input_indices: ${t.type.indices};
      ${t.indicesSet("input_indices",o,`max(0, min(depth, ${s[o]} - 1))`)};
      ${t.indicesSet("input_indices",l,`max(0, min(height, ${s[l]} - 1))`)};
      ${t.indicesSet("input_indices",u,`max(0, min(width, ${s[u]} - 1))`)};
      ${a7(t,d,a,3)}
      return ${t.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${r.type.indices}) -> ${c} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${c} = originalIndices[${o}];
      var height:${c} = originalIndices[${l}];
      var width:${c} = originalIndices[${u}];
      ${i?`if (depth < 0 || depth > (${s[o]} - 1) || height < 0 || height > (${s[l]} - 1) || width < 0 || (width > ${s[u]} - 1)) {
      return ${n};
        }`:""};

    depth = max(0, min(depth, ${s[o]} - 1));
      height = max(0, min(height, ${s[l]} - 1));
      width = max(0, min(width, ${s[u]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${s.length>3?`u32(originalIndices[${d}])`:"0"};
      var batch: u32 =  ${s.length>3?`u32(originalIndices[${a}])`:"0"};

      var x111: ${c} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${c} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${c} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${c} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${c} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${c} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${c} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${c} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${c} = abs(depth - ${c}(depth1));
      var dx2: ${c} = abs(${c}(depth2) - depth);
      var dy1: ${c} = abs(height - ${c}(height1));
      var dy2: ${c} = abs(${c}(height2) - height);
      var dz1: ${c} = abs(width - ${c}(width1));
      var dz2: ${c} = abs(${c}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},os=(t,r,s,i,n,a)=>{let o=t.dims,l=a3(a,r.axes,o.length),u=a4(o,i,n,r.axes),d=i.slice();0===i.length&&(d=o.map((t,r)=>0===t?1:u[r]/t),"stretch"!==r.keepAspectRatioPolicy&&(u=a6(o,d,r)));let c=tU("output",t.dataType,u.length),p=tD("input",t.dataType,o.length),h=e5.size(u),f=o.length===u.length&&o.every((t,r)=>t===u[r]),m="tf_crop_and_resize"===r.coordinateTransformMode,_=r.extrapolationValue,g=p.type.value;return{name:"Resize",shaderCache:{hint:`${r.cacheKey}|${s}|${d.length>0?"cubic"===r.mode?d:d.length:""}|${n.length>0?n:""}|${l.length>0?l:""}|${f}|${"nearest"===r.mode?o.length:o}`,inputDependencies:["rank"]},getShaderSource:t=>`
      ${f?"":`
      ${a1(r.coordinateTransformMode,g)};
      ${(()=>{switch(r.mode){case"nearest":return`
              ${a9(p,o)};
              ${a2(r.nearestMode,s,g)};
              ${a5(p,c,o,u,d.length,l.length,m)};
              `;case"linear":return`
              ${a8(c,o,u,d.length,l.length)};
              ${(()=>{if(2===o.length||4===o.length)return`${oe(p,c,o,m,_)}`;if(3===o.length||5===o.length)return`${or(p,c,o,m,_)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(2===o.length||4===o.length)return`${ot(p,c,o,u,d,l,r.cubicCoeffA,m,r.extrapolationValue,r.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${t.registerUniform("output_size","u32").registerUniform("scales","f32",d.length).registerUniform("roi","f32",l.length).declareVariables(p,c)}
      ${t.mainStart()}
        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${f?"output[global_idx] = input[global_idx];":`
        let output_indices = ${c.offsetToIndices("global_idx")};
        var input_indices: ${p.type.indices};
        ${(()=>{switch(r.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${p.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${r.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${2===o.length||4===o.length?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${r.mode}`)}})()};
`}
      }`,getRunData:()=>({outputs:[{dims:u,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:[{type:12,data:h},{type:1,data:d},{type:1,data:l},...tC(o,u)]})}},oi=t=>{let r=t.customDataBuffer;return new Uint32Array(r,r.byteOffset,1)[0]},on=(t,r)=>{let s=[],i=[],n=[],a=oi(t);if(0!==r.antialias)throw Error("Only default value (0) for Antialias attribute is supported");aJ(t.inputs,r,a,s,i,n),t.compute(os(t.inputs[0],r,a,s,i,n),{inputs:[0]})},oa=t=>{let r=t.antialias,s=t.axes,i=t.coordinateTransformMode,n=t.cubicCoeffA,a=0!==t.excludeOutside,o=t.extrapolationValue,l=t.keepAspectRatioPolicy,u=t.mode,d=""===t.nearestMode?"simple":t.nearestMode;return tS({antialias:r,axes:s,coordinateTransformMode:i,cubicCoeffA:n,excludeOutside:a,extrapolationValue:o,keepAspectRatioPolicy:l,mode:u,nearestMode:d})}}),lM=L(()=>{oD(),oF(),oK(),oo=t=>{if(!t||t.length<3)throw Error("layerNorm requires at least 3 inputs.");let r=t[0],s=t[1],i=t[2];if(r.dataType!==s.dataType||r.dataType!==i.dataType)throw Error("All inputs must have the same data type");if(3!==r.dims.length&&2!==r.dims.length)throw Error("Input must be 2D or 3D");if(3!==s.dims.length&&2!==s.dims.length)throw Error("Skip must be 2D or 3D");let n=r.dims[r.dims.length-1],a=r.dims[r.dims.length-2];if(s.dims[s.dims.length-1]!==n)throw Error("Skip must have the same hidden size as input");if(s.dims[s.dims.length-2]!==a)throw Error("Skip must have the same sequence length as input");if(1!==i.dims.length)throw Error("Gamma must be 1D");if(i.dims[i.dims.length-1]!==n)throw Error("Gamma must have the same hidden size as input");if(t.length>3){let r=t[3];if(1!==r.dims.length)throw Error("Beta must be 1D");if(r.dims[r.dims.length-1]!==n)throw Error("Beta must have the same hidden size as input")}if(t.length>4){let r=t[4];if(1!==r.dims.length)throw Error("Bias must be 1D");if(r.dims[r.dims.length-1]!==n)throw Error("Bias must have the same hidden size as input")}},ol=(t,r,s,i)=>{let n=r.simplified,a=t[0].dims,o=e5.size(a),l=a.slice(-1)[0],u=i?a.slice(0,-1).concat(1):[],d=!n&&t.length>3,c=t.length>4,p=i&&s>1,h=i&&s>2,f=s>3,m=tM(l),_=[{type:12,data:o},{type:12,data:m},{type:12,data:l},{type:1,data:r.epsilon}],g=[{dims:a,dataType:t[0].dataType}];return s>1&&g.push({dims:u,dataType:1}),s>2&&g.push({dims:u,dataType:1}),s>3&&g.push({dims:a,dataType:t[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${m};${p};${h};${f}`,inputDependencies:t.map((t,r)=>"type")},getShaderSource:r=>{let s=[tD("x",t[0].dataType,t[0].dims,m),tD("skip",t[1].dataType,t[1].dims,m),tD("gamma",t[2].dataType,t[2].dims,m)];d&&s.push(tD("beta",t[3].dataType,t[3].dims,m)),c&&s.push(tD("bias",t[4].dataType,t[4].dims,m)),s.push(tU("output",t[0].dataType,a,m)),p&&s.push(tU("mean_output",1,u)),h&&s.push(tU("inv_std_output",1,u)),f&&s.push(tU("input_skip_bias_sum",t[0].dataType,a,m));let i=tz(t[0].dataType),o=tz(1,m);return`

      ${r.registerUniforms([{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}]).declareVariables(...s)}
      var<workgroup> sum_shared : array<${o}, 64>;
      var<workgroup> sum_squared_shared : array<${o}, 64>;

      ${r.mainStart([64,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / 64;

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / 64;
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == 63) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${c?"bias[offset1d + i]":i+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${f?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${tB(i,m,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = 64;
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${tR("sum",m)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${tR("square_sum",m)} / f32(uniforms.hidden_size) ${n?"":"- mean * mean"} + uniforms.epsilon);
        ${p?"mean_output[global_idx] = mean;":""}
        ${h?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${n?"":`- ${i}(mean)`}) *
            ${i}(inv_std_dev) * gamma[offset1d + i]
            ${d?"+ beta[offset1d + i]":""};
        }
      }`},getRunData:()=>({outputs:g,dispatchGroup:{x:Math.ceil(o/l)},programUniforms:_})}},ou=(t,r)=>{oo(t.inputs);let s=[0];t.outputCount>1&&s.push(-3),t.outputCount>2&&s.push(-3),t.outputCount>3&&s.push(3),t.compute(ol(t.inputs,r,t.outputCount,!1),{outputs:s})}}),lO=L(()=>{oD(),oF(),oH(),oK(),od=(t,r)=>{if(!t||t.length<1)throw Error("too few inputs");if(0!==r.axes.length){if(r.axes.length!==r.starts.length||r.axes.length!==r.ends.length)throw Error("axes, starts and ends must have the same length")}else if(r.starts.length!==r.ends.length)throw Error("starts and ends must have the same length");t.slice(1).forEach((r,s)=>{if(6!==t[s+1].dataType&&7!==t[s+1].dataType)throw Error(`Input ${s} must be an array of int32 or int64`)})},oc=(t,r)=>{let s=[];if(t.length>r)if(7===t[r].dataType)t[r].getBigInt64Array().forEach(t=>s.push(Number(t)));else if(6===t[r].dataType)t[r].getInt32Array().forEach(t=>s.push(Number(t)));else throw Error(`Input ${r} must be an array of int32 or int64`);return s},op=(t,r)=>{if(!(t.length>1))return r;{let r=oc(t,1),s=oc(t,2),i=oc(t,3);return 0===i.length&&(i=[...Array(t[0].dims.length).keys()]),tS({starts:r,ends:s,axes:i})}},oh=(t,r,s,i,n)=>{let a=t;return t<0&&(a+=s[i[r]]),n[r]<0?Math.max(0,Math.min(a,s[i[r]]-1)):Math.max(0,Math.min(a,s[i[r]]))},of=(t,r,s)=>`fn calculateInputIndices(output_indices: ${r.type.indices}) -> ${t.type.indices} {
          var input_indices: ${t.type.indices};
          var carry = 0u;
          for (var i = ${s.length}; i >= 0; i--) {
            let input_shape_i = ${tP("uniforms.input_shape","i",s.length)};
            let steps_i = ${tP("uniforms.steps","i",s.length)};
            let signs_i = ${tP("uniforms.signs","i",s.length)};
            let starts_i = ${tP("uniforms.starts","i",s.length)};
            var output_index = ${r.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${t.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,om=(t,r)=>{let s=t[0].dims,i=e5.size(s),n=r.axes.length>0?e5.normalizeAxes(r.axes,s.length):[...Array(s.length).keys()],a=oc(t,4);a.forEach(t=>0!==t||(()=>{throw Error("step cannot be 0")})),0===a.length&&(a=Array(n.length).fill(1));let o=r.starts.map((t,r)=>oh(t,r,s,n,a)),l=r.ends.map((t,r)=>oh(t,r,s,n,a));if(n.length!==o.length||n.length!==l.length)throw Error("start, ends and axes should have the same number of elements");if(n.length!==s.length)for(let t=0;t<s.length;++t)n.includes(t)||(o.splice(t,0,0),l.splice(t,0,s[t]),a.splice(t,0,1));let u=a.map(t=>Math.sign(t));a.forEach((t,r,s)=>{if(t<0){let i=(l[r]-o[r])/t,n=o[r],u=n+i*a[r];o[r]=u,l[r]=n,s[r]=-t}});let d=s.slice(0);n.forEach((t,r)=>{d[t]=Math.ceil((l[t]-o[t])/a[t])});let c={dims:d,dataType:t[0].dataType},p=tU("output",t[0].dataType,d.length),h=tD("input",t[0].dataType,t[0].dims.length),f=e5.size(d),m=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:o.length},{name:"signs",type:"i32",length:u.length},{name:"steps",type:"u32",length:a.length}],_=[{type:12,data:f},{type:12,data:o},{type:6,data:u},{type:12,data:a},...tC(t[0].dims,d)];return{name:"Slice",shaderCache:{hint:`${u.length}_${o.length}_${a.length}`,inputDependencies:["rank"]},getShaderSource:t=>`
      ${t.registerUniforms(m).declareVariables(h,p)}
        ${of(h,p,s)}
        ${t.mainStart()}
          ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${p.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${p.setByOffset("global_idx",h.getByIndices("input_indices"))}
      }`,getRunData:()=>({outputs:[c],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:_})}},o_=(t,r)=>{od(t.inputs,r);let s=op(t.inputs,r);t.compute(om(t.inputs,s),{inputs:[0]})},og=t=>{let r=t.starts,s=t.ends,i=t.axes;return tS({starts:r,ends:s,axes:i})}}),lB=L(()=>{oD(),oF(),oH(),oX(),oK(),oy=t=>{if(!t||1!==t.length)throw Error("Softmax op requires 1 input.")},ow=(t,r)=>{let s=t.inputs[0],i=s.dims,n=e5.size(i),a=i.length,o=e5.normalizeAxis(r.axis,a),l=o<i.length-1,u,d=[];l?((d=Array.from({length:a},(t,r)=>r))[o]=a-1,d[a-1]=o,u=t.compute(tY(s,d),{inputs:[s],outputs:[-1]})[0]):u=s;let c=u.dims,p=c[a-1],h=n/p,f=tM(p),m=p/f,_=64;1===h&&(_=256);let g=(t,r)=>4===r?`max(max(${t}.x, ${t}.y), max(${t}.z, ${t}.w))`:2===r?`max(${t}.x, ${t}.y)`:3===r?`max(max(${t}.x, ${t}.y), ${t}.z)`:t,y=tD("x",u.dataType,u.dims,f),w=tU("result",u.dataType,u.dims,f),b=y.type.value,x="f32"===tz(u.dataType)?`var threadMax = ${b}(-3.402823e+38f);`:`var threadMax = ${b}(-65504.0h);`,v=t.compute({name:"Softmax",shaderCache:{hint:`${f};${_}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:c,dataType:u.dataType}],dispatchGroup:{x:h},programUniforms:[{type:6,data:m}]}),getShaderSource:t=>`
      var<workgroup> rowMaxShared : ${b};
      var<workgroup> rowSumShared : ${b};
      var<workgroup> threadShared : array<${b}, ${_}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${b} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${b}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${t.registerUniform("packedCols","i32").declareVariables(y,w)}
      ${t.mainStart(_)}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${_};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${x}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${b}(${g("threadShared[0]",f)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${b}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${b}(${tR("threadShared[0]",f)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`},{inputs:[u],outputs:[l?-1:0]})[0];l&&t.compute(tY(v,d),{inputs:[v]})},ob=(t,r)=>{oy(t.inputs),ow(t,r)},ox=t=>tS({axis:t.axis})}),lR=L(()=>{oD(),oF(),oK(),ov=t=>Array.from(t.getBigInt64Array(),Number),o$=t=>{if(!t||2!==t.length)throw Error("Tile requires 2 inputs.");if(1!==t[0].dataType&&10!==t[0].dataType&&6!==t[0].dataType&&12!==t[0].dataType)throw Error("Tile only support float, float16, int32, and uint32 data types");if(7!==t[1].dataType)throw Error("Tile `repeats` input should be of int64 data type");if(1!==t[1].dims.length)throw Error("Tile `repeats` input should be 1-D");if(ov(t[1]).length!==t[0].dims.length)throw Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},ok=(t,r)=>{let s=[];for(let i=0;i<t.length;++i)s.push(t[i]*r[i]);return s},oE=(t,r)=>{let s=t[0].dims,i=r??ov(t[1]),n=ok(s,i),a=e5.size(n),o=t[0].dataType,l=tD("input",o,s.length),u=tU("output",o,n.length);return{name:"Tile",shaderCache:{hint:`${i}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:n,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:[{type:12,data:a},...tC(t[0].dims,n)]}),getShaderSource:t=>`
      const inputShape = ${l.indices(...s)};
      ${t.registerUniform("output_size","u32").declareVariables(l,u)}
      ${t.mainStart()}
      ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${u.offsetToIndices("global_idx")};
      var input_indices: ${l.type.indices};
      for (var i = 0; i < ${s.length}; i++) {
        let input_dim_i = ${l.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${u.indicesGet("output_indices","i")}  % input_dim_i;

        ${l.indicesSet("input_indices","i","input_dim_value")}
      }
      ${u.setByOffset("global_idx",l.getByIndices("input_indices"))}
    }`}},oS=t=>{o$(t.inputs),t.compute(oE(t.inputs),{inputs:[0]})}}),lP=L(()=>{oD(),oF(),oK(),oT=(t,r,s,i,n)=>{let a=tU("output_data",n,s.length,4),o=tD("a_data",r[1].dataType,r[1].dims.length,4),l=tD("b_data",r[2].dataType,r[2].dims.length,4),u=tD("c_data",r[0].dataType,r[0].dims.length,4),d,c=(t,r,s)=>`select(${r}, ${t}, ${s})`;if(i){let t=(t,r,s="")=>{let i=`a_data[index_a${r}][component_a${r}]`,n=`b_data[index_b${r}][component_b${r}]`,d=`bool(c_data[index_c${r}] & (0xffu << (component_c${r} * 8)))`;return`
            let output_indices${r} = ${a.offsetToIndices(`global_idx * 4u + ${r}u`)};
            let offset_a${r} = ${o.broadcastedIndicesToOffset(`output_indices${r}`,a)};
            let offset_b${r} = ${l.broadcastedIndicesToOffset(`output_indices${r}`,a)};
            let offset_c${r} = ${u.broadcastedIndicesToOffset(`output_indices${r}`,a)};
            let index_a${r} = offset_a${r} / 4u;
            let index_b${r} = offset_b${r} / 4u;
            let index_c${r} = offset_c${r} / 4u;
            let component_a${r} = offset_a${r} % 4u;
            let component_b${r} = offset_b${r} % 4u;
            let component_c${r} = offset_c${r} % 4u;
            ${t}[${r}] = ${s}(${c(i,n,d)});
          `};d=9===n?`
            var data = vec4<u32>(0);
            ${t("data",0,"u32")}
            ${t("data",1,"u32")}
            ${t("data",2,"u32")}
            ${t("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`
            ${t("output_data[global_idx]",0)}
            ${t("output_data[global_idx]",1)}
            ${t("output_data[global_idx]",2)}
            ${t("output_data[global_idx]",3)}
          `}else d=a.setByOffset("global_idx",c(o.getByOffset("global_idx"),l.getByOffset("global_idx"),u.getByOffset("global_idx")));return`
        ${t.registerUniform("vec_size","u32").declareVariables(u,o,l,a)}
        ${t.mainStart()}
        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${d}
      }`},oI=t=>{let r=t[1].dims,s=t[2].dims,i=t[0].dims,n=t[1].dataType,a=!(e5.areEqual(r,s)&&e5.areEqual(s,i)),o=r,l=e5.size(r);if(a){let t=e8.calcShape(e8.calcShape(r,s,!1),i,!1);if(!t)throw Error("Can't perform where op on the given tensors");o=t,l=e5.size(o)}let u=Math.ceil(l/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:r=>oT(r,t,o,a,n),getRunData:()=>({outputs:[{dims:o,dataType:n}],dispatchGroup:{x:Math.ceil(l/64/4)},programUniforms:[{type:12,data:u},...tC(i,r,s,o)]})}},oz=t=>{t.compute(oI(t.inputs))}}),lL=L(()=>{oZ(),oJ(),o0(),o1(),o3(),o4(),o6(),li(),la(),lo(),ll(),lu(),ld(),lc(),lp(),lh(),lf(),lm(),l_(),lg(),lx(),lv(),l$(),lk(),lE(),ly(),lS(),lT(),lI(),lz(),lA(),oQ(),lC(),lb(),lM(),lO(),lB(),lw(),lR(),oX(),o2(),lP(),oA=new Map([["Abs",[r3]],["Acos",[r4]],["Acosh",[r6]],["Add",[sq]],["ArgMax",[rD,rU]],["ArgMin",[rL,rU]],["Asin",[r8]],["Asinh",[r5]],["Atan",[r9]],["Atanh",[r7]],["Attention",[rH]],["AveragePool",[az,aI]],["BatchNormalization",[rQ]],["BiasAdd",[r0]],["BiasSplitGelu",[sD]],["Cast",[st,se]],["Ceil",[si]],["Clip",[ss]],["Concat",[s2,s3]],["Conv",[iO,iz]],["ConvTranspose",[iV,iU]],["Cos",[sn]],["Cosh",[sa]],["CumSum",[iG,iW]],["DepthToSpace",[iY,iQ]],["DequantizeLinear",[aN,aF]],["Div",[sV]],["Einsum",[i8,i5]],["Elu",[sl,so]],["Equal",[sj]],["Erf",[sd]],["Exp",[sc]],["Expand",[nr]],["FastGelu",[ni]],["Floor",[sp]],["FusedConv",[iO,iz]],["Gather",[nl,no]],["GatherElements",[nw,ny]],["GatherBlockQuantized",[nf,nm]],["GatherND",[nd,nc]],["Gelu",[sh]],["Gemm",[n$,nv]],["GlobalAveragePool",[aM,aC]],["GlobalMaxPool",[aL,aP]],["Greater",[sK]],["GreaterOrEqual",[sY]],["GridSample",[nP,nL]],["GroupQueryAttention",[n6]],["HardSigmoid",[sx,sb]],["InstanceNormalization",[n7]],["LayerNormalization",[ar]],["LeakyRelu",[sf,so]],["Less",[sX]],["LessOrEqual",[sQ]],["Log",[sM]],["MatMul",[ai]],["MatMulNBits",[al,au]],["MaxPool",[aB,aR]],["Mul",[sG]],["MultiHeadAttention",[nj,nN]],["Neg",[s_]],["Not",[sm]],["Pad",[ay]],["Pow",[sW]],["QuickGelu",[sR,so]],["Range",[aj]],["Reciprocal",[sg]],["ReduceMin",[rC]],["ReduceMean",[rS]],["ReduceMax",[rA]],["ReduceSum",[rO]],["ReduceProd",[rM]],["ReduceL1",[rT]],["ReduceL2",[rI]],["ReduceLogSum",[rR]],["ReduceLogSumExp",[rz]],["ReduceSumSquare",[rB]],["Relu",[sy]],["Resize",[on,oa]],["RotaryEmbedding",[n0]],["ScatterND",[aY,aX]],["Sigmoid",[sw]],["Sin",[sv]],["Sinh",[s$]],["Slice",[o_,og]],["SkipLayerNormalization",[ou]],["Split",[nY,nQ]],["Sqrt",[sk]],["Softmax",[ob,ox]],["Sub",[sH]],["Tan",[sE]],["Tanh",[sT]],["ThresholdedRelu",[sC,so]],["Tile",[oS]],["Transpose",[tQ,tZ]],["Where",[oz]]])}),lD=L(()=>{ea(),oN(),oK(),oC=class{constructor(t){this.backend=t,this.repo=new Map,this.attributesBound=!1}getArtifact(t){return this.repo.get(t)}setArtifact(t,r){this.repo.set(t,r)}run(t,r,s,i,n){I(t.programInfo.name);let a=this.backend.device,o=this.backend.getComputePassEncoder();this.backend.writeTimestamp(2*this.backend.pendingDispatchNumber);let l=[];for(let t of r)l.push({binding:l.length,resource:{buffer:t.buffer}});for(let t of s)l.push({binding:l.length,resource:{buffer:t.buffer}});n&&l.push({binding:l.length,resource:n});let u=a.createBindGroup({layout:t.computePipeline.getBindGroupLayout(0),entries:l,label:t.programInfo.name});if("capturing"===this.backend.sessionStatus){let r={kernelId:this.backend.currentKernelId,computePipeline:t.computePipeline,bindGroup:u,dispatchGroup:i};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(r)}o.setPipeline(t.computePipeline),o.setBindGroup(0,u),o.dispatchWorkgroups(...i),this.backend.writeTimestamp(2*this.backend.pendingDispatchNumber+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||"at-passes"===this.backend.queryType)&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),z(t.programInfo.name)}dispose(){}build(t,r){I(t.name);let s=this.backend.device,i=[];[{feature:"shader-f16",extension:"f16"},{feature:"subgroups",extension:"subgroups"}].forEach(t=>{s.features.has(t.feature)&&i.push(`enable ${t.extension};`)});let n=tV(r,this.backend.device.limits),a=t.getShaderSource(n),o=`${i.join(`
`)}
${n.additionalImplementations}
${a}`,l=s.createShaderModule({code:o,label:t.name});e4("verbose",()=>`[WebGPU] ${t.name} shader code: ${o}`);let u=s.createComputePipeline({compute:{module:l,entryPoint:"main"},layout:"auto",label:t.name});return z(t.name),{programInfo:t,computePipeline:u,uniformVariablesInfo:n.variablesInfo}}normalizeDispatchGroupSize(t){let r="number"==typeof t?t:t.x,s="number"==typeof t?1:t.y||1,i="number"==typeof t?1:t.z||1,n=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=n&&s<=n&&i<=n)return[r,s,i];let a=r*s*i,o=Math.ceil(Math.sqrt(a));if(!(o>n))return[o,o,1];if((o=Math.ceil(Math.cbrt(a)))>n)throw Error("Total dispatch size exceeds WebGPU maximum.");return[o,o,o]}}}),lU={};D(lU,{WebGpuBackend:()=>lV});var lN,lF,lq,lV,lj=L(()=>{ea(),oD(),oN(),oq(),oW(),lL(),lD(),lN=(t,r)=>{if(r.length!==t.length)throw Error(`inputDependencies length ${r.length} is not equal to inputTensors length ${t.length}.`);let s=[];for(let i=0;i<t.length;++i){let n=t[i].dataType;switch(r[i]){case"none":s.push("");break;case"type":s.push(`${n}`);break;case"rank":{let r=t[i].dims.length;s.push(`${n};${r}`);break}case"dims":{let r=t[i].dims.join(",");s.push(`${n};${r}`);break}default:throw Error(`unsupported input dependency: ${r[i]}`)}}return s.join("|")},lF=(t,r,s)=>{let i=t.name;return t.shaderCache?.hint&&(i+="["+t.shaderCache.hint+"]"),i+=":"+s+`:${lN(r,t.shaderCache?.inputDependencies??Array(r.length).fill("dims"))}`},lq=class{constructor(t){t&&(this.architecture=t.architecture,this.vendor=t.vendor)}isArchitecture(t){return this.architecture===t}isVendor(t){return this.vendor===t}},lV=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(null===this.currentKernelId)throw Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let t=this.kernelCustomData.get(this.currentKernelId);return t||(t={},this.kernelCustomData.set(this.currentKernelId,t)),t}async initialize(t,r){this.env=t;let s=[],i={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:s},n=t=>r.features.has(t)&&s.push(t)&&!0;n("chromium-experimental-timestamp-query-inside-passes")||n("timestamp-query"),n("shader-f16"),n("subgroups"),this.device=await r.requestDevice(i),this.adapterInfo=new lq(r.info||await r.requestAdapterInfo()),this.gpuDataManager=tk(this),this.programManager=new oC(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,e2(t.logLevel,!!t.debug),this.device.onuncapturederror=t=>{t.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${t.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:r,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){"u">typeof this.querySet&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let t=this.getCommandEncoder(),r={};"at-passes"===this.queryType&&(r.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:2*this.pendingDispatchNumber,endOfPassWriteIndex:2*this.pendingDispatchNumber+1}),this.computePassEncoder=t.beginComputePass(r)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){let t;this.commandEncoder&&(I(),this.endComputePass(),"none"!==this.queryType&&(this.commandEncoder.resolveQuerySet(this.querySet,0,2*this.pendingDispatchNumber,this.queryResolveBuffer,0),t=this.device.createBuffer({size:16*this.pendingDispatchNumber,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(t,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,t,0,16*this.pendingDispatchNumber)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,"none"!==this.queryType&&t.mapAsync(GPUMapMode.READ).then(()=>{let r=new BigUint64Array(t.getMappedRange()),s=this.pendingQueries.get(t);for(let t=0;t<r.length/2;t++){let i=s[t],n=i.kernelId,a=this.kernels.get(n),o=a.kernelType,l=a.kernelName,u=i.programName,d=i.inputTensorViews,c=i.outputTensorViews,p=r[2*t],h=r[2*t+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=p);let f=Number(p-this.queryTimeBase),m=Number(h-this.queryTimeBase);if(!Number.isSafeInteger(f)||!Number.isSafeInteger(m))throw RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:d.map(t=>({dims:t.dims,dataType:ej(t.dataType)})),outputsMetadata:c.map(t=>({dims:t.dims,dataType:ej(t.dataType)})),kernelId:n,kernelType:o,kernelName:l,programName:u,startTime:f,endTime:m});else{let t="";d.forEach((r,s)=>{t+=`input[${s}]: [${r.dims}] | ${ej(r.dataType)}, `});let r="";c.forEach((t,s)=>{r+=`output[${s}]: [${t.dims}] | ${ej(t.dataType)}, `}),console.log(`[profiling] kernel "${n}|${o}|${l}|${u}" ${t}${r}execution time: ${m-f} ns`)}S("GPU",`${u}::${p}::${h}`)}t.unmap(),this.pendingQueries.delete(t)}),z())}run(t,r,s,i,n,a){let o;I(t.name);let l=[];for(let t=0;t<r.length;++t){let s=r[t].data;if(0===s)continue;let i=this.gpuDataManager.get(s);if(!i)throw Error(`no GPU data for input: ${s}`);l.push(i)}let{outputs:u,dispatchGroup:d,programUniforms:c}=t.getRunData(r),p=0===s.length?u.map((t,r)=>r):s;if(p.length!==u.length)throw Error(`Output size ${p.length} must be equal to ${u.length}.`);let h=[],f=[];for(let t=0;t<u.length;++t){if(!Number.isInteger(p[t])||p[t]<-3||p[t]>=a)throw Error(`Invalid output index: ${p[t]}`);if(-3===p[t])continue;let r=-1===p[t],s=-2===p[t],o=r||s?n(u[t].dataType,u[t].dims):i(p[t],u[t].dataType,u[t].dims);if(h.push(o),0===o.data)continue;let l=this.gpuDataManager.get(o.data);if(!l)throw Error(`no GPU data for output: ${o.data}`);if(r&&this.temporaryData.push(l),s){let t=this.kernelPersistentData.get(this.currentKernelId);t||(t=[],this.kernelPersistentData.set(this.currentKernelId,t)),t.push(l)}f.push(l)}if(l.length!==r.length||f.length!==h.length){if(0===f.length)return z(t.name),h;throw Error(`Program ${t.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}if(c){let t=0,r=[];c.forEach(s=>{let i="number"==typeof s.data?[s.data]:s.data;if(0===i.length)return;let n=10===s.type?2:4,a,o;10===s.type?(o=i.length>4?16:i.length>2?8:i.length*n,a=i.length>4?16:n*i.length):(o=i.length<=2?i.length*n:16,a=16),t=Math.ceil(t/o)*o,r.push(t);let l=10===s.type?8:4;t+=i.length>4?Math.ceil(i.length/l)*a:i.length*n});let s=new ArrayBuffer(t=16*Math.ceil(t/16));c.forEach((t,i)=>{let n=r[i],a="number"==typeof t.data?[t.data]:t.data;if(6===t.type)new Int32Array(s,n,a.length).set(a);else if(12===t.type)new Uint32Array(s,n,a.length).set(a);else if(10===t.type)new Uint16Array(s,n,a.length).set(a);else if(1===t.type)new Float32Array(s,n,a.length).set(a);else throw Error(`Unsupported uniform type: ${ej(t.type)}`)});let i=this.gpuDataManager.create(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(i.buffer,0,s,0,t),this.gpuDataManager.release(i.id),o={offset:0,size:t,buffer:i.buffer}}let m=this.programManager.normalizeDispatchGroupSize(d),_=lF(t,r,1===m[1]&&1===m[2]),g=this.programManager.getArtifact(_);if(g||(g=this.programManager.build(t,m),this.programManager.setArtifact(_,g),e4("info",()=>`[artifact] key: ${_}, programName: ${t.name}`)),c&&g.uniformVariablesInfo){if(c.length!==g.uniformVariablesInfo.length)throw Error(`Uniform variables count mismatch: expect ${g.uniformVariablesInfo.length}, got ${c.length} in program "${g.programInfo.name}".`);for(let t=0;t<c.length;t++){let r=c[t],s=r.type,i="number"==typeof r.data?1:r.data.length,[n,a]=g.uniformVariablesInfo[t];if(s!==n||i!==a)throw Error(`Uniform variable ${t} mismatch: expect type ${n} with size ${a}, got type ${s} with size ${i} in program "${g.programInfo.name}".`)}}if(e4("info",()=>`[ProgramManager] run "${t.name}" (key=${_}) with ${m[0]}x${m[1]}x${m[2]}`),"none"!==this.queryType||"capturing"===this.sessionStatus){let t={kernelId:this.currentKernelId,programName:g.programInfo.name,inputTensorViews:r,outputTensorViews:h};this.pendingKernels.push(t),"capturing"===this.sessionStatus&&this.capturedPendingKernels.get(this.currentSessionId).push(t)}return this.programManager.run(g,l,f,m,o),z(t.name),h}upload(t,r){this.gpuDataManager.upload(t,r)}memcpy(t,r){this.gpuDataManager.memcpy(t,r)}async download(t,r){await this.gpuDataManager.download(t,r)}alloc(t){return this.gpuDataManager.create(t).id}free(t){return this.gpuDataManager.release(t)}createKernel(t,r,s,i){let n=oA.get(t);if(!n)throw Error(`kernel not implemented: ${t}`);let a={kernelType:t,kernelName:i,kernelEntry:n[0],attributes:[n[1],s]};this.kernels.set(r,a)}releaseKernel(t){let r=this.kernelPersistentData.get(t);if(r){for(let t of r)this.gpuDataManager.release(t.id);this.kernelPersistentData.delete(t)}this.kernelCustomData.delete(t),this.kernels.delete(t)}computeKernel(t,r,s){let i=this.kernels.get(t);if(!i)throw Error(`kernel not created: ${t}`);let n=i.kernelType,a=i.kernelName,o=i.kernelEntry,l=i.attributes;if(null!==this.currentKernelId)throw Error(`kernel "[${n}] ${a}" is not allowed to be called recursively`);this.currentKernelId=t,l[0]&&(l[1]=l[0](l[1]),l[0]=void 0),e4("info",()=>`[WebGPU] Start to run kernel "[${n}] ${a}"...`);let u=this.env.debug;this.temporaryData=[];try{return u&&this.device.pushErrorScope("validation"),o(r,l[1]),0}catch(t){return s.push(Promise.resolve(`[WebGPU] Kernel "[${n}] ${a}" failed. ${t}`)),1}finally{for(let t of(u&&s.push(this.device.popErrorScope().then(t=>t?`GPU validation error for kernel "[${n}] ${a}": ${t.message}`:null)),this.temporaryData))this.gpuDataManager.release(t.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(t,r,s,i){let n=this.sessionExternalDataMapping.get(t);n||(n=new Map,this.sessionExternalDataMapping.set(t,n));let a=n.get(r),o=this.gpuDataManager.registerExternalBuffer(s,i,a);return n.set(r,[o,s]),o}unregisterBuffers(t){let r=this.sessionExternalDataMapping.get(t);r&&(r.forEach(t=>this.gpuDataManager.unregisterExternalBuffer(t[0])),this.sessionExternalDataMapping.delete(t))}getBuffer(t){let r=this.gpuDataManager.get(t);if(!r)throw Error(`no GPU data for buffer: ${t}`);return r.buffer}createDownloader(t,r,s){return async()=>{let i=await tv(this,t,r);return tr(i.buffer,s)}}writeTimestamp(t){"inside-passes"===this.queryType&&this.computePassEncoder.writeTimestamp(this.querySet,t)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),"none"!==this.queryType&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2*this.maxDispatchNumber}),this.queryResolveBuffer=this.device.createBuffer({size:16*this.maxDispatchNumber,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){e4("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){e4("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){e4("info","replay"),this.sessionStatus="replaying";let t=this.capturedCommandList.get(this.currentSessionId),r=this.capturedPendingKernels.get(this.currentSessionId),s=t.length;this.pendingKernels=[];for(let i=0;i<s;i++){let s=this.getComputePassEncoder(),n=t[i];this.writeTimestamp(2*this.pendingDispatchNumber),s.setPipeline(n.computePipeline),s.setBindGroup(0,n.bindGroup),s.dispatchWorkgroups(...n.dispatchGroup),this.writeTimestamp(2*this.pendingDispatchNumber+1),this.pendingDispatchNumber++,"none"!==this.queryType&&this.pendingKernels.push(r[i]),(this.pendingDispatchNumber>=this.maxDispatchNumber||"at-passes"===this.queryType)&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(t){this.unregisterBuffers(t),this.capturedCommandList.has(t)&&this.capturedCommandList.delete(t),this.capturedPendingKernels.has(t)&&this.capturedPendingKernels.delete(t),this.gpuDataManager.onReleaseSession(t)}onRunStart(t){this.currentSessionId=t,this.setQueryType()}}}),lG={};D(lG,{init:()=>lK});var lW,lH,lK,lX,lY,lQ,lZ,lJ,l0,l1,l2,l3,l4,l6,l8,l5,l9,l7,ue,ut,ur,us,ui,un,ua,uo,ul,uu,ud,uc,up,uh,uf,um,u_,ug,uy,uw=L(()=>{oD(),oN(),oF(),oj(),lW=class t{constructor(t,r,s,i){this.module=t,this.dataType=r,this.data=s,this.dims=i}getFloat32Array(){if(1!==this.dataType)throw Error("Invalid data type");let t=e5.size(this.dims);return 0===t?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(7!==this.dataType)throw Error("Invalid data type");let t=e5.size(this.dims);return 0===t?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(6!==this.dataType)throw Error("Invalid data type");let t=e5.size(this.dims);return 0===t?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}getUint16Array(){if(10!==this.dataType&&4!==this.dataType)throw Error("Invalid data type");let t=e5.size(this.dims);return 0===t?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,t)}reshape(r){if(e5.size(r)!==e5.size(this.dims))throw Error("Invalid new shape");return new t(this.module,this.dataType,this.data,r)}},lH=class{constructor(t,r,s){this.module=t,this.backend=r,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=r.adapterInfo;let i=t.PTR_SIZE,n=s/t.PTR_SIZE,a=4===i?"i32":"i64";this.opKernelContext=Number(t.getValue(i*n++,a));let o=Number(t.getValue(i*n++,a));this.outputCount=Number(t.getValue(i*n++,a)),this.customDataOffset=Number(t.getValue(i*n++,"*")),this.customDataSize=Number(t.getValue(i*n++,a));let l=[];for(let r=0;r<o;r++){let r=Number(t.getValue(i*n++,a)),s=Number(t.getValue(i*n++,"*")),o=Number(t.getValue(i*n++,a)),u=[];for(let r=0;r<o;r++)u.push(Number(t.getValue(i*n++,a)));l.push(new lW(t,r,s,u))}this.inputs=l}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(t,r){let s=r?.inputs?.map(t=>"number"==typeof t?this.inputs[t]:t)??this.inputs,i=r?.outputs??[];return this.backend.run(t,s,i,(t,r,s)=>new lW(this.module,r,this.output(t,s),s),(t,r)=>{let s=eG(t,r);if(!s)throw Error(`Unsupported data type: ${t}`);let i=s>0?this.backend.gpuDataManager.create(s).id:0;return new lW(this.module,t,i,r)},this.outputCount)}output(t,r){let s=this.module.stackSave();try{let s=this.module.PTR_SIZE,i=4===s?"i32":"i64",n=this.module.stackAlloc((1+r.length)*s);this.module.setValue(n,r.length,i);for(let t=0;t<r.length;t++)this.module.setValue(n+s*(t+1),r[t],i);return this.module._JsepOutput(this.opKernelContext,t,n)}catch(s){throw Error(`Failed to generate kernel's output[${t}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${s}`)}finally{this.module.stackRestore(s)}}},lK=async(t,r,s,i)=>{let n=r.jsepInit;if(!n)throw Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if("webgpu"===t){let t=new(lj(),N(lU)).WebGpuBackend;await t.initialize(s,i),n("webgpu",[t,r=>t.alloc(Number(r)),r=>t.free(r),(s,i,n,a=!1)=>{if(a)e4("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${Number(s)}, dst=${Number(i)}, size=${Number(n)}`),t.memcpy(Number(s),Number(i));else{e4("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${Number(s)}, gpuDataId=${Number(i)}, size=${Number(n)}`);let a=r.HEAPU8.subarray(Number(s>>>0),Number(s>>>0)+Number(n));t.upload(Number(i),a)}},async(s,i,n)=>{e4("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${s}, dataOffset=${i}, size=${n}`),await t.download(Number(s),()=>r.HEAPU8.subarray(Number(i)>>>0,Number(i+n)>>>0))},(s,i,n)=>t.createKernel(s,Number(i),n,r.UTF8ToString(r._JsepGetNodeName(Number(i)))),r=>t.releaseKernel(r),(s,i,n,a)=>{e4("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${n}, kernel=${s}, contextDataOffset=${i}`);let o=new lH(r,t,Number(i));return t.computeKernel(Number(s),o,a)},()=>t.captureBegin(),()=>t.captureEnd(),()=>t.replay()])}else{let t=new tm(s);n("webnn",[t,()=>t.reserveTensorId(),r=>t.releaseTensorId(r),async(r,s,i,n,a)=>t.ensureTensor(r,s,i,n,a),(r,s)=>{t.uploadTensor(r,s)},async(r,s)=>t.downloadTensor(r,s)])}}}),ub=L(()=>{oP(),oL(),oD(),oB(),oR(),oU(),lX=(t,r)=>{0!==eM()._OrtInit(t,r)&&eR("Can't initialize onnxruntime.")},lY=async t=>{lX(t.wasm.numThreads,eH(t.logLevel))},lQ=async(t,r)=>{eM().asyncInit?.();{let s=(uw(),N(lG)).init;if("webgpu"===r){if(typeof navigator>"u"||!navigator.gpu)throw Error("WebGPU is not supported in current environment");let r=t.webgpu.adapter;if(r){if("object"!=typeof r.limits||"object"!=typeof r.features||"function"!=typeof r.requestDevice)throw Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let s=t.webgpu.powerPreference;if(void 0!==s&&"low-power"!==s&&"high-performance"!==s)throw Error(`Invalid powerPreference setting: "${s}"`);let i=t.webgpu.forceFallbackAdapter;if(void 0!==i&&"boolean"!=typeof i)throw Error(`Invalid forceFallbackAdapter setting: "${i}"`);if(!(r=await navigator.gpu.requestAdapter({powerPreference:s,forceFallbackAdapter:i})))throw Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await s("webgpu",eM(),t,r)}if("webnn"===r){if(typeof navigator>"u"||!navigator.ml)throw Error("WebNN is not supported in current environment");await s("webnn",eM(),t)}}},lZ=new Map,lJ=t=>{let r=eM(),s=r.stackSave();try{let s=r.PTR_SIZE,i=r.stackAlloc(2*s);0!==r._OrtGetInputOutputCount(t,i,i+s)&&eR("Can't get session input/output count.");let n=4===s?"i32":"i64";return[Number(r.getValue(i,n)),Number(r.getValue(i+s,n))]}finally{r.stackRestore(s)}},l0=(t,r)=>{let s=eM(),i=s.stackSave(),n=0;try{let i=s.PTR_SIZE,a=s.stackAlloc(2*i);0!==s._OrtGetInputOutputMetadata(t,r,a,a+i)&&eR("Can't get session input/output metadata.");let o=Number(s.getValue(a,"*"));n=Number(s.getValue(a+i,"*"));let l=s.HEAP32[n/4];if(0===l)return[o,0];let u=s.HEAPU32[n/4+1],d=[];for(let t=0;t<u;t++){let r=Number(s.getValue(n+8+t*i,"*"));d.push(0!==r?s.UTF8ToString(r):Number(s.getValue(n+8+(t+u)*i,"*")))}return[o,l,d]}finally{s.stackRestore(i),0!==n&&s._OrtFree(n)}},l1=t=>{let r=eM(),s=r._malloc(t.byteLength);if(0===s)throw Error(`Can't create a session. failed to allocate a buffer of size ${t.byteLength}.`);return r.HEAPU8.set(t,s),[s,t.byteLength]},l2=async(t,r)=>{let s,i,n=eM();Array.isArray(t)?[s,i]=t:t.buffer===n.HEAPU8.buffer?[s,i]=[t.byteOffset,t.byteLength]:[s,i]=l1(t);let a=0,o=0,l=0,u=[],d=[],c=[];try{if([o,u]=await eq(r),r?.externalData&&n.mountExternalData){let t=[];for(let s of r.externalData){let r="string"==typeof s?s:s.path;t.push(eQ("string"==typeof s?s:s.data).then(t=>{n.mountExternalData(r,t)}))}await Promise.all(t)}for(let t of r?.executionProviders??[])if(("string"==typeof t?t:t.name)==="webnn"){if(n.shouldTransferToMLTensor=!1,"string"!=typeof t){let r=t?.context,s=t?.gpuDevice,i=t?.deviceType,a=t?.powerPreference;r?n.currentContext=r:s?n.currentContext=await n.webnnCreateMLContext(s):n.currentContext=await n.webnnCreateMLContext({deviceType:i,powerPreference:a})}else n.currentContext=await n.webnnCreateMLContext();break}a=await n._OrtCreateSession(s,i,o),n.webgpuOnCreateSession?.(a),0===a&&eR("Can't create a session."),n.jsepOnCreateSession?.(),n.currentContext&&(n.webnnRegisterMLContext(a,n.currentContext),n.currentContext=void 0,n.shouldTransferToMLTensor=!0);let[t,p]=lJ(a),h=!!r?.enableGraphCapture,f=[],m=[],_=[],g=[],y=[];for(let r=0;r<t;r++){let[t,s,i]=l0(a,r);0===t&&eR("Can't get an input name."),d.push(t);let o=n.UTF8ToString(t);f.push(o),_.push(0===s?{name:o,isTensor:!1}:{name:o,isTensor:!0,type:ej(s),shape:i})}for(let s=0;s<p;s++){let[i,o,l]=l0(a,s+t);0===i&&eR("Can't get an output name."),c.push(i);let u=n.UTF8ToString(i);m.push(u),g.push(0===o?{name:u,isTensor:!1}:{name:u,isTensor:!0,type:ej(o),shape:l});{if(h&&r?.preferredOutputLocation===void 0){y.push("gpu-buffer");continue}let t="string"==typeof r?.preferredOutputLocation?r.preferredOutputLocation:r?.preferredOutputLocation?.[u]??"cpu";if("cpu"!==t&&"cpu-pinned"!==t&&"gpu-buffer"!==t&&"ml-tensor"!==t)throw Error(`Not supported preferred output location: ${t}.`);if(h&&"gpu-buffer"!==t)throw Error(`Not supported preferred output location: ${t}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);y.push(t)}}let w=null;return y.some(t=>"gpu-buffer"===t||"ml-tensor"===t)&&(l=n._OrtCreateBinding(a),0===l&&eR("Can't create IO binding."),w={handle:l,outputPreferredLocations:y,outputPreferredLocationsEncoded:y.map(t=>eY(t))}),lZ.set(a,[a,d,c,w,h,!1]),[a,f,m,_,g]}catch(t){throw d.forEach(t=>n._OrtFree(t)),c.forEach(t=>n._OrtFree(t)),0!==l&&0!==n._OrtReleaseBinding(l)&&eR("Can't release IO binding."),0!==a&&0!==n._OrtReleaseSession(a)&&eR("Can't release session."),t}finally{n._free(s),0!==o&&0!==n._OrtReleaseSessionOptions(o)&&eR("Can't release session options."),u.forEach(t=>n._free(t)),n.unmountExternalData?.()}},l3=t=>{let r=eM(),s=lZ.get(t);if(!s)throw Error(`cannot release session. invalid session id: ${t}`);let[i,n,a,o,l]=s;o&&(l&&0!==r._OrtClearBoundOutputs(o.handle)&&eR("Can't clear bound outputs."),0!==r._OrtReleaseBinding(o.handle)&&eR("Can't release IO binding.")),r.jsepOnReleaseSession?.(t),r.webnnOnReleaseSession?.(t),r.webgpuOnReleaseSession?.(t),n.forEach(t=>r._OrtFree(t)),a.forEach(t=>r._OrtFree(t)),0!==r._OrtReleaseSession(i)&&eR("Can't release session."),lZ.delete(t)},l4=async(t,r,s,i,n,a,o=!1)=>{if(!t)return void r.push(0);let l=eM(),u=l.PTR_SIZE,d=t[0],c=t[1],p=t[3],h=p,f,m;if("string"===d&&("gpu-buffer"===p||"ml-tensor"===p))throw Error("String tensor is not supported on GPU.");if(o&&"gpu-buffer"!==p)throw Error(`External buffer must be provided for input/output index ${a} when enableGraphCapture is true.`);if("gpu-buffer"===p){let r=t[2].gpuBuffer;m=eG(eV(d),c);{let t=l.jsepRegisterBuffer;if(!t)throw Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');f=t(i,a,r,m)}}else if("ml-tensor"===p){let r=t[2].mlTensor;m=eG(eV(d),c);let s=l.webnnRegisterMLTensor;if(!s)throw Error('Tensor location "ml-tensor" is not supported without using WebNN.');f=s(i,r,eV(d),c)}else{let r=t[2];if(Array.isArray(r)){m=u*r.length,f=l._malloc(m),s.push(f);for(let t=0;t<r.length;t++){if("string"!=typeof r[t])throw TypeError(`tensor data at index ${t} is not a string`);l.setValue(f+t*u,eO(r[t],s),"*")}}else{let t=l.webnnIsGraphInput;if("string"!==d&&t)if(t(i,l.UTF8ToString(n))){let t=eV(d);m=eG(t,c),h="ml-tensor";let s=l.webnnCreateTemporaryTensor,n=l.webnnUploadTensor;if(!s||!n)throw Error('Tensor location "ml-tensor" is not supported without using WebNN.');let a=await s(i,t,c);n(a,new Uint8Array(r.buffer,r.byteOffset,r.byteLength)),f=a}else m=r.byteLength,f=l._malloc(m),s.push(f),l.HEAPU8.set(new Uint8Array(r.buffer,r.byteOffset,m),f);else m=r.byteLength,f=l._malloc(m),s.push(f),l.HEAPU8.set(new Uint8Array(r.buffer,r.byteOffset,m),f)}}let _=l.stackSave(),g=l.stackAlloc(4*c.length);try{c.forEach((t,r)=>l.setValue(g+r*u,t,4===u?"i32":"i64"));let t=l._OrtCreateTensor(eV(d),f,m,g,c.length,eY(h));0===t&&eR(`Can't create tensor for input/output. session=${i}, index=${a}.`),r.push(t)}finally{l.stackRestore(_)}},l6=async(t,r,s,i,n,a)=>{let o=eM(),l=o.PTR_SIZE,u=lZ.get(t);if(!u)throw Error(`cannot run inference. invalid session id: ${t}`);let d=u[0],c=u[1],p=u[2],h=u[3],f=u[4],m=u[5],_=r.length,g=i.length,y=0,w=[],b=[],x=[],v=[],$=o.stackSave(),k=o.stackAlloc(_*l),E=o.stackAlloc(_*l),S=o.stackAlloc(g*l),T=o.stackAlloc(g*l);try{let u;[y,w]=eP(a);for(let i=0;i<_;i++)await l4(s[i],b,v,t,c[r[i]],r[i],f);for(let r=0;r<g;r++)await l4(n[r],x,v,t,p[i[r]],_+i[r],f);for(let t=0;t<_;t++)o.setValue(k+t*l,b[t],"*"),o.setValue(E+t*l,c[r[t]],"*");for(let t=0;t<g;t++)o.setValue(S+t*l,x[t],"*"),o.setValue(T+t*l,p[i[t]],"*");if(h&&!m){let{handle:s,outputPreferredLocations:a,outputPreferredLocationsEncoded:l}=h;if(c.length!==_)throw Error(`input count from feeds (${_}) is expected to be always equal to model's input count (${c.length}).`);for(let i=0;i<_;i++){let n=r[i];await o._OrtBindInput(s,c[n],b[i])!==0&&eR(`Can't bind input[${i}] for session=${t}.`)}for(let r=0;r<g;r++){let u=i[r];n[r]?.[3]?0!==o._OrtBindOutput(s,p[u],x[r],0)&&eR(`Can't bind pre-allocated output[${r}] for session=${t}.`):0!==o._OrtBindOutput(s,p[u],0,l[u])&&eR(`Can't bind output[${r}] to ${a[r]} for session=${t}.`)}lZ.set(t,[d,c,p,h,f,!0])}o.jsepOnRunStart?.(d),o.webnnOnRunStart?.(d),u=h?await o._OrtRunWithBinding(d,h.handle,g,S,y):await o._OrtRun(d,E,k,_,T,g,S,y),0!==u&&eR("failed to call OrtRun().");let $=[];for(let r=0;r<g;r++){let s=Number(o.getValue(S+r*l,"*"));if(s===x[r]){$.push(n[r]);continue}let a=o.stackSave(),u=o.stackAlloc(4*l),c=!1,p,f=0;try{0!==o._OrtGetTensorData(s,u,u+l,u+2*l,u+3*l)&&eR(`Can't access output tensor data on index ${r}.`);let n=4===l?"i32":"i64",a=Number(o.getValue(u,n));f=o.getValue(u+l,"*");let d=o.getValue(u+2*l,"*"),m=Number(o.getValue(u+3*l,n)),_=[];for(let t=0;t<m;t++)_.push(Number(o.getValue(d+t*l,n)));0!==o._OrtFree(d)&&eR("Can't free memory for tensor dims.");let g=_.reduce((t,r)=>t*r,1);p=ej(a);let y=h?.outputPreferredLocations[i[r]];if("string"===p){if("gpu-buffer"===y||"ml-tensor"===y)throw Error("String tensor is not supported on GPU.");let t=[];for(let r=0;r<g;r++){let s=o.getValue(f+r*l,"*"),i=o.getValue(f+(r+1)*l,"*"),n=r===g-1?void 0:i-s;t.push(o.UTF8ToString(s,n))}$.push([p,_,t,"cpu"])}else if("gpu-buffer"===y&&g>0){let t=o.jsepGetBuffer;if(!t)throw Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let r=t(f),i=eG(a,g);if(void 0===i||!eK(p))throw Error(`Unsupported data type: ${p}`);c=!0,$.push([p,_,{gpuBuffer:r,download:o.jsepCreateDownloader(r,i,p),dispose:()=>{0!==o._OrtReleaseTensor(s)&&eR("Can't release tensor.")}},"gpu-buffer"])}else if("ml-tensor"===y&&g>0){let r=o.webnnEnsureTensor,i=o.webnnIsInt64Supported;if(!r||!i)throw Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(void 0===eG(a,g)||!eX(p))throw Error(`Unsupported data type: ${p}`);if("int64"===p&&!i(t))throw Error('preferredLocation "ml-tensor" for int64 output is not supported by current WebNN Context.');let n=await r(t,f,a,_,!1);c=!0,$.push([p,_,{mlTensor:n,download:o.webnnCreateMLTensorDownloader(f,p),dispose:()=>{o.webnnReleaseTensorId(f),o._OrtReleaseTensor(s)}},"ml-tensor"])}else{let t=new(eW(p))(g);new Uint8Array(t.buffer,t.byteOffset,t.byteLength).set(o.HEAPU8.subarray(f,f+t.byteLength)),$.push([p,_,t,"cpu"])}}finally{o.stackRestore(a),"string"===p&&f&&o._free(f),c||o._OrtReleaseTensor(s),o.webnnOnRunEnd?.(d)}}return h&&!f&&(0!==o._OrtClearBoundOutputs(h.handle)&&eR("Can't clear bound outputs."),lZ.set(t,[d,c,p,h,f,!1])),$}finally{o.stackRestore($),b.forEach(t=>o._OrtReleaseTensor(t)),x.forEach(t=>o._OrtReleaseTensor(t)),v.forEach(t=>o._free(t)),0!==y&&o._OrtReleaseRunOptions(y),w.forEach(t=>o._free(t))}},l8=t=>{let r=eM(),s=lZ.get(t);if(!s)throw Error("invalid session id");let i=s[0],n=r._OrtEndProfiling(i);0===n&&eR("Can't get an profile file name."),r._OrtFree(n)},l5=t=>{let r=[];for(let s of t){let t=s[2];!Array.isArray(t)&&"buffer"in t&&r.push(t.buffer)}return r}}),ux=L(()=>{ea(),ub(),oB(),oO(),l9=()=>!!u.wasm.proxy&&"u">typeof document,ue=!1,ut=!1,ur=!1,un=new Map,ua=(t,r)=>{let s=un.get(t);s?s.push(r):un.set(t,[r])},uo=()=>{if(ue||!ut||ur||!l7)throw Error("worker not ready")},ul=t=>{switch(t.data.type){case"init-wasm":ue=!1,t.data.err?(ur=!0,ui[1](t.data.err)):(ut=!0,ui[0]()),us&&(URL.revokeObjectURL(us),us=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let r=un.get(t.data.type);t.data.err?r.shift()[1](t.data.err):r.shift()[0](t.data.out)}}},uu=async()=>{if(!ut){if(ue)throw Error("multiple calls to 'initWasm()' detected.");if(ur)throw Error("previous call to 'initWasm()' failed.");if(ue=!0,l9())return new Promise((t,r)=>{l7?.terminate(),ex().then(([s,i])=>{try{(l7=i).onerror=t=>r(t),l7.onmessage=ul,ui=[t,r];let n={type:"init-wasm",in:u};if(!n.in.wasm.wasmPaths&&s){let t=ef();t&&(n.in.wasm.wasmPaths=t)}l7.postMessage(n),us=s}catch(t){r(t)}},r)});try{await eC(u.wasm),await lY(u),ut=!0}catch(t){throw ur=!0,t}finally{ue=!1}}},ud=async t=>{if(l9())return uo(),new Promise((r,s)=>{ua("init-ep",[r,s]);let i={type:"init-ep",in:{epName:t,env:u}};l7.postMessage(i)});await lQ(u,t)},uc=async t=>l9()?(uo(),new Promise((r,s)=>{ua("copy-from",[r,s]),l7.postMessage({type:"copy-from",in:{buffer:t}},[t.buffer])})):l1(t),up=async(t,r)=>{if(!l9())return l2(t,r);if(r?.preferredOutputLocation)throw Error('session option "preferredOutputLocation" is not supported for proxy.');return uo(),new Promise((s,i)=>{ua("create",[s,i]);let n={type:"create",in:{model:t,options:{...r}}},a=[];t instanceof Uint8Array&&a.push(t.buffer),l7.postMessage(n,a)})},uh=async t=>{if(l9())return uo(),new Promise((r,s)=>{ua("release",[r,s]),l7.postMessage({type:"release",in:t})});l3(t)},uf=async(t,r,s,i,n,a)=>{if(!l9())return l6(t,r,s,i,n,a);if(s.some(t=>"cpu"!==t[3]))throw Error("input tensor on GPU is not supported for proxy.");if(n.some(t=>t))throw Error("pre-allocated output tensor is not supported for proxy.");return uo(),new Promise((n,o)=>{ua("run",[n,o]),l7.postMessage({type:"run",in:{sessionId:t,inputIndices:r,inputs:s,outputIndices:i,options:a}},l5(s))})},um=async t=>{if(l9())return uo(),new Promise((r,s)=>{ua("end-profiling",[r,s]),l7.postMessage({type:"end-profiling",in:t})});l8(t)}}),uv=L(()=>{ea(),ux(),oD(),eo(),oU(),u_=(t,r)=>{switch(t.location){case"cpu":return[t.type,t.dims,t.data,"cpu"];case"gpu-buffer":return[t.type,t.dims,{gpuBuffer:t.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[t.type,t.dims,{mlTensor:t.mlTensor},"ml-tensor"];default:throw Error(`invalid data location: ${t.location} for ${r()}`)}},ug=t=>{switch(t[3]){case"cpu":return new E(t[0],t[2],t[1]);case"gpu-buffer":{let r=t[0];if(!eK(r))throw Error(`not supported data type: ${r} for deserializing GPU tensor`);let{gpuBuffer:s,download:i,dispose:n}=t[2];return E.fromGpuBuffer(s,{dataType:r,dims:t[1],download:i,dispose:n})}case"ml-tensor":{let r=t[0];if(!eX(r))throw Error(`not supported data type: ${r} for deserializing MLTensor tensor`);let{mlTensor:s,download:i,dispose:n}=t[2];return E.fromMLTensor(s,{dataType:r,dims:t[1],download:i,dispose:n})}default:throw Error(`invalid data location: ${t[3]}`)}},uy=class{async fetchModelAndCopyToWasmMemory(t){return uc(await eQ(t))}async loadModel(t,r){let s;I(),s="string"==typeof t?await this.fetchModelAndCopyToWasmMemory(t):t,[this.sessionId,this.inputNames,this.outputNames,this.inputMetadata,this.outputMetadata]=await up(s,r),z()}async dispose(){return uh(this.sessionId)}async run(t,r,s){I();let i=[],n=[];Object.entries(t).forEach(t=>{let r=t[0],s=t[1],a=this.inputNames.indexOf(r);if(-1===a)throw Error(`invalid input '${r}'`);i.push(s),n.push(a)});let a=[],o=[];Object.entries(r).forEach(t=>{let r=t[0],s=t[1],i=this.outputNames.indexOf(r);if(-1===i)throw Error(`invalid output '${r}'`);a.push(s),o.push(i)});let l=i.map((t,r)=>u_(t,()=>`input "${this.inputNames[n[r]]}"`)),u=a.map((t,r)=>t?u_(t,()=>`output "${this.outputNames[o[r]]}"`):null),d=await uf(this.sessionId,n,l,o,u,s),c={};for(let t=0;t<d.length;t++)c[this.outputNames[o[t]]]=a[t]??ug(d[t]);return z(),c}startProfiling(){}endProfiling(){um(this.sessionId)}}}),u$={};D(u$,{OnnxruntimeWebAssemblyBackend:()=>uE,initializeFlags:()=>uk,wasmBackend:()=>uS});var uk,uE,uS,uT=L(()=>{ea(),ux(),uv(),uk=()=>{("number"!=typeof u.wasm.initTimeout||u.wasm.initTimeout<0)&&(u.wasm.initTimeout=0);let t=u.wasm.simd;if("boolean"!=typeof t&&void 0!==t&&"fixed"!==t&&"relaxed"!==t&&(console.warn(`Property "env.wasm.simd" is set to unknown value "${t}". Reset it to \`false\` and ignore SIMD feature checking.`),u.wasm.simd=!1),"boolean"!=typeof u.wasm.proxy&&(u.wasm.proxy=!1),"boolean"!=typeof u.wasm.trace&&(u.wasm.trace=!1),"number"!=typeof u.wasm.numThreads||!Number.isInteger(u.wasm.numThreads)||u.wasm.numThreads<=0)if("u">typeof self&&!self.crossOriginIsolated)u.wasm.numThreads=1;else{let t=typeof navigator>"u"?P("node:os").cpus().length:navigator.hardwareConcurrency;u.wasm.numThreads=Math.min(4,Math.ceil((t||1)/2))}},uS=new(uE=class{async init(t){uk(),await uu(),await ud(t)}async createInferenceSessionHandler(t,r){let s=new uy;return await s.loadModel(t,r),s}})}),uI={};D(uI,{InferenceSession:()=>C,TRACE:()=>S,TRACE_FUNC_BEGIN:()=>I,TRACE_FUNC_END:()=>z,Tensor:()=>E,default:()=>uz,env:()=>u,registerBackend:()=>s}),ea(),ea(),ea();var uz=en;{let t=(uT(),N(u$)).wasmBackend;s("webgpu",t,5),s("webnn",t,5),s("cpu",t,10),s("wasm",t,10)}return Object.defineProperty(u.versions,"web",{value:"1.22.0-dev.20250409-89f8206ba4",enumerable:!0}),N(uI)})();var ek={},eE=ek&&ek.__createBinding||(Object.create?function(t,r,s,i){void 0===i&&(i=s);var n=Object.getOwnPropertyDescriptor(r,s);(!n||("get"in n?!r.__esModule:n.writable||n.configurable))&&(n={enumerable:!0,get:function(){return r[s]}}),Object.defineProperty(t,i,n)}:function(t,r,s,i){void 0===i&&(i=s),t[i]=r[s]}),eS=ek&&ek.__exportStar||function(t,r){for(var s in t)"default"===s||Object.prototype.hasOwnProperty.call(r,s)||eE(r,t,s)};Object.defineProperty(ek,"__esModule",{value:!0}),eS(w("4MF6S"),ek),eS(w("cv9lS"),ek),eS(w("59Ij8"),ek),eS(w("1KuHI"),ek),eS(w("57F84"),ek),eS(w("2cmqa"),ek),eS(w("b9EKL"),ek),eS(w("9Vy8l"),ek),eS(w("keTjw"),ek);const eT=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),eI=[],ez=Symbol.for("onnxruntime");if(ez in globalThis)r=globalThis[ez];else if(V.IS_NODE_ENV){switch(r=x.default??x,$.platform){case"win32":eI.push("dml");break;case"linux":"x64"===$.arch&&eI.push("cuda")}eI.push("cpu"),t=["cpu"]}else r=e$,V.IS_WEBNN_AVAILABLE&&eI.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),V.IS_WEBGPU_AVAILABLE&&eI.push("webgpu"),eI.push("wasm"),t=["wasm"];const eA=r.InferenceSession;let eC=null;async function eM(t,r,s){eC&&await eC;let i=eA.create(t,r);eC??=i;let n=await i;return n.config=s,n}function eO(t){return t instanceof r.Tensor}const eB=r?.env;function eR(){return eB?.wasm?.proxy}eB?.wasm&&("undefined"!=typeof ServiceWorkerGlobalScope&&self instanceof ServiceWorkerGlobalScope||eB.wasm.wasmPaths||(eB.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${K.version}/dist/`),eB.wasm.proxy=!1),eB?.webgpu&&(eB.webgpu.powerPreference="high-performance"),K.backends.onnx=eB;const eP=V.IS_BROWSER_ENV||V.IS_WEBWORKER_ENV,eL=async(t,r,s)=>{let i=await eM(new Uint8Array(t),r),n=Promise.resolve();return async t=>{let r=eR(),a=Object.fromEntries(Object.entries(t).map(([t,s])=>[t,(r?s.clone():s).ort_tensor])),o=await (n=eP?n.then(()=>i.run(a)):i.run(a));return Array.isArray(s)?s.map(t=>new eN(o[t])):new eN(o[s])}};class eD{static session_options={};static get nearest_interpolate_4d(){return this._nearest_interpolate_4d||(this._nearest_interpolate_4d=eL([8,10,18,0,58,129,1,10,41,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,18,10,4,109,111,100,101,34,7,110,101,97,114,101,115,116,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,21],this.session_options,"y")),this._nearest_interpolate_4d}static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=eL([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=eL([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=eL([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=eL([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=eL([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=eL([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}static get slice(){return this._slice||(this._slice=eL([8,7,18,0,58,96,10,25,10,1,120,10,1,115,10,1,101,10,1,97,10,1,116,18,1,121,34,5,83,108,105,99,101,18,1,114,90,9,10,1,120,18,4,10,2,8,1,90,9,10,1,115,18,4,10,2,8,7,90,9,10,1,101,18,4,10,2,8,7,90,9,10,1,97,18,4,10,2,8,7,90,9,10,1,116,18,4,10,2,8,7,98,9,10,1,121,18,4,10,2,8,1,66,2,16,13],this.session_options,"y")),this._slice}}const eU=Object.freeze({float32:Float32Array,float16:"undefined"!=typeof Float16Array?Float16Array:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class eN{get dims(){return this.ort_tensor.dims}set dims(t){this.ort_tensor.dims=t}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}ort_tensor;constructor(...t){return eO(t[0])?this.ort_tensor=t[0]:this.ort_tensor=new(0,ek.Tensor)(t[0],t[1],t[2]),new Proxy(this,{get:(t,r)=>{if("string"==typeof r){let s=Number(r);if(Number.isInteger(s))return t._getitem(s)}return t[r]},set:(t,r,s)=>t[r]=s})}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){let[t,...r]=this.dims;if(r.length>0){let s=r.reduce((t,r)=>t*r);for(let i=0;i<t;++i)yield this._subarray(i,s,r)}else yield*this.data}_getitem(t){let[r,...s]=this.dims;if(t=eX(t,r),!(s.length>0))return new eN(this.type,[this.data[t]],s);{let r=s.reduce((t,r)=>t*r);return this._subarray(t,r,s)}}indexOf(t){let r=this.data;for(let s=0;s<r.length;++s)if(r[s]==t)return s;return -1}_subarray(t,r,s){let i=t*r,n=(t+1)*r,a="subarray"in this.data?this.data.subarray(i,n):this.data.slice(i,n);return new eN(this.type,a,s)}item(){let t=this.data;if(1!==t.length)throw Error(`a Tensor with ${t.length} elements cannot be converted to Scalar`);return t[0]}tolist(){return function(t,r){let s=t.length;if(s!==r.reduce((t,r)=>t*r))throw Error(`cannot reshape array of size ${s} into shape (${r})`);let i=t;for(let t=r.length-1;t>=0;t--)i=i.reduce((s,i)=>{let n=s[s.length-1];return n.length<r[t]?n.push(i):s.push([i]),s},[[]]);return i[0]}(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){let t=this.data;for(let r=0;r<t.length;++r)t[r]=1/(1+Math.exp(-t[r]));return this}map(t){return this.clone().map_(t)}map_(t){let r=this.data;for(let s=0;s<r.length;++s)r[s]=t(r[s],s,r);return this}mul(t){return this.clone().mul_(t)}mul_(t){let r=this.data;for(let s=0;s<r.length;++s)r[s]*=t;return this}div(t){return this.clone().div_(t)}div_(t){let r=this.data;for(let s=0;s<r.length;++s)r[s]/=t;return this}add(t){return this.clone().add_(t)}add_(t){let r=this.data;for(let s=0;s<r.length;++s)r[s]+=t;return this}sub(t){return this.clone().sub_(t)}sub_(t){let r=this.data;for(let s=0;s<r.length;++s)r[s]-=t;return this}clone(){return new eN(this.type,this.data.slice(),this.dims.slice())}slice(...t){let r=[],s=[];for(let i=0;i<this.dims.length;++i){let n=t[i];if(null==n)s.push([0,this.dims[i]]),r.push(this.dims[i]);else if("number"==typeof n)n=eX(n,this.dims[i],i),s.push([n,n+1]);else if(Array.isArray(n)&&2===n.length){let[t,a]=n;if((t=null===t?0:eX(t,this.dims[i],i,!1))>(a=null===a?this.dims[i]:eX(a,this.dims[i],i,!1)))throw Error(`Invalid slice: ${n}`);let o=[Math.max(t,0),Math.min(a,this.dims[i])];s.push(o),r.push(o[1]-o[0])}else throw Error(`Invalid slice: ${n}`)}let i=s.map(([t,r])=>r-t),n=i.reduce((t,r)=>t*r),a=this.data,o=new a.constructor(n),l=this.stride();for(let t=0;t<n;++t){let r=0;for(let n=i.length-1,a=t;n>=0;--n){let t=i[n];r+=(a%t+s[n][0])*l[n],a=Math.floor(a/t)}o[t]=a[r]}return new eN(this.type,o,r)}permute(...t){var r=this,s=t;let[i,n]=function(t,r,s){let i=Array(s.length),n=Array(s.length);for(let t=s.length-1,a=1;t>=0;--t)n[t]=a,i[t]=r[s[t]],a*=i[t];let a=s.map((t,r)=>n[s.indexOf(r)]),o=new t.constructor(t.length);for(let s=0;s<t.length;++s){let i=0;for(let t=r.length-1,n=s;t>=0;--t)i+=n%r[t]*a[t],n=Math.floor(n/r[t]);o[i]=t[s]}return[o,i]}(r.data,r.dims,s);return new eN(r.type,i,n)}transpose(...t){return this.permute(...t)}sum(t=null,r=!1){return this.norm(1,t,r)}norm(t="fro",r=null,s=!1){if("fro"===t)t=2;else if("string"==typeof t)throw Error(`Unsupported norm: ${t}`);let i=this.data,n=(r,s)=>r+s**t;if(null===r){let r=i.reduce(n,0)**(1/t);return new eN(this.type,[r],[])}let[a,o,l]=eZ(n,this,r,s);if(1!==t)for(let r=0;r<o.length;++r)o[r]=o[r]**(1/t);return new eN(a,o,l)}normalize_(t=2,r=1){r=eX(r,this.dims.length);let s=this.norm(t,r,!0),i=this.data,n=s.data;for(let t=0;t<i.length;++t){let s=0;for(let i=this.dims.length-1,n=t,a=1;i>=0;--i){let t=this.dims[i];i!==r&&(s+=n%t*a,a*=this.dims[i]),n=Math.floor(n/t)}i[t]/=n[s]}return this}normalize(t=2,r=1){return this.clone().normalize_(t,r)}stride(){return function(t){let r=Array(t.length);for(let s=t.length-1,i=1;s>=0;--s)r[s]=i,i*=t[s];return r}(this.dims)}squeeze(t=null){return new eN(this.type,this.data,eH(this.dims,t))}squeeze_(t=null){return this.dims=eH(this.dims,t),this}unsqueeze(t=null){return new eN(this.type,this.data,eK(this.dims,t))}unsqueeze_(t=null){return this.dims=eK(this.dims,t),this}flatten_(t=0,r=-1){r=(r+this.dims.length)%this.dims.length;let s=this.dims.slice(0,t),i=this.dims.slice(t,r+1),n=this.dims.slice(r+1);return this.dims=[...s,i.reduce((t,r)=>t*r,1),...n],this}flatten(t=0,r=-1){return this.clone().flatten_(t,r)}view(...t){let r=-1;for(let s=0;s<t.length;++s)if(-1===t[s]){if(-1!==r)throw Error("Only one dimension can be inferred");r=s}let s=this.data;if(-1!==r){let i=t.reduce((t,s,i)=>i!==r?t*s:t,1);t[r]=s.length/i}return new eN(this.type,s,t)}neg_(){let t=this.data;for(let r=0;r<t.length;++r)t[r]=-t[r];return this}neg(){return this.clone().neg_()}gt(t){let r=new Uint8Array(this.data.length),s=this.data;for(let i=0;i<s.length;++i)r[i]=+(s[i]>t);return new eN("bool",r,this.dims)}lt(t){let r=new Uint8Array(this.data.length),s=this.data;for(let i=0;i<s.length;++i)r[i]=+(s[i]<t);return new eN("bool",r,this.dims)}clamp_(t,r){let s=this.data;for(let i=0;i<s.length;++i)s[i]=Math.min(Math.max(s[i],t),r);return this}clamp(t,r){return this.clone().clamp_(t,r)}round_(){let t=this.data;for(let r=0;r<t.length;++r)t[r]=Math.round(t[r]);return this}round(){return this.clone().round_()}mean(t=null,r=!1){return eJ(this,t,r)}min(t=null,r=!1){if(null===t){let t=e_(this.data)[0];return new eN(this.type,[t],[])}let[s,i,n]=eZ((t,r)=>Math.min(t,r),this,t,r,1/0);return new eN(s,i,n)}max(t=null,r=!1){if(null===t){let t=eg(this.data)[0];return new eN(this.type,[t],[])}let[s,i,n]=eZ((t,r)=>Math.max(t,r),this,t,r,-1/0);return new eN(s,i,n)}argmin(t=null,r=!1){if(null!==t)throw Error("`dim !== null` not yet implemented.");return new eN("int64",[BigInt(e_(this.data)[1])],[])}argmax(t=null,r=!1){if(null!==t)throw Error("`dim !== null` not yet implemented.");return new eN("int64",[BigInt(eg(this.data)[1])],[])}to(t){let r;if(this.type===t)return this;if(!eU.hasOwnProperty(t))throw Error(`Unsupported type: ${t}`);let s=["int64","uint64"].includes(this.type),i=["int64","uint64"].includes(t);return s&&!i?r=Number:!s&&i&&(r=BigInt),new eN(t,eU[t].from(this.data,r),this.dims)}}function eF(t,[r,s],i="bilinear",n=!1){let a=t.dims.at(-3)??1,o=t.dims.at(-2),l=t.dims.at(-1),u=function(t,[r,s,i],[n,a],o="bilinear",l=!1){let u=a/i,d=n/s,c=new t.constructor(n*a*r),p=s*i,h=n*a;for(let o=0;o<n;++o)for(let n=0;n<a;++n){let l=o*a+n,f=(n+.5)/u-.5,m=(o+.5)/d-.5,_=Math.floor(f),g=Math.floor(m),y=Math.min(_+1,i-1),w=Math.min(g+1,s-1),b=f-(_=Math.max(_,0)),x=m-(g=Math.max(g,0)),v=(1-b)*(1-x),$=b*(1-x),k=(1-b)*x,E=b*x,S=g*i,T=w*i,I=S+_,z=S+y,A=T+_,C=T+y;for(let s=0;s<r;++s){let r=s*p;c[s*h+l]=v*t[r+I]+$*t[r+z]+k*t[r+A]+E*t[r+C]}}return c}(t.data,[a,o,l],[r,s],i,n);return new eN(t.type,u,[a,r,s])}async function eq(t,{size:r=null,mode:s="bilinear"}={}){let i,n;if(4!==t.dims.length)throw Error("`interpolate_4d` currently only supports 4D input.");if(!r)throw Error("`interpolate_4d` requires a `size` argument.");if(2===r.length)i=[...t.dims.slice(0,2),...r];else if(3===r.length)i=[t.dims[0],...r];else if(4===r.length)i=r;else throw Error("`size` must be of length 2, 3, or 4.");if("nearest"===s)n=await eD.nearest_interpolate_4d;else if("bilinear"===s)n=await eD.bilinear_interpolate_4d;else if("bicubic"===s)n=await eD.bicubic_interpolate_4d;else throw Error(`Unsupported mode: ${s}`);let a=new eN("int64",new BigInt64Array(i.map(BigInt)),[i.length]);return await n({x:t,s:a})}async function eV(t,r){let s=await eD.matmul;return await s({a:t,b:r})}async function ej(t,r){let s=await eD.top_k;return r=null==r?t.dims.at(-1):Math.min(r,t.dims.at(-1)),await s({x:t,k:new eN("int64",[BigInt(r)],[1])})}const eG=t=>new eN("int64",t,[t.length]);async function eW(t,r,s,i,n){let a=await eD.slice;return await a({x:t,s:eG(r),e:eG(s),a:eG(i),t:eG(n??Array(i.length).fill(1))})}function eH(t,r){return t=t.slice(),null===r?t=t.filter(t=>1!==t):"number"==typeof r?1===t[r]&&t.splice(r,1):Array.isArray(r)&&(t=t.filter((t,s)=>1!==t||!r.includes(s))),t}function eK(t,r){return r=eX(r,t.length+1),(t=t.slice()).splice(r,0,1),t}function eX(t,r,s=null,i=!0){if(t<-r||t>=r)if(!i)return t<-r?0:r;else throw Error(`IndexError: index ${t} is out of bounds for dimension${null===s?"":" "+s} with size ${r}`);return t<0&&(t=(t%r+r)%r),t}function eY(t,r=0){r=eX(r,t[0].dims.length);let s=t[0].dims.slice();s[r]=t.reduce((t,s)=>t+s.dims[r],0);let i=s.reduce((t,r)=>t*r,1),n=new t[0].data.constructor(i),a=t[0].type;if(0===r){let r=0;for(let s of t){let t=s.data;n.set(t,r),r+=t.length}}else{let i=0;for(let a=0;a<t.length;++a){let{data:o,dims:l}=t[a];for(let t=0;t<o.length;++t){let a=0;for(let n=l.length-1,o=t,u=1;n>=0;--n){let t=l[n],d=o%t;n===r&&(d+=i),a+=d*u,u*=s[n],o=Math.floor(o/t)}n[a]=o[t]}i+=l[r]}}return new eN(a,n,s)}function eQ(t,r=0){return eY(t.map(t=>t.unsqueeze(r)),r)}function eZ(t,r,s=null,i=!1,n=null){let a=r.data,o=r.dims;s=eX(s,o.length);let l=o.slice();l[s]=1;let u=new a.constructor(a.length/o[s]);null!==n&&u.fill(n);for(let r=0;r<a.length;++r){let i=0;for(let t=o.length-1,n=r,a=1;t>=0;--t){let r=o[t];t!==s&&(i+=n%r*a,a*=l[t]),n=Math.floor(n/r)}u[i]=t(u[i],a[r],r,i)}return i||l.splice(s,1),[r.type,u,l]}function eJ(t,r=null,s=!1){let i=t.dims,n=t.data;if(null===r){let r=n.reduce((t,r)=>t+r,0);return new eN(t.type,[r/n.length],[])}let[a,o,l]=eZ((t,r)=>t+r,t,r=eX(r,i.length),s);if(1!==i[r])for(let t=0;t<o.length;++t)o[t]/=i[r];return new eN(a,o,l)}function e0(t,r,s,i){return new eN(s,new i(t.reduce((t,r)=>t*r,1)).fill(r),t)}function e1(t,r){let s,i;if("number"==typeof r)s="float32",i=Float32Array;else if("bigint"==typeof r)s="int64",i=BigInt64Array;else if("boolean"==typeof r)s="bool",i=Uint8Array;else throw Error(`Unsupported data type: ${typeof r}`);return e0(t,r,s,i)}function e2(t,r){return e1(t.dims,r)}function e3(t){return e0(t,1n,"int64",BigInt64Array)}function e4(t){return e0(t,0n,"int64",BigInt64Array)}class e6{constructor(t=(t,r)=>t>r,r=1/0){this._heap=[],this._comparator=t,this._maxSize=r}get size(){return this._heap.length}isEmpty(){return 0===this.size}peek(){return this._heap[0]}push(...t){return this.extend(t)}extend(t){for(let r of t)if(this.size<this._maxSize)this._heap.push(r),this._siftUp();else{let t=this._smallest();this._comparator(r,this._heap[t])&&(this._heap[t]=r,this._siftUpFrom(t))}return this.size}pop(){let t=this.peek(),r=this.size-1;return r>0&&this._swap(0,r),this._heap.pop(),this._siftDown(),t}replace(t){let r=this.peek();return this._heap[0]=t,this._siftDown(),r}_parent(t){return(t+1>>>1)-1}_left(t){return(t<<1)+1}_right(t){return t+1<<1}_greater(t,r){return this._comparator(this._heap[t],this._heap[r])}_swap(t,r){let s=this._heap[t];this._heap[t]=this._heap[r],this._heap[r]=s}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(t){for(;t>0&&this._greater(t,this._parent(t));)this._swap(t,this._parent(t)),t=this._parent(t)}_siftDown(){let t=0;for(;this._left(t)<this.size&&this._greater(this._left(t),t)||this._right(t)<this.size&&this._greater(this._right(t),t);){let r=this._right(t)<this.size&&this._greater(this._right(t),this._left(t))?this._right(t):this._left(t);this._swap(t,r),t=r}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class e8{constructor(){this.root=e5.default()}extend(t){for(let r of t)this.push(r)}push(t){let r=this.root;for(let s of t){let t=r.children.get(s);void 0===t&&(t=e5.default(),r.children.set(s,t)),r=t}r.isLeaf=!0}*commonPrefixSearch(t){let r=this.root;if(void 0===r)return;let s="";for(let i of t){if(s+=i,void 0===(r=r.children.get(i)))return;r.isLeaf&&(yield s)}}}class e5{constructor(t,r){this.isLeaf=t,this.children=r}static default(){return new e5(!1,new Map)}}class e9{constructor(t,r,s){this.chars=Array.from(t),this.len=this.chars.length,this.bosTokenId=r,this.eosTokenId=s,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);let i=new e7(this.bosTokenId,0,0,0,0),n=new e7(this.eosTokenId,1,this.len,0,0);this.nodes.push(i.clone()),this.nodes.push(n.clone()),this.beginNodes[this.len].push(n),this.endNodes[0].push(i)}insert(t,r,s,i){let n=new e7(i,this.nodes.length,t,r,s);this.beginNodes[t].push(n),this.endNodes[t+r].push(n),this.nodes.push(n)}viterbi(){let t=this.len,r=0;for(;r<=t;){if(0==this.beginNodes[r].length)return[];for(let t of this.beginNodes[r]){t.prev=null;let s=0,i=null;for(let n of this.endNodes[r]){let r=n.backtraceScore+t.score;(null===i||r>s)&&(i=n.clone(),s=r)}if(null===i)return[];t.prev=i,t.backtraceScore=s}++r}let s=[],i=this.beginNodes[t][0].prev;if(null===i)return[];let n=i.clone();for(;null!==n.prev;)s.push(n.clone()),n=n.clone().prev.clone();return s.reverse(),s}piece(t){return this.chars.slice(t.pos,t.pos+t.length).join("")}tokens(){return this.viterbi().map(t=>this.piece(t))}tokenIds(){return this.viterbi().map(t=>t.tokenId)}}class e7{constructor(t,r,s,i,n){this.tokenId=t,this.nodeId=r,this.pos=s,this.length=i,this.score=n,this.prev=null,this.backtraceScore=0}clone(){let t=new e7(this.tokenId,this.nodeId,this.pos,this.length,this.score);return t.prev=this.prev,t.backtraceScore=this.backtraceScore,t}}class te{constructor(t){this.trie=this._buildTrie(t)}_buildTrie(t){let r=Object.create(null);for(let s of t){let t=r;for(let r=0;r<s.length;++r)t=t[s[r]]??=Object.create(null);t.end=s}return r}split(t){let r=[],s=t.length,i=0,n=0;for(;n<s;){let a=this.trie,o=null,l=n;for(;l<s&&(a=a[t[l]]);)a.end&&(o=a.end),++l;o?(n>i&&r.push(t.slice(i,n)),r.push(o),n+=o.length,i=n):++n}return i<s&&r.push(t.slice(i)),r}}class tt{constructor(t){this.capacity=t,this.cache=new Map}get(t){if(!this.cache.has(t))return;let r=this.cache.get(t);return this.cache.delete(t),this.cache.set(t,r),r}put(t,r){this.cache.has(t)&&this.cache.delete(t),this.cache.set(t,r),this.cache.size>this.capacity&&this.cache.delete(this.cache.keys().next().value)}clear(){this.cache.clear()}}var tr=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",NullLiteral:"NullLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndSet:"EndSet",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator",Macro:"Macro",EndMacro:"EndMacro",Break:"Break",Continue:"Continue"}),ts=Object.freeze({set:tr.Set,for:tr.For,in:tr.In,is:tr.Is,if:tr.If,else:tr.Else,endset:tr.EndSet,endif:tr.EndIf,elif:tr.ElseIf,endfor:tr.EndFor,and:tr.And,or:tr.Or,not:tr.Not,"not in":tr.NotIn,macro:tr.Macro,endmacro:tr.EndMacro,break:tr.Break,continue:tr.Continue,true:tr.BooleanLiteral,false:tr.BooleanLiteral,none:tr.NullLiteral,True:tr.BooleanLiteral,False:tr.BooleanLiteral,None:tr.NullLiteral}),ti=class{constructor(t,r){this.value=t,this.type=r}};function tn(t){return/\w/.test(t)}function ta(t){return/[0-9]/.test(t)}var to=[["{%",tr.OpenStatement],["%}",tr.CloseStatement],["{{",tr.OpenExpression],["}}",tr.CloseExpression],["(",tr.OpenParen],[")",tr.CloseParen],["{",tr.OpenCurlyBracket],["}",tr.CloseCurlyBracket],["[",tr.OpenSquareBracket],["]",tr.CloseSquareBracket],[",",tr.Comma],[".",tr.Dot],[":",tr.Colon],["|",tr.Pipe],["<=",tr.ComparisonBinaryOperator],[">=",tr.ComparisonBinaryOperator],["==",tr.ComparisonBinaryOperator],["!=",tr.ComparisonBinaryOperator],["<",tr.ComparisonBinaryOperator],[">",tr.ComparisonBinaryOperator],["+",tr.AdditiveBinaryOperator],["-",tr.AdditiveBinaryOperator],["*",tr.MultiplicativeBinaryOperator],["/",tr.MultiplicativeBinaryOperator],["%",tr.MultiplicativeBinaryOperator],["=",tr.Equals]],tl=new Map([["n","\n"],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]),tu=class{type="Statement"},td=class extends tu{constructor(t){super(),this.body=t}type="Program"},tc=class extends tu{constructor(t,r,s){super(),this.test=t,this.body=r,this.alternate=s}type="If"},tp=class extends tu{constructor(t,r,s,i){super(),this.loopvar=t,this.iterable=r,this.body=s,this.defaultBlock=i}type="For"},th=class extends tu{type="Break"},tf=class extends tu{type="Continue"},tm=class extends tu{constructor(t,r,s){super(),this.assignee=t,this.value=r,this.body=s}type="Set"},t_=class extends tu{constructor(t,r,s){super(),this.name=t,this.args=r,this.body=s}type="Macro"},tg=class extends tu{type="Expression"},ty=class extends tg{constructor(t,r,s){super(),this.object=t,this.property=r,this.computed=s}type="MemberExpression"},tw=class extends tg{constructor(t,r){super(),this.callee=t,this.args=r}type="CallExpression"},tb=class extends tg{constructor(t){super(),this.value=t}type="Identifier"},tx=class extends tg{constructor(t){super(),this.value=t}type="Literal"},tv=class extends tx{type="NumericLiteral"},t$=class extends tx{type="StringLiteral"},tk=class extends tx{type="BooleanLiteral"},tE=class extends tx{type="NullLiteral"},tS=class extends tx{type="ArrayLiteral"},tT=class extends tx{type="TupleLiteral"},tI=class extends tx{type="ObjectLiteral"},tz=class extends tg{constructor(t,r,s){super(),this.operator=t,this.left=r,this.right=s}type="BinaryExpression"},tA=class extends tg{constructor(t,r){super(),this.operand=t,this.filter=r}type="FilterExpression"},tC=class extends tg{constructor(t,r){super(),this.iterable=t,this.test=r}type="SelectExpression"},tM=class extends tg{constructor(t,r,s){super(),this.operand=t,this.negate=r,this.test=s}type="TestExpression"},tO=class extends tg{constructor(t,r){super(),this.operator=t,this.argument=r}type="UnaryExpression"},tB=class extends tg{constructor(t,r,s){super(),this.start=t,this.stop=r,this.step=s}type="SliceExpression"},tR=class extends tg{constructor(t,r){super(),this.key=t,this.value=r}type="KeywordArgumentExpression"};function tP(t,r,s=1){void 0===r&&(r=t,t=0);let i=[];for(let n=t;n<r;n+=s)i.push(n);return i}function tL(t,r,s,i=1){let n=Math.sign(i);n>=0?(r=(r??=0)<0?Math.max(t.length+r,0):Math.min(r,t.length),s=(s??=t.length)<0?Math.max(t.length+s,0):Math.min(s,t.length)):(r=(r??=t.length-1)<0?Math.max(t.length+r,-1):Math.min(r,t.length-1),s=(s??=-1)<-1?Math.max(t.length+s,-1):Math.min(s,t.length-1));let a=[];for(let o=r;n*o<n*s;o+=i)a.push(t[o]);return a}function tD(t){return t.replace(/\b\w/g,t=>t.toUpperCase())}var tU=class extends Error{},tN=class extends Error{},tF=class{type="RuntimeValue";value;builtins=new Map;constructor(t){this.value=t}__bool__(){return new tj(!!this.value)}},tq=class extends tF{type="NumericValue"},tV=class extends tF{type="StringValue";builtins=new Map([["upper",new tX(()=>new tV(this.value.toUpperCase()))],["lower",new tX(()=>new tV(this.value.toLowerCase()))],["strip",new tX(()=>new tV(this.value.trim()))],["title",new tX(()=>new tV(tD(this.value)))],["length",new tq(this.value.length)],["rstrip",new tX(()=>new tV(this.value.trimEnd()))],["lstrip",new tX(()=>new tV(this.value.trimStart()))],["startswith",new tX(t=>{if(0===t.length)throw Error("startswith() requires at least one argument");let r=t[0];if(!(r instanceof tV))throw Error("startswith() argument must be a string");return new tj(this.value.startsWith(r.value))})],["endswith",new tX(t=>{if(0===t.length)throw Error("endswith() requires at least one argument");let r=t[0];if(!(r instanceof tV))throw Error("endswith() argument must be a string");return new tj(this.value.endsWith(r.value))})],["split",new tX(t=>{let r=t[0]??new tY;if(!(r instanceof tV||r instanceof tY))throw Error("sep argument must be a string or null");let s=t[1]??new tq(-1);if(!(s instanceof tq))throw Error("maxsplit argument must be a number");let i=[];if(r instanceof tY){let t=this.value.trimStart();for(let{0:r,index:n}of t.matchAll(/\S+/g)){if(-1!==s.value&&i.length>=s.value&&void 0!==n){i.push(r+t.slice(n+r.length));break}i.push(r)}}else{if(""===r.value)throw Error("empty separator");i=this.value.split(r.value),-1!==s.value&&i.length>s.value&&i.push(i.splice(s.value).join(r.value))}return new tH(i.map(t=>new tV(t)))})]])},tj=class extends tF{type="BooleanValue"},tG=class extends tF{type="ObjectValue";__bool__(){return new tj(this.value.size>0)}builtins=new Map([["get",new tX(([t,r])=>{if(!(t instanceof tV))throw Error(`Object key must be a string: got ${t.type}`);return this.value.get(t.value)??r??new tY})],["items",new tX(()=>new tH(Array.from(this.value.entries()).map(([t,r])=>new tH([new tV(t),r]))))]])},tW=class extends tG{type="KeywordArgumentsValue"},tH=class extends tF{type="ArrayValue";builtins=new Map([["length",new tq(this.value.length)]]);__bool__(){return new tj(this.value.length>0)}},tK=class extends tH{type="TupleValue"},tX=class extends tF{type="FunctionValue"},tY=class extends tF{type="NullValue"},tQ=class extends tF{type="UndefinedValue"},tZ=class{constructor(t){this.parent=t}variables=new Map([["namespace",new tX(t=>{if(0===t.length)return new tG(new Map);if(1!==t.length||!(t[0]instanceof tG))throw Error("`namespace` expects either zero arguments or a single object argument");return t[0]})]]);tests=new Map([["boolean",t=>"BooleanValue"===t.type],["callable",t=>t instanceof tX],["odd",t=>{if("NumericValue"!==t.type)throw Error(`Cannot apply test "odd" to type: ${t.type}`);return t.value%2!=0}],["even",t=>{if("NumericValue"!==t.type)throw Error(`Cannot apply test "even" to type: ${t.type}`);return t.value%2==0}],["false",t=>"BooleanValue"===t.type&&!t.value],["true",t=>"BooleanValue"===t.type&&t.value],["none",t=>"NullValue"===t.type],["string",t=>"StringValue"===t.type],["number",t=>"NumericValue"===t.type],["integer",t=>"NumericValue"===t.type&&Number.isInteger(t.value)],["iterable",t=>"ArrayValue"===t.type||"StringValue"===t.type],["mapping",t=>"ObjectValue"===t.type],["lower",t=>{let r=t.value;return"StringValue"===t.type&&r===r.toLowerCase()}],["upper",t=>{let r=t.value;return"StringValue"===t.type&&r===r.toUpperCase()}],["none",t=>"NullValue"===t.type],["defined",t=>"UndefinedValue"!==t.type],["undefined",t=>"UndefinedValue"===t.type],["equalto",(t,r)=>t.value===r.value],["eq",(t,r)=>t.value===r.value]]);set(t,r){return this.declareVariable(t,function t(r){switch(typeof r){case"number":return new tq(r);case"string":return new tV(r);case"boolean":return new tj(r);case"undefined":return new tQ;case"object":if(null===r)return new tY;if(Array.isArray(r))return new tH(r.map(t));return new tG(new Map(Object.entries(r).map(([r,s])=>[r,t(s)])));case"function":return new tX((s,i)=>t(r(...s.map(t=>t.value))??null));default:throw Error(`Cannot convert to runtime value: ${r}`)}}(r))}declareVariable(t,r){if(this.variables.has(t))throw SyntaxError(`Variable already declared: ${t}`);return this.variables.set(t,r),r}setVariable(t,r){return this.variables.set(t,r),r}resolve(t){if(this.variables.has(t))return this;if(this.parent)return this.parent.resolve(t);throw Error(`Unknown variable: ${t}`)}lookupVariable(t){try{return this.resolve(t).variables.get(t)??new tQ}catch{return new tQ}}},tJ=class{global;constructor(t){this.global=t??new tZ}run(t){return this.evaluate(t,this.global)}evaluateBinaryExpression(t,r){let s=this.evaluate(t.left,r);switch(t.operator.value){case"and":return s.__bool__().value?this.evaluate(t.right,r):s;case"or":return s.__bool__().value?s:this.evaluate(t.right,r)}let i=this.evaluate(t.right,r);switch(t.operator.value){case"==":return new tj(s.value==i.value);case"!=":return new tj(s.value!=i.value)}if(s instanceof tQ||i instanceof tQ)throw Error("Cannot perform operation on undefined values");if(s instanceof tY||i instanceof tY)throw Error("Cannot perform operation on null values");if(s instanceof tq&&i instanceof tq)switch(t.operator.value){case"+":return new tq(s.value+i.value);case"-":return new tq(s.value-i.value);case"*":return new tq(s.value*i.value);case"/":return new tq(s.value/i.value);case"%":return new tq(s.value%i.value);case"<":return new tj(s.value<i.value);case">":return new tj(s.value>i.value);case">=":return new tj(s.value>=i.value);case"<=":return new tj(s.value<=i.value)}else if(s instanceof tH&&i instanceof tH){if("+"===t.operator.value)return new tH(s.value.concat(i.value))}else if(i instanceof tH){let r=void 0!==i.value.find(t=>t.value===s.value);switch(t.operator.value){case"in":return new tj(r);case"not in":return new tj(!r)}}if((s instanceof tV||i instanceof tV)&&"+"===t.operator.value)return new tV(s.value.toString()+i.value.toString());if(s instanceof tV&&i instanceof tV)switch(t.operator.value){case"in":return new tj(i.value.includes(s.value));case"not in":return new tj(!i.value.includes(s.value))}if(s instanceof tV&&i instanceof tG)switch(t.operator.value){case"in":return new tj(i.value.has(s.value));case"not in":return new tj(!i.value.has(s.value))}throw SyntaxError(`Unknown operator "${t.operator.value}" between ${s.type} and ${i.type}`)}evaluateArguments(t,r){let s=[],i=new Map;for(let n of t)if("KeywordArgumentExpression"===n.type)i.set(n.key.value,this.evaluate(n.value,r));else{if(i.size>0)throw Error("Positional arguments must come before keyword arguments");s.push(this.evaluate(n,r))}return[s,i]}evaluateFilterExpression(t,r){let s=this.evaluate(t.operand,r);if("Identifier"===t.filter.type){let r=t.filter;if("tojson"===r.value)return new tV(t0(s));if(s instanceof tH)switch(r.value){case"list":return s;case"first":return s.value[0];case"last":return s.value[s.value.length-1];case"length":return new tq(s.value.length);case"reverse":return new tH(s.value.reverse());case"sort":return new tH(s.value.sort((t,r)=>{if(t.type!==r.type)throw Error(`Cannot compare different types: ${t.type} and ${r.type}`);switch(t.type){case"NumericValue":return t.value-r.value;case"StringValue":return t.value.localeCompare(r.value);default:throw Error(`Cannot compare type: ${t.type}`)}}));case"join":return new tV(s.value.map(t=>t.value).join(""));case"string":return new tV(t0(s));default:throw Error(`Unknown ArrayValue filter: ${r.value}`)}if(s instanceof tV)switch(r.value){case"length":return new tq(s.value.length);case"upper":return new tV(s.value.toUpperCase());case"lower":return new tV(s.value.toLowerCase());case"title":return new tV(tD(s.value));case"capitalize":return new tV(s.value.charAt(0).toUpperCase()+s.value.slice(1));case"trim":return new tV(s.value.trim());case"indent":return new tV(s.value.split("\n").map((t,r)=>0===r||0===t.length?t:"    "+t).join("\n"));case"join":case"string":return s;default:throw Error(`Unknown StringValue filter: ${r.value}`)}if(s instanceof tq)if("abs"===r.value)return new tq(Math.abs(s.value));else throw Error(`Unknown NumericValue filter: ${r.value}`);else if(s instanceof tG)switch(r.value){case"items":return new tH(Array.from(s.value.entries()).map(([t,r])=>new tH([new tV(t),r])));case"length":return new tq(s.value.size);default:throw Error(`Unknown ObjectValue filter: ${r.value}`)}throw Error(`Cannot apply filter "${r.value}" to type: ${s.type}`)}if("CallExpression"===t.filter.type){let i=t.filter;if("Identifier"!==i.callee.type)throw Error(`Unknown filter: ${i.callee.type}`);let n=i.callee.value;if("tojson"===n){let[,t]=this.evaluateArguments(i.args,r),n=t.get("indent")??new tY;if(!(n instanceof tq||n instanceof tY))throw Error("If set, indent must be a number");return new tV(t0(s,n.value))}if("join"===n){let t;if(s instanceof tV)t=Array.from(s.value);else if(s instanceof tH)t=s.value.map(t=>t.value);else throw Error(`Cannot apply filter "${n}" to type: ${s.type}`);let[a,o]=this.evaluateArguments(i.args,r),l=a.at(0)??o.get("separator")??new tV("");if(!(l instanceof tV))throw Error("separator must be a string");return new tV(t.join(l.value))}if(s instanceof tH){switch(n){case"selectattr":case"rejectattr":{let t,a="selectattr"===n;if(s.value.some(t=>!(t instanceof tG)))throw Error(`\`${n}\` can only be applied to array of objects`);if(i.args.some(t=>"StringLiteral"!==t.type))throw Error(`arguments of \`${n}\` must be strings`);let[o,l,u]=i.args.map(t=>this.evaluate(t,r));if(l){let s=r.tests.get(l.value);if(!s)throw Error(`Unknown test: ${l.value}`);t=s}else t=(...t)=>t[0].__bool__().value;return new tH(s.value.filter(r=>{let s=r.value.get(o.value),i=!!s&&t(s,u);return a?i:!i}))}case"map":{let[,t]=this.evaluateArguments(i.args,r);if(t.has("attribute")){let r=t.get("attribute");if(!(r instanceof tV))throw Error("attribute must be a string");let i=t.get("default");return new tH(s.value.map(t=>{if(!(t instanceof tG))throw Error("items in map must be an object");return t.value.get(r.value)??i??new tQ}))}throw Error("`map` expressions without `attribute` set are not currently supported.")}}throw Error(`Unknown ArrayValue filter: ${n}`)}if(s instanceof tV){if("indent"===n){let[t,n]=this.evaluateArguments(i.args,r),a=t.at(0)??n.get("width")??new tq(4);if(!(a instanceof tq))throw Error("width must be a number");let o=t.at(1)??n.get("first")??new tj(!1),l=t.at(2)??n.get("blank")??new tj(!1),u=s.value.split("\n"),d=" ".repeat(a.value);return new tV(u.map((t,r)=>(o.value||0!==r)&&(l.value||0!==t.length)?d+t:t).join("\n"))}throw Error(`Unknown StringValue filter: ${n}`)}throw Error(`Cannot apply filter "${n}" to type: ${s.type}`)}throw Error(`Unknown filter: ${t.filter.type}`)}evaluateTestExpression(t,r){let s=this.evaluate(t.operand,r),i=r.tests.get(t.test.value);if(!i)throw Error(`Unknown test: ${t.test.value}`);let n=i(s);return new tj(t.negate?!n:n)}evaluateUnaryExpression(t,r){let s=this.evaluate(t.argument,r);if("not"===t.operator.value)return new tj(!s.value);throw SyntaxError(`Unknown operator: ${t.operator.value}`)}evalProgram(t,r){return this.evaluateBlock(t.body,r)}evaluateBlock(t,r){let s="";for(let i of t){let t=this.evaluate(i,r);"NullValue"!==t.type&&"UndefinedValue"!==t.type&&(s+=t.value)}return new tV(s)}evaluateIdentifier(t,r){return r.lookupVariable(t.value)}evaluateCallExpression(t,r){let[s,i]=this.evaluateArguments(t.args,r);i.size>0&&s.push(new tW(i));let n=this.evaluate(t.callee,r);if("FunctionValue"!==n.type)throw Error(`Cannot call something that is not a function: got ${n.type}`);return n.value(s,r)}evaluateSliceExpression(t,r,s){if(!(t instanceof tH||t instanceof tV))throw Error("Slice object must be an array or string");let i=this.evaluate(r.start,s),n=this.evaluate(r.stop,s),a=this.evaluate(r.step,s);if(!(i instanceof tq||i instanceof tQ))throw Error("Slice start must be numeric or undefined");if(!(n instanceof tq||n instanceof tQ))throw Error("Slice stop must be numeric or undefined");if(!(a instanceof tq||a instanceof tQ))throw Error("Slice step must be numeric or undefined");return t instanceof tH?new tH(tL(t.value,i.value,n.value,a.value)):new tV(tL(Array.from(t.value),i.value,n.value,a.value).join(""))}evaluateMemberExpression(t,r){let s,i,n=this.evaluate(t.object,r);if(t.computed)if("SliceExpression"===t.property.type)return this.evaluateSliceExpression(n,t.property,r);else s=this.evaluate(t.property,r);else s=new tV(t.property.value);if(n instanceof tG){if(!(s instanceof tV))throw Error(`Cannot access property with non-string: got ${s.type}`);i=n.value.get(s.value)??n.builtins.get(s.value)}else if(n instanceof tH||n instanceof tV)if(s instanceof tq)i=n.value.at(s.value),n instanceof tV&&(i=new tV(n.value.at(s.value)));else if(s instanceof tV)i=n.builtins.get(s.value);else throw Error(`Cannot access property with non-string/non-number: got ${s.type}`);else{if(!(s instanceof tV))throw Error(`Cannot access property with non-string: got ${s.type}`);i=n.builtins.get(s.value)}return i instanceof tF?i:new tQ}evaluateSet(t,r){let s=t.value?this.evaluate(t.value,r):this.evaluateBlock(t.body,r);if("Identifier"===t.assignee.type){let i=t.assignee.value;r.setVariable(i,s)}else if("MemberExpression"===t.assignee.type){let i=t.assignee,n=this.evaluate(i.object,r);if(!(n instanceof tG))throw Error("Cannot assign to member of non-object");if("Identifier"!==i.property.type)throw Error("Cannot assign to member with non-identifier property");n.value.set(i.property.value,s)}else throw Error(`Invalid LHS inside assignment expression: ${JSON.stringify(t.assignee)}`);return new tY}evaluateIf(t,r){let s=this.evaluate(t.test,r);return this.evaluateBlock(s.__bool__().value?t.body:t.alternate,r)}evaluateFor(t,r){let s,i,n=new tZ(r);if("SelectExpression"===t.iterable.type){let r=t.iterable;i=this.evaluate(r.iterable,n),s=r.test}else i=this.evaluate(t.iterable,n);if(!(i instanceof tH))throw Error(`Expected iterable type in for loop: got ${i.type}`);let a=[],o=[];for(let r=0;r<i.value.length;++r){let l,u=new tZ(n),d=i.value[r];if("Identifier"===t.loopvar.type)l=r=>r.setVariable(t.loopvar.value,d);else if("TupleLiteral"===t.loopvar.type){let r=t.loopvar;if("ArrayValue"!==d.type)throw Error(`Cannot unpack non-iterable type: ${d.type}`);if(r.value.length!==d.value.length)throw Error(`Too ${r.value.length>d.value.length?"few":"many"} items to unpack`);l=t=>{for(let s=0;s<r.value.length;++s){if("Identifier"!==r.value[s].type)throw Error(`Cannot unpack non-identifier type: ${r.value[s].type}`);t.setVariable(r.value[s].value,d.value[s])}}}else throw Error(`Invalid loop variable(s): ${t.loopvar.type}`);(!s||(l(u),this.evaluate(s,u).__bool__().value))&&(a.push(d),o.push(l))}let l="",u=!0;for(let r=0;r<a.length;++r){let s=new Map([["index",new tq(r+1)],["index0",new tq(r)],["revindex",new tq(a.length-r)],["revindex0",new tq(a.length-r-1)],["first",new tj(0===r)],["last",new tj(r===a.length-1)],["length",new tq(a.length)],["previtem",r>0?a[r-1]:new tQ],["nextitem",r<a.length-1?a[r+1]:new tQ]]);n.setVariable("loop",new tG(s)),o[r](n);try{let r=this.evaluateBlock(t.body,n);l+=r.value}catch(t){if(t instanceof tN)continue;if(t instanceof tU)break;throw t}u=!1}return u&&(l+=this.evaluateBlock(t.defaultBlock,n).value),new tV(l)}evaluateMacro(t,r){return r.setVariable(t.name.value,new tX((r,s)=>{let i,n=new tZ(s);r=r.slice(),r.at(-1)?.type==="KeywordArgumentsValue"&&(i=r.pop());for(let s=0;s<t.args.length;++s){let a=t.args[s],o=r[s];if("Identifier"===a.type){if(!o)throw Error(`Missing positional argument: ${a.value}`);n.setVariable(a.value,o)}else if("KeywordArgumentExpression"===a.type){let t=o??i?.value.get(a.key.value)??this.evaluate(a.value,n);n.setVariable(a.key.value,t)}else throw Error(`Unknown argument type: ${a.type}`)}return this.evaluateBlock(t.body,n)})),new tY}evaluate(t,r){if(void 0===t)return new tQ;switch(t.type){case"Program":return this.evalProgram(t,r);case"Set":return this.evaluateSet(t,r);case"If":return this.evaluateIf(t,r);case"For":return this.evaluateFor(t,r);case"Macro":return this.evaluateMacro(t,r);case"Break":throw new tU;case"Continue":throw new tN;case"NumericLiteral":return new tq(Number(t.value));case"StringLiteral":return new tV(t.value);case"BooleanLiteral":return new tj(t.value);case"NullLiteral":return new tY(t.value);case"ArrayLiteral":return new tH(t.value.map(t=>this.evaluate(t,r)));case"TupleLiteral":return new tK(t.value.map(t=>this.evaluate(t,r)));case"ObjectLiteral":{let s=new Map;for(let[i,n]of t.value){let t=this.evaluate(i,r);if(!(t instanceof tV))throw Error(`Object keys must be strings: got ${t.type}`);s.set(t.value,this.evaluate(n,r))}return new tG(s)}case"Identifier":return this.evaluateIdentifier(t,r);case"CallExpression":return this.evaluateCallExpression(t,r);case"MemberExpression":return this.evaluateMemberExpression(t,r);case"UnaryExpression":return this.evaluateUnaryExpression(t,r);case"BinaryExpression":return this.evaluateBinaryExpression(t,r);case"FilterExpression":return this.evaluateFilterExpression(t,r);case"TestExpression":return this.evaluateTestExpression(t,r);default:throw SyntaxError(`Unknown node type: ${t.type}`)}}};function t0(t,r,s){let i=s??0;switch(t.type){case"NullValue":case"UndefinedValue":return"null";case"NumericValue":case"StringValue":case"BooleanValue":return JSON.stringify(t.value);case"ArrayValue":case"ObjectValue":{let s=r?" ".repeat(r):"",n="\n"+s.repeat(i),a=n+s;if("ArrayValue"===t.type){let s=t.value.map(t=>t0(t,r,i+1));return r?`[${a}${s.join(`,${a}`)}${n}]`:`[${s.join(", ")}]`}{let s=Array.from(t.value.entries()).map(([t,s])=>{let n=`"${t}": ${t0(s,r,i+1)}`;return r?`${a}${n}`:n});return r?`{${s.join(",")}${n}}`:`{${s.join(", ")}}`}}default:throw Error(`Cannot convert to JSON: ${t.type}`)}}var t1={MultiplicativeBinaryOperator:2,AdditiveBinaryOperator:1,ComparisonBinaryOperator:0};function t2(...t){return"{%- "+t.join(" ")+" -%}"}function t3(t,r=-1){switch(t.type){case"Identifier":return t.value;case"NullLiteral":return"none";case"NumericLiteral":case"BooleanLiteral":return`${t.value}`;case"StringLiteral":return JSON.stringify(t.value);case"BinaryExpression":{let s=t1[t.operator.type]??0,i=t3(t.left,s),n=t3(t.right,s+1),a=`${i} ${t.operator.value} ${n}`;return s<r?`(${a})`:a}case"UnaryExpression":return t.operator.value+("not"===t.operator.value?" ":"")+t3(t.argument,1/0);case"LogicalNegationExpression":return`not ${t3(t.argument,1/0)}`;case"CallExpression":{let r=t.args.map(t=>t3(t,-1)).join(", ");return`${t3(t.callee,-1)}(${r})`}case"MemberExpression":{let r=t3(t.object,-1);"Identifier"!==t.object.type&&(r=`(${r})`);let s=t3(t.property,-1);return t.computed||"Identifier"===t.property.type||(s=`(${s})`),t.computed?`${r}[${s}]`:`${r}.${s}`}case"FilterExpression":{let r=t3(t.operand,1/0);if("CallExpression"===t.filter.type)return`${r} | ${t3(t.filter,-1)}`;return`${r} | ${t.filter.value}`}case"SelectExpression":return`${t3(t.iterable,-1)} | select(${t3(t.test,-1)})`;case"TestExpression":return`${t3(t.operand,-1)} is${t.negate?" not":""} ${t.test.value}`;case"ArrayLiteral":case"TupleLiteral":{let r=t.value.map(t=>t3(t,-1)),s="ArrayLiteral"===t.type?"[]":"()";return`${s[0]}${r.join(", ")}${s[1]}`}case"ObjectLiteral":{let r=Array.from(t.value.entries()).map(([t,r])=>`${t3(t,-1)}: ${t3(r,-1)}`);return`{ ${r.join(", ")} }`}case"SliceExpression":{let r=t.start?t3(t.start,-1):"",s=t.stop?t3(t.stop,-1):"",i=t.step?`:${t3(t.step,-1)}`:"";return`${r}:${s}${i}`}case"KeywordArgumentExpression":return`${t.key.value}=${t3(t.value,-1)}`;case"If":{let r=t3(t.test,-1),s=t3(t.body[0],0),i=t3(t.alternate[0],-1);return`${s} if ${r} else ${i}`}default:throw Error(`Unknown expression type: ${t.type}`)}}var t4=class{parsed;constructor(t){let r=function(t,r={}){let s=[],i=function(t,r={}){return t.endsWith("\n")&&(t=t.slice(0,-1)),t=t.replace(/{#.*?#}/gs,"{##}"),r.lstrip_blocks&&(t=t.replace(/^[ \t]*({[#%])/gm,"$1")),r.trim_blocks&&(t=t.replace(/([#%]})\n/g,"$1")),t.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}(t,r),n=0,a=t=>{let r="";for(;t(i[n]);){if("\\"===i[n]){if(++n>=i.length)throw SyntaxError("Unexpected end of input");let t=i[n++],s=tl.get(t);if(void 0===s)throw SyntaxError(`Unexpected escaped character: ${t}`);r+=s;continue}if(r+=i[n++],n>=i.length)throw SyntaxError("Unexpected end of input")}return r};e:for(;n<i.length;){let t=s.at(-1)?.type;if(void 0===t||t===tr.CloseStatement||t===tr.CloseExpression){let t="";for(;n<i.length&&("{"!==i[n]||"%"!==i[n+1]&&"{"!==i[n+1]);)t+=i[n++];if(t.length>0){s.push(new ti(t,tr.Text));continue}}a(t=>/\s/.test(t));let r=i[n];if("-"===r||"+"===r){let t=s.at(-1)?.type;if(t===tr.Text||void 0===t)throw SyntaxError(`Unexpected character: ${r}`);switch(t){case tr.Identifier:case tr.NumericLiteral:case tr.BooleanLiteral:case tr.NullLiteral:case tr.StringLiteral:case tr.CloseParen:case tr.CloseSquareBracket:break;default:{++n;let t=a(ta);s.push(new ti(`${r}${t}`,t.length>0?tr.NumericLiteral:tr.UnaryOperator));continue}}}for(let[t,r]of to)if(i.slice(n,n+t.length)===t){s.push(new ti(t,r)),n+=t.length;continue e}if("'"===r||'"'===r){++n;let t=a(t=>t!==r);s.push(new ti(t,tr.StringLiteral)),++n;continue}if(ta(r)){let t=a(ta);s.push(new ti(t,tr.NumericLiteral));continue}if(tn(r)){let t=a(tn),r=Object.hasOwn(ts,t)?ts[t]:tr.Identifier;r===tr.In&&s.at(-1)?.type===tr.Not?(s.pop(),s.push(new ti("not in",tr.NotIn))):s.push(new ti(t,r));continue}throw SyntaxError(`Unexpected character: ${r}`)}return s}(t,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=function(t){let r=new td([]),s=0;function i(r,i){let n=t[s++];if(!n||n.type!==r)throw Error(`Parser Error: ${i}. ${n.type} !== ${r}.`);return n}function n(...r){return s+r.length<=t.length&&r.some((r,i)=>r!==t[s+i].type)}function a(...r){return s+r.length<=t.length&&r.every((r,i)=>r===t[s+i].type)}function o(t=!1){let r=t?y:l,i=[r()],n=a(tr.Comma);for(;n&&(++s,i.push(r()),a(tr.Comma)););return n?new tT(i):i[0]}function l(){let t=u();if(a(tr.If)){++s;let r=u();return a(tr.Else)?(++s,new tc(r,[t],[u()])):new tC(t,r)}return t}function u(){let r=d();for(;a(tr.Or);){let i=t[s];++s,r=new tz(i,r,d())}return r}function d(){let r=c();for(;a(tr.And);){let i=t[s];++s,r=new tz(i,r,c())}return r}function c(){let r;for(;a(tr.Not);){let i=t[s];++s,r=new tO(i,c())}return r??function(){let r=p();for(;a(tr.ComparisonBinaryOperator)||a(tr.In)||a(tr.NotIn);){let i=t[s];++s,r=new tz(i,r,p())}return r}()}function p(){let r=_();for(;a(tr.AdditiveBinaryOperator);){let i=t[s];++s,r=new tz(i,r,_())}return r}function h(t){let r=new tw(t,f());return r=m(r),a(tr.OpenParen)&&(r=h(r)),r}function f(){i(tr.OpenParen,"Expected opening parenthesis for arguments list");let t=function(){let t=[];for(;!a(tr.CloseParen);){let r=l();if(a(tr.Equals)){if(++s,!(r instanceof tb))throw SyntaxError("Expected identifier for keyword argument");r=new tR(r,l())}t.push(r),a(tr.Comma)&&++s}return t}();return i(tr.CloseParen,"Expected closing parenthesis for arguments list"),t}function m(r){for(;a(tr.Dot)||a(tr.OpenSquareBracket);){let n,o=t[s];++s;let u=o.type!==tr.Dot;if(u)n=function(){let t=[],r=!1;for(;!a(tr.CloseSquareBracket);)a(tr.Colon)?(t.push(void 0),++s,r=!0):(t.push(l()),a(tr.Colon)&&(++s,r=!0));if(0===t.length)throw SyntaxError("Expected at least one argument for member/slice expression");if(r){if(t.length>3)throw SyntaxError("Expected 0-3 arguments for slice expression");return new tB(...t)}return t[0]}(),i(tr.CloseSquareBracket,"Expected closing square bracket");else if("Identifier"!==(n=y()).type)throw SyntaxError("Expected identifier following dot operator");r=new ty(r,n,u)}return r}function _(){let r=g();for(;a(tr.MultiplicativeBinaryOperator);){let i=t[s];++s,r=new tz(i,r,g())}return r}function g(){let t=function(){let t=function(){let t=m(y());return a(tr.OpenParen)?h(t):t}();for(;a(tr.Pipe);){++s;let r=y();if(!(r instanceof tb))throw SyntaxError("Expected identifier for the filter");a(tr.OpenParen)&&(r=h(r)),t=new tA(t,r)}return t}();for(;a(tr.Is);){++s;let r=a(tr.Not);r&&++s;let i=y();if(i instanceof tk?i=new tb(i.value.toString()):i instanceof tE&&(i=new tb("none")),!(i instanceof tb))throw SyntaxError("Expected identifier for the test");t=new tM(t,r,i)}return t}function y(){let r=t[s];switch(r.type){case tr.NumericLiteral:return++s,new tv(Number(r.value));case tr.StringLiteral:return++s,new t$(r.value);case tr.BooleanLiteral:return++s,new tk("true"===r.value.toLowerCase());case tr.NullLiteral:return++s,new tE(null);case tr.Identifier:return++s,new tb(r.value);case tr.OpenParen:{++s;let r=o();if(t[s].type!==tr.CloseParen)throw SyntaxError(`Expected closing parenthesis, got ${t[s].type} instead`);return++s,r}case tr.OpenSquareBracket:{++s;let t=[];for(;!a(tr.CloseSquareBracket);)t.push(l()),a(tr.Comma)&&++s;return++s,new tS(t)}case tr.OpenCurlyBracket:{++s;let t=new Map;for(;!a(tr.CloseCurlyBracket);){let r=l();i(tr.Colon,"Expected colon between key and value in object literal");let n=l();t.set(r,n),a(tr.Comma)&&++s}return++s,new tI(t)}default:throw SyntaxError(`Unexpected token: ${r.type}`)}}for(;s<t.length;)r.body.push(function r(){switch(t[s].type){case tr.Text:return new t$(i(tr.Text,"Expected text token").value);case tr.OpenStatement:let u;switch(i(tr.OpenStatement,"Expected opening statement token"),t[s].type){case tr.Set:++s,u=function(){let n=l();if(a(tr.Equals))return++s,new tm(n,l(),[]);{let a=[];for(i(tr.CloseStatement,"Expected %} token");t[s]?.type!==tr.OpenStatement||t[s+1]?.type!==tr.EndSet;){let t=r();a.push(t)}return i(tr.OpenStatement,"Expected {% token"),i(tr.EndSet,"Expected endset token"),new tm(n,null,a)}}(),i(tr.CloseStatement,"Expected closing statement token");break;case tr.If:++s,u=function n(){let o=l();i(tr.CloseStatement,"Expected closing statement token");let u=[],d=[];for(;t[s]?.type!==tr.OpenStatement||t[s+1]?.type!==tr.ElseIf&&t[s+1]?.type!==tr.Else&&t[s+1]?.type!==tr.EndIf;)u.push(r());if(t[s]?.type===tr.OpenStatement&&t[s+1]?.type!==tr.EndIf)if(++s,a(tr.ElseIf))i(tr.ElseIf,"Expected elseif token"),d.push(n());else for(i(tr.Else,"Expected else token"),i(tr.CloseStatement,"Expected closing statement token");t[s]?.type!==tr.OpenStatement||t[s+1]?.type!==tr.EndIf;)d.push(r());return new tc(o,u,d)}(),i(tr.OpenStatement,"Expected {% token"),i(tr.EndIf,"Expected endif token"),i(tr.CloseStatement,"Expected %} token");break;case tr.Macro:++s,u=function(){let t=y();if("Identifier"!==t.type)throw SyntaxError("Expected identifier following macro statement");let s=f();i(tr.CloseStatement,"Expected closing statement token");let a=[];for(;n(tr.OpenStatement,tr.EndMacro);)a.push(r());return new t_(t,s,a)}(),i(tr.OpenStatement,"Expected {% token"),i(tr.EndMacro,"Expected endmacro token"),i(tr.CloseStatement,"Expected %} token");break;case tr.For:++s,u=function(){let t=o(!0);if(!(t instanceof tb||t instanceof tT))throw SyntaxError(`Expected identifier/tuple for the loop variable, got ${t.type} instead`);i(tr.In,"Expected `in` keyword following loop variable");let u=l();i(tr.CloseStatement,"Expected closing statement token");let d=[];for(;n(tr.OpenStatement,tr.EndFor)&&n(tr.OpenStatement,tr.Else);)d.push(r());let c=[];if(a(tr.OpenStatement,tr.Else))for(++s,++s,i(tr.CloseStatement,"Expected closing statement token");n(tr.OpenStatement,tr.EndFor);)c.push(r());return new tp(t,u,d,c)}(),i(tr.OpenStatement,"Expected {% token"),i(tr.EndFor,"Expected endfor token"),i(tr.CloseStatement,"Expected %} token");break;case tr.Break:++s,i(tr.CloseStatement,"Expected closing statement token"),u=new th;break;case tr.Continue:++s,i(tr.CloseStatement,"Expected closing statement token"),u=new tf;break;default:throw SyntaxError(`Unknown statement type: ${t[s].type}`)}return u;case tr.OpenExpression:i(tr.OpenExpression,"Expected opening expression token");let d=l();return i(tr.CloseExpression,"Expected closing expression token"),d;default:throw SyntaxError(`Unexpected token type: ${t[s].type}`)}}());return r}(r)}render(t){let r=new tZ;if(r.set("false",!1),r.set("true",!0),r.set("raise_exception",t=>{throw Error(t)}),r.set("range",tP),t)for(let[s,i]of Object.entries(t))r.set(s,i);return new tJ(r).run(this.parsed).value}format(t){return function(t,r="	"){let s="number"==typeof r?" ".repeat(r):r;return(function t(r,s,i){return r.map(r=>(function(r,s,i){let n=i.repeat(s);switch(r.type){case"Program":return t(r.body,s,i);case"If":return function(r,s,i){let n=i.repeat(s),a=[],o=r;for(;o;)if(a.push({test:o.test,body:o.body}),1===o.alternate.length&&"If"===o.alternate[0].type)o=o.alternate[0];else break;let l=n+t2("if",t3(a[0].test))+"\n"+t(a[0].body,s+1,i);for(let r=1;r<a.length;r++)l+="\n"+n+t2("elif",t3(a[r].test))+"\n"+t(a[r].body,s+1,i);return o&&o.alternate.length>0&&(l+="\n"+n+t2("else")+"\n"+t(o.alternate,s+1,i)),l+="\n"+n+t2("endif")}(r,s,i);case"For":var a=r,o=s,l=i;let u=l.repeat(o),d="";if("SelectExpression"===a.iterable.type){let t=a.iterable;d=`${t3(t.iterable)} if ${t3(t.test)}`}else d=t3(a.iterable);let c=u+t2("for",t3(a.loopvar),"in",d)+"\n"+t(a.body,o+1,l);return a.defaultBlock.length>0&&(c+="\n"+u+t2("else")+"\n"+t(a.defaultBlock,o+1,l)),c+="\n"+u+t2("endfor");case"Set":var p=r,h=s,f=i;let m=f.repeat(h),_=t3(p.assignee),g=p.value?t3(p.value):"",y=m+t2("set",`${_}${p.value?" = "+g:""}`);return 0===p.body.length?y:y+"\n"+t(p.body,h+1,f)+"\n"+m+t2("endset");case"Macro":var w=r,b=s,x=i;let v=x.repeat(b),$=w.args.map(t3).join(", ");return v+t2("macro",`${w.name.value}(${$})`)+"\n"+t(w.body,b+1,x)+"\n"+v+t2("endmacro");case"Break":return n+t2("break");case"Continue":return n+t2("continue");default:return n+"{{- "+t3(r)+" -}}"}})(r,s,i)).join("\n")})(t.body,0,s).replace(/\n$/,"")}(this.parsed,t?.indent||"	")}};const t6=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],t8=new Map(t6),t5=new Map([...t6.map(([t,r])=>[r,t]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);async function t9(t,r){let s=await Promise.all([ep(t,"tokenizer.json",!0,r),ep(t,"tokenizer_config.json",!0,r)]);return null!==r.legacy&&(s[1].legacy=r.legacy),s}function t7(t,r=!0){if(void 0!==t.Regex){let r=t.Regex.replace(/\\([#&~])/g,"$1");for(let[t,s]of ro)r=r.replaceAll(t,s);return RegExp(r,"gu")}if(void 0===t.String)return console.warn("Unknown pattern type:",t),null;{let s=t.String.replace(/[.*+?^${}()|[\]\\]/g,"\\$&");return RegExp(r?s:`(${s})`,"gu")}}function re(t){return new Map(Object.entries(t))}function rt(t){let r=t.dims;switch(r.length){case 1:return t.tolist();case 2:if(1!==r[0])throw Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return t.tolist()[0];default:throw Error(`Expected tensor to have 1-2 dimensions, got ${r.length}.`)}}function rr(t){return t.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function rs(t){return t.replace(/\p{M}/gu,"")}const ri="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",rn=RegExp(`^[${ri}]+$`,"gu"),ra=".,!?…。，、।۔،",ro=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${ra}])]+`,` ?[^\\s${ra}]+`]]);class rl{constructor(t){this.content=t.content,this.id=t.id,this.single_word=t.single_word??!1,this.lstrip=t.lstrip??!1,this.rstrip=t.rstrip??!1,this.special=t.special??!1,this.normalized=t.normalized??null}}class ru extends Y{constructor(t){super(),this.config=t,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(t,...r){switch(t.type){case"WordPiece":return new rd(t);case"Unigram":return new rc(t,...r);case"BPE":return new rf(t);default:if(t.vocab)if(Array.isArray(t.vocab))return new rc(t,...r);else if(!(Object.hasOwn(t,"continuing_subword_prefix")&&Object.hasOwn(t,"unk_token")))return new rm(t,...r);else if(Object.hasOwn(t,"merges"))return new rf(t);else return new rd(t);throw Error(`Unknown TokenizerModel type: ${t.type}`)}}_call(t){return t=this.encode(t),this.fuse_unk&&(t=function(t,r,s){let i=[],n=0;for(;n<t.length;){if(i.push(t[n]),(r.get(t[n])??s)!==s){++n;continue}for(;++n<t.length&&(r.get(t[n])??s)===s;)r.get(i.at(-1))!==s&&(i[i.length-1]+=t[n])}return i}(t,this.tokens_to_ids,this.unk_token_id)),t}encode(t){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(t){return t.map(t=>this.tokens_to_ids.get(t)??this.unk_token_id)}convert_ids_to_tokens(t){return t.map(t=>this.vocab[t]??this.unk_token)}}class rd extends ru{constructor(t){for(let[r,s]of(super(t),this.tokens_to_ids=re(t.vocab),this.unk_token_id=this.tokens_to_ids.get(t.unk_token),this.unk_token=t.unk_token,this.max_input_chars_per_word=t.max_input_chars_per_word??100,this.vocab=Array(this.tokens_to_ids.size),this.tokens_to_ids))this.vocab[s]=r}encode(t){let r=[];for(let s of t){let t=[...s];if(t.length>this.max_input_chars_per_word){r.push(this.unk_token);continue}let i=!1,n=0,a=[];for(;n<t.length;){let r=t.length,s=null;for(;n<r;){let i=t.slice(n,r).join("");if(n>0&&(i=this.config.continuing_subword_prefix+i),this.tokens_to_ids.has(i)){s=i;break}--r}if(null===s){i=!0;break}a.push(s),n=r}i?r.push(this.unk_token):r.push(...a)}return r}}class rc extends ru{constructor(t,r){super(t);let s=t.vocab.length;this.vocab=Array(s),this.scores=Array(s);for(let r=0;r<s;++r)[this.vocab[r],this.scores[r]]=t.vocab[r];this.unk_token_id=t.unk_id,this.unk_token=this.vocab[t.unk_id],this.tokens_to_ids=new Map(this.vocab.map((t,r)=>[t,r])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=r.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=e_(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new e8,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(t){let r=t.chars,s=0;for(;s<r.length;){let i=!1,n=[],a=r.slice(s).join("");for(let r of this.trie.commonPrefixSearch(a)){n.push(r);let a=this.tokens_to_ids.get(r),o=this.scores[a],l=function(t){let r=0;for(let s of t)++r;return r}(r);t.insert(s,l,o,a),i||1!==l||(i=!0)}i||t.insert(s,1,this.unk_score,this.unk_token_id),s+=1}}tokenize(t){let r=new e9(t,this.bos_token_id,this.eos_token_id);return this.populateNodes(r),r.tokens()}encode(t){let r=[];for(let s of t){let t=this.tokenize(s);r.push(...t)}return r}}const rp=(()=>{let t=[...Array.from({length:94},(t,r)=>r+33),...Array.from({length:12},(t,r)=>r+161),...Array.from({length:82},(t,r)=>r+174)],r=t.slice(),s=0;for(let i=0;i<256;++i)t.includes(i)||(t.push(i),r.push(256+s),s+=1);let i=r.map(t=>String.fromCharCode(t));return Object.fromEntries(t.map((t,r)=>[t,i[r]]))})(),rh=Object.fromEntries(Object.entries(rp).map(([t,r])=>[r,t]));class rf extends ru{constructor(t){for(let[r,s]of(super(t),this.tokens_to_ids=re(t.vocab),this.unk_token_id=this.tokens_to_ids.get(t.unk_token),this.unk_token=t.unk_token,this.vocab=Array(this.tokens_to_ids.size),this.tokens_to_ids))this.vocab[s]=r;let r=Array.isArray(t.merges[0]);this.merges=r?t.merges:t.merges.map(t=>t.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((t,r)=>[JSON.stringify(t),r])),this.end_of_word_suffix=t.end_of_word_suffix,this.continuing_subword_suffix=t.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.max_length_to_cache=256,this.cache_capacity=1e4,this.cache=new tt(this.cache_capacity)}clear_cache(){this.cache.clear()}bpe(t){if(0===t.length)return[];let r=this.cache.get(t);if(void 0!==r)return r;let s=Array.from(t);this.end_of_word_suffix&&(s[s.length-1]+=this.end_of_word_suffix);let i=[];if(s.length>1){let t=new e6((t,r)=>t.score<r.score),r={token:s[0],bias:0,prev:null,next:null},n=r;for(let r=1;r<s.length;++r){let i={bias:r/s.length,token:s[r],prev:n,next:null};n.next=i,this._add_node(t,n),n=i}for(;!t.isEmpty();){let s=t.pop();if(s.deleted||!s.next||s.next.deleted)continue;if(s.deleted=!0,s.next.deleted=!0,s.prev){let t={...s.prev};s.prev.deleted=!0,s.prev=t,t.prev?t.prev.next=t:r=t}let i={token:s.token+s.next.token,bias:s.bias,prev:s.prev,next:s.next.next};i.prev?(i.prev.next=i,this._add_node(t,i.prev)):r=i,i.next&&(i.next.prev=i,this._add_node(t,i))}for(let t=r;null!==t;t=t.next)i.push(t.token)}else i=s;if(this.continuing_subword_suffix)for(let t=0;t<i.length-1;++t)i[t]+=this.continuing_subword_suffix;return t.length<this.max_length_to_cache&&this.cache.put(t,i),i}_add_node(t,r){let s=this.bpe_ranks.get(JSON.stringify([r.token,r.next.token]));void 0!==s&&(r.score=s+r.bias,t.push(r))}encode(t){let r=[];for(let s of t){if(this.ignore_merges&&this.tokens_to_ids.has(s)){r.push(s);continue}for(let t of this.bpe(s))if(this.tokens_to_ids.has(t))r.push(t);else if(this.byte_fallback){let s=Array.from(this.text_encoder.encode(t)).map(t=>`<0x${t.toString(16).toUpperCase().padStart(2,"0")}>`);s.every(t=>this.tokens_to_ids.has(t))?r.push(...s):r.push(this.unk_token)}else r.push(this.unk_token)}return r}}class rm extends ru{constructor(t,r){for(let[s,i]of(super(t),this.tokens_to_ids=re(r.target_lang?t.vocab[r.target_lang]:t.vocab),this.bos_token=r.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=r.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=r.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=r.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=Array(this.tokens_to_ids.size),this.tokens_to_ids))this.vocab[i]=s}encode(t){return t}}class r_ extends Y{constructor(t){super(),this.config=t}static fromConfig(t){if(null===t)return null;switch(t.type){case"BertNormalizer":return new rI(t);case"Precompiled":return new r0(t);case"Sequence":return new rT(t);case"Replace":return new rg(t);case"NFC":return new rw(t);case"NFD":return new rb(t);case"NFKC":return new rx(t);case"NFKD":return new rv(t);case"Strip":return new r$(t);case"StripAccents":return new rk(t);case"Lowercase":return new rE(t);case"Prepend":return new rS(t);default:throw Error(`Unknown Normalizer type: ${t.type}`)}}normalize(t){throw Error("normalize should be implemented in subclass.")}_call(t){return this.normalize(t)}}class rg extends r_{normalize(t){let r=t7(this.config.pattern);return null===r?t:t.replaceAll(r,this.config.content)}}class ry extends r_{form=void 0;normalize(t){return t=t.normalize(this.form)}}class rw extends ry{form="NFC"}class rb extends ry{form="NFD"}class rx extends ry{form="NFKC"}class rv extends ry{form="NFKD"}class r$ extends r_{normalize(t){return this.config.strip_left&&this.config.strip_right?t=t.trim():(this.config.strip_left&&(t=t.trimStart()),this.config.strip_right&&(t=t.trimEnd())),t}}class rk extends r_{normalize(t){return t=rs(t)}}class rE extends r_{normalize(t){return t=t.toLowerCase()}}class rS extends r_{normalize(t){return t=this.config.prepend+t}}class rT extends r_{constructor(t){super(t),this.normalizers=t.normalizers.map(t=>r_.fromConfig(t))}normalize(t){return this.normalizers.reduce((t,r)=>r.normalize(t),t)}}class rI extends r_{_tokenize_chinese_chars(t){let r=[];for(let i=0;i<t.length;++i){var s;let n=t[i];(s=n.charCodeAt(0))>=19968&&s<=40959||s>=13312&&s<=19903||s>=131072&&s<=173791||s>=173824&&s<=177983||s>=177984&&s<=178207||s>=178208&&s<=183983||s>=63744&&s<=64255||s>=194560&&s<=195103?(r.push(" "),r.push(n),r.push(" ")):r.push(n)}return r.join("")}stripAccents(t){return t.normalize("NFD").replace(/\p{Mn}/gu,"")}_is_control(t){switch(t){case"	":case"\n":case"\r":return!1;default:return/^\p{Cc}|\p{Cf}|\p{Co}|\p{Cs}$/u.test(t)}}_clean_text(t){let r=[];for(let s of t){let t=s.charCodeAt(0);0===t||65533===t||this._is_control(s)||(/^\s$/.test(s)?r.push(" "):r.push(s))}return r.join("")}normalize(t){return this.config.clean_text&&(t=this._clean_text(t)),this.config.handle_chinese_chars&&(t=this._tokenize_chinese_chars(t)),this.config.lowercase?(t=t.toLowerCase(),!1!==this.config.strip_accents&&(t=this.stripAccents(t))):this.config.strip_accents&&(t=this.stripAccents(t)),t}}class rz extends Y{static fromConfig(t){if(null===t)return null;switch(t.type){case"BertPreTokenizer":return new rA(t);case"Sequence":return new r1(t);case"Whitespace":return new r2(t);case"WhitespaceSplit":return new r3(t);case"Metaspace":return new rZ(t);case"ByteLevel":return new rC(t);case"Split":return new rM(t);case"Punctuation":return new rO(t);case"Digits":return new rB(t);case"Replace":return new r4(t);default:throw Error(`Unknown PreTokenizer type: ${t.type}`)}}pre_tokenize_text(t,r){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(t,r){return(Array.isArray(t)?t.map(t=>this.pre_tokenize_text(t,r)):this.pre_tokenize_text(t,r)).flat()}_call(t,r){return this.pre_tokenize(t,r)}}class rA extends rz{constructor(t){super(),this.pattern=RegExp(`[^\\s${ri}]+|[${ri}]`,"gu")}pre_tokenize_text(t,r){return t.trim().match(this.pattern)||[]}}class rC extends rz{constructor(t){super(),this.config=t,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=/'s|'t|'re|'ve|'m|'ll|'d| ?\p{L}+| ?\p{N}+| ?[^\s\p{L}\p{N}]+|\s+(?!\S)|\s+/gu,this.byte_encoder=rp,this.text_encoder=new TextEncoder}pre_tokenize_text(t,r){return this.add_prefix_space&&!t.startsWith(" ")&&(t=" "+t),(this.use_regex?t.match(this.pattern)||[]:[t]).map(t=>Array.from(this.text_encoder.encode(t),t=>this.byte_encoder[t]).join(""))}}class rM extends rz{constructor(t){super(),this.config=t,this.pattern=t7(this.config.pattern,this.config.invert)}pre_tokenize_text(t,r){return null===this.pattern?[]:this.config.invert?t.match(this.pattern)||[]:this.config.behavior?.toLowerCase()==="removed"?t.split(this.pattern).filter(t=>t):function(t,r){let s=[],i=0;for(let n of t.matchAll(r)){let r=n[0];i<n.index&&s.push(t.slice(i,n.index)),r.length>0&&s.push(r),i=n.index+r.length}return i<t.length&&s.push(t.slice(i)),s}(t,this.pattern)}}class rO extends rz{constructor(t){super(),this.config=t,this.pattern=RegExp(`[^${ri}]+|[${ri}]+`,"gu")}pre_tokenize_text(t,r){return t.match(this.pattern)||[]}}class rB extends rz{constructor(t){super(),this.config=t;let r=`[^\\d]+|\\d${this.config.individual_digits?"":"+"}`;this.pattern=RegExp(r,"gu")}pre_tokenize_text(t,r){return t.match(this.pattern)||[]}}class rR extends Y{constructor(t){super(),this.config=t}static fromConfig(t){if(null===t)return null;switch(t.type){case"TemplateProcessing":return new rD(t);case"ByteLevel":return new rU(t);case"RobertaProcessing":return new rL(t);case"BertProcessing":return new rP(t);case"Sequence":return new rN(t);default:throw Error(`Unknown PostProcessor type: ${t.type}`)}}post_process(t,...r){throw Error("post_process should be implemented in subclass.")}_call(t,...r){return this.post_process(t,...r)}}class rP extends rR{constructor(t){super(t),this.cls=t.cls[0],this.sep=t.sep[0]}post_process(t,r=null,{add_special_tokens:s=!0}={}){s&&(t=J([this.cls],t,[this.sep]));let i=Array(t.length).fill(0);if(null!==r){let n=s&&this instanceof rL?[this.sep]:[],a=s?[this.sep]:[];t=J(t,n,r,a),i=J(i,Array(r.length+n.length+a.length).fill(1))}return{tokens:t,token_type_ids:i}}}class rL extends rP{}class rD extends rR{constructor(t){super(t),this.single=t.single,this.pair=t.pair}post_process(t,r=null,{add_special_tokens:s=!0}={}){let i=null===r?this.single:this.pair,n=[],a=[];for(let o of i)"SpecialToken"in o?s&&(n.push(o.SpecialToken.id),a.push(o.SpecialToken.type_id)):"Sequence"in o&&("A"===o.Sequence.id?(n=J(n,t),a=J(a,Array(t.length).fill(o.Sequence.type_id))):"B"===o.Sequence.id&&(n=J(n,r),a=J(a,Array(r.length).fill(o.Sequence.type_id))));return{tokens:n,token_type_ids:a}}}class rU extends rR{post_process(t,r=null){return r&&(t=J(t,r)),{tokens:t}}}class rN extends rR{constructor(t){super(t),this.processors=t.processors.map(t=>rR.fromConfig(t))}post_process(t,r=null,s={}){let i;for(let n of this.processors)if(n instanceof rU)t=n.post_process(t).tokens,r&&(r=n.post_process(r).tokens);else{let a=n.post_process(t,r,s);t=a.tokens,i=a.token_type_ids}return{tokens:t,token_type_ids:i}}}class rF extends Y{constructor(t){super(),this.config=t,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=t.trim_offsets}static fromConfig(t){if(null===t)return null;switch(t.type){case"WordPiece":return new rW(t);case"Metaspace":return new rJ(t);case"ByteLevel":return new rH(t);case"Replace":return new rq(t);case"ByteFallback":return new rV(t);case"Fuse":return new rj(t);case"Strip":return new rG(t);case"Sequence":return new rX(t);case"CTC":return new rK(t);case"BPEDecoder":return new rY(t);default:throw Error(`Unknown Decoder type: ${t.type}`)}}_call(t){return this.decode(t)}decode(t){return this.decode_chain(t).join("")}decode_chain(t){throw Error("`decode_chain` should be implemented in subclass.")}}class rq extends rF{decode_chain(t){let r=t7(this.config.pattern);return null===r?t:t.map(t=>t.replaceAll(r,this.config.content))}}class rV extends rF{constructor(t){super(t),this.text_decoder=new TextDecoder}decode_chain(t){let r=[],s=[];for(let i of t){let t=null;if(6===i.length&&i.startsWith("<0x")&&i.endsWith(">")){let r=parseInt(i.slice(3,5),16);isNaN(r)||(t=r)}if(null!==t)s.push(t);else{if(s.length>0){let t=this.text_decoder.decode(Uint8Array.from(s));r.push(t),s=[]}r.push(i)}}if(s.length>0){let t=this.text_decoder.decode(Uint8Array.from(s));r.push(t),s=[]}return r}}class rj extends rF{decode_chain(t){return[t.join("")]}}class rG extends rF{constructor(t){super(t),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(t){return t.map(t=>{let r=0;for(let s=0;s<this.start;++s)if(t[s]===this.content){r=s+1;continue}else break;let s=t.length;for(let r=0;r<this.stop;++r){let i=t.length-r-1;if(t[i]===this.content){s=i;continue}break}return t.slice(r,s)})}}class rW extends rF{constructor(t){super(t),this.cleanup=t.cleanup}decode_chain(t){return t.map((t,r)=>(0!==r&&(t=t.startsWith(this.config.prefix)?t.replace(this.config.prefix,""):" "+t),this.cleanup&&(t=rr(t)),t))}}class rH extends rF{constructor(t){super(t),this.byte_decoder=rh,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(t){let r=new Uint8Array([...t.join("")].map(t=>this.byte_decoder[t]));return this.text_decoder.decode(r)}decode_chain(t){let r=[],s=[];for(let i of t)void 0!==this.added_tokens.find(t=>t.content===i)?(s.length>0&&(r.push(this.convert_tokens_to_string(s)),s=[]),r.push(i)):s.push(i);return s.length>0&&r.push(this.convert_tokens_to_string(s)),r}}class rK extends rF{constructor(t){super(t),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(t){if(0===t.length)return"";let r=[t[0]];for(let s=1;s<t.length;++s)t[s]!==r.at(-1)&&r.push(t[s]);let s=r.filter(t=>t!==this.pad_token).join("");return this.cleanup&&(s=rr(s).replaceAll(this.word_delimiter_token," ").trim()),s}decode_chain(t){return[this.convert_tokens_to_string(t)]}}class rX extends rF{constructor(t){super(t),this.decoders=t.decoders.map(t=>rF.fromConfig(t))}decode_chain(t){return this.decoders.reduce((t,r)=>r.decode_chain(t),t)}}class rY extends rF{constructor(t){super(t),this.suffix=this.config.suffix}decode_chain(t){return t.map((r,s)=>r.replaceAll(this.suffix,s===t.length-1?"":" "))}}class rQ extends rF{decode_chain(t){let r="";for(let s=1;s<t.length;s+=2)r+=t[s];return[r]}}class rZ extends rz{constructor(t){super(),this.addPrefixSpace=t.add_prefix_space,this.replacement=t.replacement,this.strRep=t.str_rep||this.replacement,this.prepend_scheme=t.prepend_scheme??"always"}pre_tokenize_text(t,{section_index:r}={}){let s=t.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!s.startsWith(this.replacement)&&("always"===this.prepend_scheme||"first"===this.prepend_scheme&&0===r)&&(s=this.strRep+s),[s]}}class rJ extends rF{constructor(t){super(t),this.addPrefixSpace=t.add_prefix_space,this.replacement=t.replacement}decode_chain(t){let r=[];for(let s=0;s<t.length;++s){let i=t[s].replaceAll(this.replacement," ");this.addPrefixSpace&&0==s&&i.startsWith(" ")&&(i=i.substring(1)),r.push(i)}return r}}class r0 extends r_{constructor(t){super(t),this.charsmap=t.precompiled_charsmap}normalize(t){return t=(t=(t=t.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,"")).replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," ")).includes("～")?t.split("～").map(t=>t.normalize("NFKC")).join("～"):t.normalize("NFKC")}}class r1 extends rz{constructor(t){super(),this.tokenizers=t.pretokenizers.map(t=>rz.fromConfig(t))}pre_tokenize_text(t,r){return this.tokenizers.reduce((t,s)=>s.pre_tokenize(t,r),[t])}}class r2 extends rz{constructor(t){super()}pre_tokenize_text(t,r){return t.match(/\w+|[^\w\s]+/g)||[]}}class r3 extends rz{constructor(t){super()}pre_tokenize_text(t,r){return t.match(/\S+/g)||[]}}class r4 extends rz{constructor(t){super(),this.config=t,this.pattern=t7(this.config.pattern),this.content=this.config.content}pre_tokenize_text(t,r){return null===this.pattern?[t]:[t.replaceAll(this.pattern,this.config.content)]}}const r6=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];class r8 extends Y{return_token_type_ids=!1;padding_side="right";constructor(t,r){for(let s of(super(),this._tokenizer_config=r,this.normalizer=r_.fromConfig(t.normalizer),this.pre_tokenizer=rz.fromConfig(t.pre_tokenizer),this.model=ru.fromConfig(t.model,r),this.post_processor=rR.fromConfig(t.post_processor),this.decoder=rF.fromConfig(t.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[],t.added_tokens)){let t=new rl(s);this.added_tokens.push(t),this.model.tokens_to_ids.set(t.content,t.id),this.model.vocab[t.id]=t.content,t.special&&(this.special_tokens.push(t.content),this.all_special_ids.push(t.id))}if(this.additional_special_tokens=r.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_splitter=new te(this.added_tokens.map(t=>t.content)),this.added_tokens_map=new Map(this.added_tokens.map(t=>[t.content,t])),this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.bos_token=this.getToken("bos_token"),this.bos_token_id=this.model.tokens_to_ids.get(this.bos_token),this.eos_token=this.getToken("eos_token"),this.eos_token_id=this.model.tokens_to_ids.get(this.eos_token),this.model_max_length=r.model_max_length,this.remove_space=r.remove_space,this.clean_up_tokenization_spaces=r.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=r.do_lowercase_and_remove_accent??!1,r.padding_side&&(this.padding_side=r.padding_side),this.legacy=!1,this.chat_template=r.chat_template??null,Array.isArray(this.chat_template)){let t=Object.create(null);for(let{name:r,template:s}of this.chat_template){if("string"!=typeof r||"string"!=typeof s)throw Error('Chat template must be a list of objects with "name" and "template" properties');t[r]=s}this.chat_template=t}this._compiled_template_cache=new Map}getToken(...t){for(let r of t){let t=this._tokenizer_config[r];if(t)if("object"!=typeof t)return t;else if("AddedToken"===t.__type)return t.content;else throw Error(`Unknown token: ${t}`)}return null}static async from_pretrained(t,{progress_callback:r=null,config:s=null,cache_dir:i=null,local_files_only:n=!1,revision:a="main",legacy:o=null}={}){return new this(...await t9(t,{progress_callback:r,config:s,cache_dir:i,local_files_only:n,revision:a,legacy:o}))}_call(t,{text_pair:r=null,add_special_tokens:s=!0,padding:i=!1,truncation:n=null,max_length:a=null,return_tensor:o=!0,return_token_type_ids:l=null}={}){let u,d=Array.isArray(t);if(d){if(0===t.length)throw Error("text array must be non-empty");if(null!==r){if(Array.isArray(r)){if(t.length!==r.length)throw Error("text and text_pair must have the same length")}else throw Error("text_pair must also be an array");u=t.map((t,i)=>this._encode_plus(t,{text_pair:r[i],add_special_tokens:s,return_token_type_ids:l}))}else u=t.map(t=>this._encode_plus(t,{add_special_tokens:s,return_token_type_ids:l}))}else{if(null==t)throw Error("text may not be null or undefined");if(Array.isArray(r))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");u=[this._encode_plus(t,{text_pair:r,add_special_tokens:s,return_token_type_ids:l})]}if(null===a?a=this.model_max_length:null===n&&(!0===i?(console.warn("`max_length` is ignored when `padding: true` and there is no truncation strategy. To pad to max length, use `padding: 'max_length'`."),a=this.model_max_length):!1===i&&(console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation: true` to explicitly truncate examples to max length."),n=!0)),!0===i&&(a=Math.min(eg(u.map(t=>t.input_ids.length))[0],a??1/0)),a=Math.min(a,this.model_max_length??1/0),i||n)for(let t=0;t<u.length;++t)if(u[t].input_ids.length===a)continue;else u[t].input_ids.length>a?n&&function(t,r){for(let s of Object.keys(t))t[s].length=r}(u[t],a):i&&function(t,r,s,i){for(let n of Object.keys(t)){let a=r-t[n].length,o=s(n),l=Array(a).fill(o);t[n]="right"===i?J(t[n],l):J(l,t[n])}}(u[t],a,t=>"input_ids"===t?this.pad_token_id:0,this.padding_side);let c={};if(o){if(!(i&&n)&&u.some(t=>{for(let r of Object.keys(t))if(t[r].length!==u[0][r]?.length)return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");let t=[u.length,u[0].input_ids.length];for(let r of Object.keys(u[0]))c[r]=new eN("int64",BigInt64Array.from(u.flatMap(t=>t[r]).map(BigInt)),t)}else{for(let t of Object.keys(u[0]))c[t]=u.map(r=>r[t]);if(!d)for(let t of Object.keys(c))c[t]=c[t][0]}return c}_encode_text(t){if(null===t)return null;let r=this.added_tokens_splitter.split(t);for(let t=0;t<r.length;++t){let s=this.added_tokens_map.get(r[t]);s&&(s.lstrip&&t>0&&(r[t-1]=r[t-1].trimEnd()),s.rstrip&&t<r.length-1&&(r[t+1]=r[t+1].trimStart()))}return r.flatMap((t,r)=>{if(0===t.length)return[];if(this.added_tokens_map.has(t))return[t];if(!0===this.remove_space&&(t=t.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(t=rs(t.toLowerCase())),null!==this.normalizer&&(t=this.normalizer(t)),0===t.length)return[];let s=null!==this.pre_tokenizer?this.pre_tokenizer(t,{section_index:r}):[t];return this.model(s)})}_encode_plus(t,{text_pair:r=null,add_special_tokens:s=!0,return_token_type_ids:i=null}={}){let{tokens:n,token_type_ids:a}=this._tokenize_helper(t,{pair:r,add_special_tokens:s}),o=this.model.convert_tokens_to_ids(n),l={input_ids:o,attention_mask:Array(o.length).fill(1)};return(i??this.return_token_type_ids)&&a&&(l.token_type_ids=a),l}_tokenize_helper(t,{pair:r=null,add_special_tokens:s=!1}={}){let i=this._encode_text(t),n=this._encode_text(r);return this.post_processor?this.post_processor(i,n,{add_special_tokens:s}):{tokens:J(i??[],n??[])}}tokenize(t,{pair:r=null,add_special_tokens:s=!1}={}){return this._tokenize_helper(t,{pair:r,add_special_tokens:s}).tokens}encode(t,{text_pair:r=null,add_special_tokens:s=!0,return_token_type_ids:i=null}={}){return this._encode_plus(t,{text_pair:r,add_special_tokens:s,return_token_type_ids:i}).input_ids}batch_decode(t,r={}){return t instanceof eN&&(t=t.tolist()),t.map(t=>this.decode(t,r))}decode(t,r={}){var s;if(t instanceof eN&&(t=rt(t)),!Array.isArray(t)||0===t.length||!(Number.isInteger(s=t[0])||"bigint"==typeof s))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(t,r)}decode_single(t,{skip_special_tokens:r=!1,clean_up_tokenization_spaces:s=null}){let i=this.model.convert_ids_to_tokens(t);r&&(i=i.filter(t=>!this.special_tokens.includes(t)));let n=this.decoder?this.decoder(i):i.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(n=n.replaceAll(this.decoder.end_of_word_suffix," "),r&&(n=n.trim())),(s??this.clean_up_tokenization_spaces)&&(n=rr(n)),n}get_chat_template({chat_template:t=null,tools:r=null}={}){if(this.chat_template&&"object"==typeof this.chat_template){let s=this.chat_template;if(null!==t&&Object.hasOwn(s,t))t=s[t];else if(null===t)if(null!==r&&"tool_use"in s)t=s.tool_use;else if("default"in s)t=s.default;else throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(s).sort()}.`)}else if(null===t)if(this.chat_template)t=this.chat_template;else throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");return t}apply_chat_template(t,{tools:r=null,documents:s=null,chat_template:i=null,add_generation_prompt:n=!1,tokenize:a=!0,padding:o=!1,truncation:l=!1,max_length:u=null,return_tensor:d=!0,return_dict:c=!1,tokenizer_kwargs:p={},...h}={}){if("string"!=typeof(i=this.get_chat_template({chat_template:i,tools:r})))throw Error(`chat_template must be a string, but got ${typeof i}`);let f=this._compiled_template_cache.get(i);void 0===f&&(f=new t4(i),this._compiled_template_cache.set(i,f));let m=Object.create(null);for(let t of r6){let r=this.getToken(t);r&&(m[t]=r)}let _=f.render({messages:t,add_generation_prompt:n,tools:r,documents:s,...m,...h});if(a){let t=this._call(_,{add_special_tokens:!1,padding:o,truncation:l,max_length:u,return_tensor:d,...p});return c?t:t.input_ids}return _}}class r5 extends r8{return_token_type_ids=!0}class r9 extends r8{return_token_type_ids=!0}class r7 extends r8{return_token_type_ids=!0}class se extends r8{return_token_type_ids=!0}class st extends r8{return_token_type_ids=!0}class sr extends r8{return_token_type_ids=!0}class ss extends r8{return_token_type_ids=!0}class si extends r8{return_token_type_ids=!0}class sn extends r8{return_token_type_ids=!0}class sa extends r8{}class so extends r8{}class sl extends r8{return_token_type_ids=!0;constructor(t,r){super(t,r),console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class su extends r8{return_token_type_ids=!0}class sd extends r8{}class sc extends r8{}class sp extends r8{}class sh extends r8{constructor(t,r){super(t,r),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(t=>this.languageRegex.test(t)),this.lang_to_token=t=>t}_build_translation_inputs(t,r,s){return sT(this,t,r,s)}}class sf extends sh{}class sm extends r8{}class s_ extends r8{}class sg extends r8{padding_side="left";constructor(t,r){super(t,r),this.legacy=r.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new rZ({replacement:"▁",add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(t){if(null===t)return null;if(this.legacy||0===t.length)return super._encode_text(t);let r=super._encode_text("▁"+t.replaceAll("▁"," "));return r.length>1&&"▁"===r[0]&&this.special_tokens.includes(r[1])&&(r=r.slice(1)),r}}class sy extends r8{}class sw extends r8{}class sb extends r8{}class sx extends r8{}class sv extends r8{}class s$ extends r8{}class sk extends r8{}class sE extends r8{}class sS extends r8{}function sT(t,r,s,i){if(!("language_codes"in t)||!Array.isArray(t.language_codes))throw Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in t)||!(t.languageRegex instanceof RegExp))throw Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in t)||"function"!=typeof t.lang_to_token)throw Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");let n=i.src_lang,a=i.tgt_lang;if(!t.language_codes.includes(a))throw Error(`Target language code "${a}" is not valid. Must be one of: {${t.language_codes.join(", ")}}`);if(void 0!==n){if(!t.language_codes.includes(n))throw Error(`Source language code "${n}" is not valid. Must be one of: {${t.language_codes.join(", ")}}`);for(let r of t.post_processor.config.single)if("SpecialToken"in r&&t.languageRegex.test(r.SpecialToken.id)){r.SpecialToken.id=t.lang_to_token(n);break}}return i.forced_bos_token_id=t.model.convert_tokens_to_ids([t.lang_to_token(a)])[0],t._call(r,s)}class sI extends r8{constructor(t,r){super(t,r),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(t=>this.languageRegex.test(t)),this.lang_to_token=t=>t}_build_translation_inputs(t,r,s){return sT(this,t,r,s)}}class sz extends r8{constructor(t,r){super(t,r),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(t=>this.languageRegex.test(t)).map(t=>t.slice(2,-2)),this.lang_to_token=t=>`__${t}__`}_build_translation_inputs(t,r,s){return sT(this,t,r,s)}}class sA extends r8{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(t,{return_timestamps:r=!1,return_language:s=!1,time_precision:i=null,force_full_sequences:n=!0}={}){if(null===i)throw Error("Must specify time_precision");let a=null,o="word"===r;function l(){return{language:a,timestamp:[null,null],text:""}}let u=[],d=l(),c=0,p=this.timestamp_begin,h=p+1500,f=[],m=[],_=!1,g=null,y=new Set(this.all_special_ids);for(let s of t){let t=s.tokens,n=o?s.token_timestamps:null,w=null,b=p;if("stride"in s){let[r,n,a]=s.stride;if(c-=n,g=r-a,n&&(b=n/i+p),a)for(let r=t.length-1;r>=0;--r){let s=Number(t[r]);if(s>=p){if(null!==w&&(s-p)*i<g)break;w=s}}}let x=[],v=[];for(let s=0;s<t.length;++s){let g=Number(t[s]);if(y.has(g)){let t=this.decode([g]),s=t8.get(t.slice(2,-2));if(void 0!==s){if(null!==a&&s!==a&&!r){f.push(x);let t=this.findLongestCommonSequence(f)[0],r=this.decode(t);d.text=r,u.push(d),f=[],x=[],d=l()}a=d.language=s}}else if(g>=p&&g<=h){let t=ev((g-p)*i+c,2);if(null!==w&&g>=w)_=!0;else if(_||f.length>0&&g<b)_=!1;else if(null===d.timestamp[0])d.timestamp[0]=t;else if(t===d.timestamp[0]);else{d.timestamp[1]=t,f.push(x),o&&m.push(v);let[r,s]=this.findLongestCommonSequence(f,m),i=this.decode(r);d.text=i,o&&(d.words=this.collateWordTimestamps(r,s,a)),u.push(d),f=[],x=[],m=[],v=[],d=l()}}else if(x.push(g),o){let t,r=ev(n[s]+c,2);if(s+1<n.length){t=ev(n[s+1]+c,2);let a=this.decode([g]);rn.test(a)&&(t=ev(Math.min(r+i,t),2))}else t=null;v.push([r,t])}}if("stride"in s){let[t,r,i]=s.stride;c+=t-i}x.length>0?(f.push(x),o&&m.push(v)):f.every(t=>0===t.length)&&(d=l(),f=[],x=[],m=[],v=[])}if(f.length>0){if(n&&r)throw Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");let[t,s]=this.findLongestCommonSequence(f,m),i=this.decode(t);d.text=i,o&&(d.words=this.collateWordTimestamps(t,s,a)),u.push(d)}let w=Object.create(null),b=u.map(t=>t.text).join("");if(r||s){for(let t=0;t<u.length;++t){let i=u[t];r||delete i.timestamp,s||delete i.language}if(o){let t=[];for(let r of u)for(let s of r.words)t.push(s);w={chunks:t}}else w={chunks:u}}return[b,w]}findLongestCommonSequence(t,r=null){let s=t[0],i=s.length,n=[],a=Array.isArray(r)&&r.length>0,o=a?[]:null,l=a?r[0]:null;for(let u=1;u<t.length;++u){let d=t[u],c=0,p=[i,i,0,0],h=d.length;for(let t=1;t<i+h;++t){let n,o=Math.max(0,i-t),f=Math.min(i,i+h-t),m=s.slice(o,f),_=Math.max(0,t-i),g=Math.min(h,t),y=d.slice(_,g);if(m.length!==y.length)throw Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");n=a?m.filter((t,s)=>t===y[s]&&l[o+s]<=r[u][_+s]).length:m.filter((t,r)=>t===y[r]).length;let w=t/1e4,b=n/t+w;n>1&&b>c&&(c=b,p=[o,f,_,g])}let[f,m,_,g]=p,y=Math.floor((m+f)/2),w=Math.floor((g+_)/2);n.push(...s.slice(0,y)),i=(s=d.slice(w)).length,a&&(o.push(...l.slice(0,y)),l=r[u].slice(w))}return(n.push(...s),a)?(o.push(...l),[n,o]):[n,[]]}collateWordTimestamps(t,r,s){let[i,n,a]=this.combineTokensIntoWords(t,s),o=[];for(let t=0;t<i.length;++t){let s=a[t];o.push({text:i[t],timestamp:[r[s.at(0)][0],r[s.at(-1)][1]]})}return o}combineTokensIntoWords(t,r,s="\"'“¡¿([{-",i="\"'.。,，!！?？:：”)]}、"){let n,a,o;return["chinese","japanese","thai","lao","myanmar"].includes(r=r??"english")?[n,a,o]=this.splitTokensOnUnicode(t):[n,a,o]=this.splitTokensOnSpaces(t),this.mergePunctuations(n,a,o,s,i)}decode(t,r){let s;return r?.decode_with_timestamps?(t instanceof eN&&(t=rt(t)),s=this.decodeWithTimestamps(t,r)):s=super.decode(t,r),s}decodeWithTimestamps(t,r){let s=r?.time_precision??.02,i=Array.from(this.all_special_ids).at(-1)+1,n=[[]];for(let r of t)if((r=Number(r))>=i){let t=((r-i)*s).toFixed(2);n.push(`<|${t}|>`),n.push([])}else n[n.length-1].push(r);return(n=n.map(t=>"string"==typeof t?t:super.decode(t,r))).join("")}splitTokensOnUnicode(t){let r=this.decode(t,{decode_with_timestamps:!0}),s=[],i=[],n=[],a=[],o=[],l=0;for(let u=0;u<t.length;++u){let d=t[u];a.push(d),o.push(u);let c=this.decode(a,{decode_with_timestamps:!0});c.includes("�")&&"�"!==r[l+c.indexOf("�")]||(s.push(c),i.push(a),n.push(o),a=[],o=[],l+=c.length)}return[s,i,n]}splitTokensOnSpaces(t){let[r,s,i]=this.splitTokensOnUnicode(t),n=[],a=[],o=[],l=RegExp(`^[${ri}]$`,"gu");for(let t=0;t<r.length;++t){let u=r[t],d=s[t],c=i[t],p=d[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),h=u.startsWith(" "),f=u.trim(),m=l.test(f);if(p||h||m||0===n.length)n.push(u),a.push(d),o.push(c);else{let t=n.length-1;n[t]+=u,a[t].push(...d),o[t].push(...c)}}return[n,a,o]}mergePunctuations(t,r,s,i,n){let a=structuredClone(t),o=structuredClone(r),l=structuredClone(s),u=a.length-2,d=a.length-1;for(;u>=0;)a[u].startsWith(" ")&&i.includes(a[u].trim())?(a[d]=a[u]+a[d],o[d]=J(o[u],o[d]),l[d]=J(l[u],l[d]),a[u]="",o[u]=[],l[u]=[]):d=u,--u;for(u=0,d=1;d<a.length;)!a[u].endsWith(" ")&&n.includes(a[d])?(a[u]+=a[d],o[u]=J(o[u],o[d]),l[u]=J(l[u],l[d]),a[d]="",o[d]=[],l[d]=[]):u=d,++d;return[a.filter(t=>t),o.filter(t=>t.length>0),l.filter(t=>t.length>0)]}}class sC extends r8{}class sM extends r8{}class sO extends r8{}class sB extends r8{constructor(t,r){super(t,r),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(t=>this.languageRegex.test(t)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(t){if(null===t)return null;let[r,...s]=t.trim().split(this.languageRegex);if(0===s.length)return super._encode_text(r);if(2===s.length){let[t,r]=s;return this.supported_language_codes.includes(t)||console.warn(`Unsupported language code "${t}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),J([t],super._encode_text(r))}}}class sR extends r8{}class sP extends r8{}class sL extends r8{}class sD extends r8{}class sU extends r8{}class sN extends r8{constructor(t,r){super(t,r),this.decoder=new rQ({})}}class sF extends r8{}class sq extends r8{}class sV{static TOKENIZER_CLASS_MAPPING={T5Tokenizer:sd,DistilBertTokenizer:sa,CamembertTokenizer:so,DebertaTokenizer:st,DebertaV2Tokenizer:sr,BertTokenizer:r5,HerbertTokenizer:ss,ConvBertTokenizer:si,RoFormerTokenizer:sn,XLMTokenizer:sl,ElectraTokenizer:su,MobileBertTokenizer:r7,SqueezeBertTokenizer:se,AlbertTokenizer:r9,GPT2Tokenizer:sc,BartTokenizer:sp,MBartTokenizer:sh,MBart50Tokenizer:sf,RobertaTokenizer:sm,WhisperTokenizer:sA,CodeGenTokenizer:sC,CLIPTokenizer:sM,SiglipTokenizer:sO,MarianTokenizer:sB,BloomTokenizer:s_,NllbTokenizer:sI,M2M100Tokenizer:sz,LlamaTokenizer:sg,CodeLlamaTokenizer:sy,XLMRobertaTokenizer:sw,MPNetTokenizer:sb,FalconTokenizer:sx,GPTNeoXTokenizer:sv,EsmTokenizer:s$,Wav2Vec2CTCTokenizer:sR,BlenderbotTokenizer:sP,BlenderbotSmallTokenizer:sL,SpeechT5Tokenizer:sD,NougatTokenizer:sU,VitsTokenizer:sN,Qwen2Tokenizer:sk,GemmaTokenizer:sE,Grok1Tokenizer:sS,CohereTokenizer:sF,MgpstrTokenizer:sq,PreTrainedTokenizer:r8};static async from_pretrained(t,{progress_callback:r=null,config:s=null,cache_dir:i=null,local_files_only:n=!1,revision:a="main",legacy:o=null}={}){let[l,u]=await t9(t,{progress_callback:r,config:s,cache_dir:i,local_files_only:n,revision:a,legacy:o}),d=u.tokenizer_class?.replace(/Fast$/,"")??"PreTrainedTokenizer",c=this.TOKENIZER_CLASS_MAPPING[d];return c||(console.warn(`Unknown tokenizer class "${d}", attempting to construct from base class.`),c=r8),new c(l,u)}}async function sj(t,r){return await ep(t,"config.json",!0,r)}function sG(t,{prefix:r="past_key_values",batch_size:s=1}={}){let i={},n=t.normalized_config;if(n.is_encoder_decoder&&"num_encoder_heads"in n&&"num_decoder_heads"in n){let t=n.encoder_dim_kv??n.encoder_hidden_size/n.num_encoder_heads,a=n.decoder_dim_kv??n.decoder_hidden_size/n.num_decoder_heads,o=[s,n.num_encoder_heads,0,t],l=[s,n.num_decoder_heads,0,a];for(let t=0;t<n.num_decoder_layers;++t)i[`${r}.${t}.encoder.key`]=o,i[`${r}.${t}.encoder.value`]=o,i[`${r}.${t}.decoder.key`]=l,i[`${r}.${t}.decoder.value`]=l}else{let t=n.num_heads,a=n.num_layers,o=n.dim_kv??n.hidden_size/(n.num_attention_heads??t);if("falcon"===n.model_type){let n=[s*t,0,o];for(let t=0;t<a;++t)i[`${r}.${t}.key`]=n,i[`${r}.${t}.value`]=n}else if(n.multi_query){let n=[s*t,0,2*o];for(let t=0;t<a;++t)i[`${r}.${t}.key_value`]=n}else if("bloom"===n.model_type){let n=[s*t,o,0],l=[s*t,0,o];for(let t=0;t<a;++t)i[`${r}.${t}.key`]=n,i[`${r}.${t}.value`]=l}else if("openelm"===n.model_type)for(let n=0;n<a;++n){let a=[s,t[n],0,o];i[`${r}.${n}.key`]=a,i[`${r}.${n}.value`]=a}else{let n=[s,t,0,o];for(let t=0;t<a;++t)i[`${r}.${t}.key`]=n,i[`${r}.${t}.value`]=n}}return i}class sW{model_type=null;is_encoder_decoder=!1;max_position_embeddings;"transformers.js_config";constructor(t){Object.assign(this,t),this.normalized_config=function t(r){let s={},i={};switch(r.model_type){case"llava":case"paligemma":case"gemma3":case"florence2":case"llava_onevision":case"idefics3":case"ultravox":case"smolvlm":i=t(r.text_config);break;case"moondream1":i=t(r.phi_config);break;case"musicgen":i=t(r.decoder);break;case"multi_modality":i=t(r.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":s.num_heads="n_head",s.num_layers="n_layer",s.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"falcon":s.num_heads="num_attention_heads",s.num_layers="num_hidden_layers",s.hidden_size="hidden_size";break;case"llama":case"olmo":case"olmo2":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":case"phi":case"phi3":case"phi3_v":s.num_heads="num_key_value_heads",s.num_layers="num_hidden_layers",s.hidden_size="hidden_size",s.num_attention_heads="num_attention_heads";break;case"qwen3":case"gemma":case"gemma2":case"gemma3_text":case"glm":case"helium":s.num_heads="num_key_value_heads",s.num_layers="num_hidden_layers",s.dim_kv="head_dim";break;case"openelm":s.num_heads="num_kv_heads",s.num_layers="num_transformer_layers",s.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":s.num_heads="num_heads",s.num_layers="num_layers",s.hidden_size="hidden_size";break;case"bloom":s.num_heads="n_head",s.num_layers="n_layer",s.hidden_size="hidden_size";break;case"mpt":s.num_heads="n_heads",s.num_layers="n_layers",s.hidden_size="d_model";break;case"exaone":s.num_heads="num_key_value_heads",s.num_layers="num_layers",s.dim_kv="head_dim",s.num_attention_heads="num_attention_heads";break;case"t5":case"mt5":case"longt5":s.num_decoder_layers="num_decoder_layers",s.num_decoder_heads="num_heads",s.decoder_dim_kv="d_kv",s.num_encoder_layers="num_layers",s.num_encoder_heads="num_heads",s.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"lite-whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":s.num_decoder_layers="decoder_layers",s.num_decoder_heads="decoder_attention_heads",s.decoder_hidden_size="d_model",s.num_encoder_layers="encoder_layers",s.num_encoder_heads="encoder_attention_heads",s.encoder_hidden_size="d_model";break;case"speecht5":s.num_decoder_layers="decoder_layers",s.num_decoder_heads="decoder_attention_heads",s.decoder_hidden_size="hidden_size",s.num_encoder_layers="encoder_layers",s.num_encoder_heads="encoder_attention_heads",s.encoder_hidden_size="hidden_size";break;case"trocr":s.num_encoder_layers=s.num_decoder_layers="decoder_layers",s.num_encoder_heads=s.num_decoder_heads="decoder_attention_heads",s.encoder_hidden_size=s.decoder_hidden_size="d_model";break;case"musicgen_decoder":s.num_encoder_layers=s.num_decoder_layers="num_hidden_layers",s.num_encoder_heads=s.num_decoder_heads="num_attention_heads",s.encoder_hidden_size=s.decoder_hidden_size="hidden_size";break;case"moonshine":s.num_decoder_layers="decoder_num_hidden_layers",s.num_decoder_heads="decoder_num_key_value_heads",s.num_encoder_layers="encoder_num_hidden_layers",s.num_encoder_heads="encoder_num_key_value_heads",s.encoder_hidden_size=s.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":let n=t(r.decoder),a="num_decoder_layers"in n,o=er(r,["model_type","is_encoder_decoder"]);return a?(o.num_decoder_layers=n.num_decoder_layers,o.num_decoder_heads=n.num_decoder_heads,o.decoder_hidden_size=n.decoder_hidden_size,o.num_encoder_layers=n.num_encoder_layers,o.num_encoder_heads=n.num_encoder_heads,o.encoder_hidden_size=n.encoder_hidden_size):(o.num_layers=n.num_layers,o.num_heads=n.num_heads,o.hidden_size=n.hidden_size),o}let l={...i,...er(r,["model_type","multi_query","is_encoder_decoder"])};for(let t in s)l[t]=r[s[t]];return l}(this)}static async from_pretrained(t,{progress_callback:r=null,config:s=null,cache_dir:i=null,local_files_only:n=!1,revision:a="main"}={}){return!s||s instanceof sW||(s=new sW(s)),new this(s??await sj(t,{progress_callback:r,config:s,cache_dir:i,local_files_only:n,revision:a}))}}class sH{static async from_pretrained(...t){return sW.from_pretrained(...t)}}const sK=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"}),sX=async function(){if(void 0===a)if(V.IS_WEBGPU_AVAILABLE)try{a=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch(t){a=!1}else a=!1;return a},sY=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),sQ=Object.freeze({[sK.wasm]:sY.q8}),sZ=Object.freeze({[sY.fp32]:"",[sY.fp16]:"_fp16",[sY.int8]:"_int8",[sY.uint8]:"_uint8",[sY.q8]:"_quantized",[sY.q4]:"_q4",[sY.q4f16]:"_q4f16",[sY.bnb4]:"_bnb4"}),sJ="https://github.com/huggingface/transformers.js/issues/new/choose",s0="preprocessor_config.json";class s1 extends Y{_call(t,r){throw Error("`_call` should be implemented in a subclass")}}class s2 extends Y{_call(t,r){throw Error("`_call` should be implemented in a subclass")}}class s3 extends Y{constructor(){super(),this.processors=[]}push(t){this.processors.push(t)}extend(t){this.processors.push(...t)}_call(t,r){let s=r;for(let r of this.processors)s=r(t,s);return s}[Symbol.iterator](){return this.processors.values()}}class s4 extends s1{constructor(t){super(),this.bos_token_id=t}_call(t,r){for(let s=0;s<t.length;++s)if(1===t[s].length){let t=r[s].data;t.fill(-1/0),t[this.bos_token_id]=0}return r}}class s6 extends s1{constructor(t,r){super(),this.max_length=t,this.eos_token_id=Array.isArray(r)?r:[r]}_call(t,r){for(let s=0;s<t.length;++s)if(t[s].length===this.max_length-1){let t=r[s].data;for(let r of(t.fill(-1/0),this.eos_token_id))t[r]=0}return r}}class s8 extends s1{constructor(t,r){super(),this.begin_suppress_tokens=t,this.begin_index=r}_call(t,r){for(let s=0;s<t.length;++s)if(t[s].length===this.begin_index){let t=r[s].data;for(let r of this.begin_suppress_tokens)t[r]=-1/0}return r}}class s5 extends s1{constructor(t,r){super(),this.eos_token_id=Array.isArray(t.eos_token_id)?t.eos_token_id[0]:t.eos_token_id,this.no_timestamps_token_id=t.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=r.length,r.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=t.max_initial_timestamp_index}_call(t,r){for(let s=0;s<t.length;++s){let i=r[s].data;if(i[this.no_timestamps_token_id]=-1/0,t[s].length===this.begin_index-1){i.fill(-1/0),i[this.timestamp_begin]=0;continue}let n=t[s].slice(this.begin_index),a=n.length>=1&&n[n.length-1]>=this.timestamp_begin,o=n.length<2||n[n.length-2]>=this.timestamp_begin;if(a&&(o?i.subarray(this.timestamp_begin).fill(-1/0):i.subarray(0,this.eos_token_id).fill(-1/0)),t[s].length===this.begin_index&&null!==this.max_initial_timestamp_index){let t=this.timestamp_begin+this.max_initial_timestamp_index;i.subarray(t+1).fill(-1/0)}let l=function(t){let r=eg(t)[0],s=0;for(let i=0;i<t.length;++i)s+=Math.exp(t[i]-r);let i=Math.log(s);return t.map(t=>t-r-i)}(i);Math.log(l.subarray(this.timestamp_begin).map(Math.exp).reduce((t,r)=>t+r))>eg(l.subarray(0,this.timestamp_begin))[0]&&i.subarray(0,this.timestamp_begin).fill(-1/0)}return r}}class s9 extends s1{constructor(t){super(),this.no_repeat_ngram_size=t}getNgrams(t){let r=t.length,s=[];for(let i=0;i<r+1-this.no_repeat_ngram_size;++i){let r=[];for(let s=0;s<this.no_repeat_ngram_size;++s)r.push(t[i+s]);s.push(r.map(Number))}let i=new Map;for(let t of s){let r=JSON.stringify(t.slice(0,t.length-1)),s=i.get(r)??[];s.push(t[t.length-1]),i.set(r,s)}return i}getGeneratedNgrams(t,r){let s=r.slice(r.length+1-this.no_repeat_ngram_size,r.length);return t.get(JSON.stringify(s.map(Number)))??[]}calcBannedNgramTokens(t){if(t.length+1<this.no_repeat_ngram_size)return[];{let r=this.getNgrams(t);return this.getGeneratedNgrams(r,t)}}_call(t,r){for(let s=0;s<t.length;++s){let i=r[s].data;for(let r of this.calcBannedNgramTokens(t[s]))i[r]=-1/0}return r}}class s7 extends s1{constructor(t){super(),this.penalty=t}_call(t,r){for(let s=0;s<t.length;++s){let i=r[s].data;for(let r of new Set(t[s])){let t=Number(r);i[t]<0?i[t]*=this.penalty:i[t]/=this.penalty}}return r}}class ie extends s1{constructor(t,r){super(),this.min_length=t,this.eos_token_id=Array.isArray(r)?r:[r]}_call(t,r){for(let s=0;s<t.length;++s)if(t[s].length<this.min_length){let t=r[s].data;for(let r of this.eos_token_id)t[r]=-1/0}return r}}class it extends s1{constructor(t,r,s){super(),this.prompt_length_to_skip=t,this.min_new_tokens=r,this.eos_token_id=Array.isArray(s)?s:[s]}_call(t,r){for(let s=0;s<t.length;++s)if(t[s].length-this.prompt_length_to_skip<this.min_new_tokens){let t=r[s].data;for(let r of this.eos_token_id)t[r]=-1/0}return r}}class ir extends s1{constructor(t,r){super(),this.bad_words_ids=t,this.eos_token_id=Array.isArray(r)?r:[r]}_call(t,r){for(let s=0;s<t.length;++s){let i=r[s].data,n=t[s];for(let t of this.bad_words_ids){if(n.length<t.length-1)continue;let r=!0;for(let s=1;s<=t.length-1;++s)if(t.at(-s-1)!=n.at(-s)){r=!1;break}r&&(i[t.at(-1)]=-1/0)}}return r}}class is extends s1{constructor(t){if(super(),t<=1)throw Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${t}.`);this.guidance_scale=t}_call(t,r){if(r.dims[0]!==2*t.length)throw Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${r.dims[0]} for the logits and ${t.length} for the input ids.`);let s=t.length,i=r.slice([0,s],null),n=r.slice([s,r.dims[0]],null);for(let t=0;t<n.data.length;++t)n.data[t]+=(i.data[t]-n.data[t])*this.guidance_scale;return n}}class ii extends s2{constructor(t){super(),"number"!=typeof t||t<=0,this.temperature=t}_call(t,r){let s=r.data;for(let t=0;t<s.length;++t)s[t]/=this.temperature;return r}}class ia extends s2{constructor(t,{filter_value:r=-1/0,min_tokens_to_keep:s=1}={}){if(super(),t<0||t>1)throw Error(`\`top_p\` must be a float > 0 and < 1, but is ${t}`);if(!Number.isInteger(s)||s<1)throw Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${s}`);this.top_p=t,this.filter_value=r,this.min_tokens_to_keep=s}}class io extends s2{constructor(t,{filter_value:r=-1/0,min_tokens_to_keep:s=1}={}){if(super(),!Number.isInteger(t)||t<0)throw Error(`\`top_k\` must be a positive integer, but is ${t}`);this.top_k=Math.max(t,s),this.filter_value=r}}class il{max_length=20;max_new_tokens=null;min_length=0;min_new_tokens=null;early_stopping=!1;max_time=null;do_sample=!1;num_beams=1;num_beam_groups=1;penalty_alpha=null;use_cache=!0;temperature=1;top_k=50;top_p=1;typical_p=1;epsilon_cutoff=0;eta_cutoff=0;diversity_penalty=0;repetition_penalty=1;encoder_repetition_penalty=1;length_penalty=1;no_repeat_ngram_size=0;bad_words_ids=null;force_words_ids=null;renormalize_logits=!1;constraints=null;forced_bos_token_id=null;forced_eos_token_id=null;remove_invalid_values=!1;exponential_decay_length_penalty=null;suppress_tokens=null;streamer=null;begin_suppress_tokens=null;forced_decoder_ids=null;guidance_scale=null;num_return_sequences=1;output_attentions=!1;output_hidden_states=!1;output_scores=!1;return_dict_in_generate=!1;pad_token_id=null;bos_token_id=null;eos_token_id=null;encoder_no_repeat_ngram_size=0;decoder_start_token_id=null;generation_kwargs={};constructor(t){Object.assign(this,er(t,Object.getOwnPropertyNames(this)))}}const iu=V.IS_BROWSER_ENV||V.IS_WEBWORKER_ENV;if(iu)s=(t,r)=>{if(!self.OffscreenCanvas)throw Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(t,r)},n=self.createImageBitmap,i=self.ImageData;else if(o(x))n=async t=>{let r=(await t.metadata()).channels,{data:s,info:i}=await t.rotate().raw().toBuffer({resolveWithObject:!0}),n=new ip(new Uint8ClampedArray(s),i.width,i.height,i.channels);return void 0!==r&&r!==i.channels&&n.convert(r),n};else throw Error("Unable to load image processing library.");const id={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},ic=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class ip{constructor(t,r,s,i){this.data=t,this.width=r,this.height=s,this.channels=i}get size(){return[this.width,this.height]}static async read(t){if(t instanceof ip)return t;if("string"==typeof t||t instanceof URL)return await this.fromURL(t);if(t instanceof Blob)return await this.fromBlob(t);if("undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof OffscreenCanvas&&t instanceof OffscreenCanvas)return this.fromCanvas(t);throw Error(`Unsupported input type: ${typeof t}`)}static fromCanvas(t){if(!iu)throw Error("fromCanvas() is only supported in browser environments.");return new ip(t.getContext("2d").getImageData(0,0,t.width,t.height).data,t.width,t.height,4)}static async fromURL(t){let r=await eo(t);if(200!==r.status)throw Error(`Unable to read image from "${t}" (${r.status} ${r.statusText})`);let s=await r.blob();return this.fromBlob(s)}static async fromBlob(t){if(iu){let r=await n(t),i=s(r.width,r.height).getContext("2d");return i.drawImage(r,0,0),new this(i.getImageData(0,0,r.width,r.height).data,r.width,r.height,4)}{let r=o(x)(await t.arrayBuffer());return await n(r)}}static fromTensor(t,r="CHW"){if(3!==t.dims.length)throw Error(`Tensor should have 3 dimensions, but has ${t.dims.length} dimensions.`);if("CHW"===r)t=t.transpose(1,2,0);else if("HWC"===r);else throw Error(`Unsupported channel format: ${r}`);if(!(t.data instanceof Uint8ClampedArray||t.data instanceof Uint8Array))throw Error(`Unsupported tensor type: ${t.type}`);switch(t.dims[2]){case 1:case 2:case 3:case 4:return new ip(t.data,t.dims[1],t.dims[0],t.dims[2]);default:throw Error(`Unsupported number of channels: ${t.dims[2]}`)}}grayscale(){if(1===this.channels)return this;let t=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let r=0,s=0;r<this.data.length;r+=this.channels){let i=this.data[r],n=this.data[r+1],a=this.data[r+2];t[s++]=Math.round(.2989*i+.587*n+.114*a)}break;default:throw Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(t,this.width,this.height,1)}rgb(){if(3===this.channels)return this;let t=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let r=0,s=0;r<this.data.length;++r)t[s++]=this.data[r],t[s++]=this.data[r],t[s++]=this.data[r];break;case 4:for(let r=0,s=0;r<this.data.length;r+=4)t[s++]=this.data[r],t[s++]=this.data[r+1],t[s++]=this.data[r+2];break;default:throw Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(t,this.width,this.height,3)}rgba(){if(4===this.channels)return this;let t=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let r=0,s=0;r<this.data.length;++r)t[s++]=this.data[r],t[s++]=this.data[r],t[s++]=this.data[r],t[s++]=255;break;case 3:for(let r=0,s=0;r<this.data.length;r+=3)t[s++]=this.data[r],t[s++]=this.data[r+1],t[s++]=this.data[r+2],t[s++]=255;break;default:throw Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(t,this.width,this.height,4)}putAlpha(t){if(t.width!==this.width||t.height!==this.height)throw Error(`Expected mask size to be ${this.width}x${this.height}, but got ${t.width}x${t.height}`);if(1!==t.channels)throw Error(`Expected mask to have 1 channel, but got ${t.channels}`);let r=this.data,s=t.data,i=this.width*this.height;if(3===this.channels){let t=new Uint8ClampedArray(4*i);for(let n=0,a=0,o=0;n<i;++n)t[o++]=r[a++],t[o++]=r[a++],t[o++]=r[a++],t[o++]=s[n];return this._update(t,this.width,this.height,4)}if(4===this.channels){for(let t=0;t<i;++t)r[4*t+3]=s[t];return this}throw Error(`Expected image to have 3 or 4 channels, but got ${this.channels}`)}async resize(t,r,{resample:i=2}={}){if(this.width===t&&this.height===r)return this;let a=id[i]??i,o=Q(t),l=Q(r);if(o&&l)return this;if(o?t=r/this.height*this.width:l&&(r=t/this.width*this.height),iu){let i=this.channels,n=this.toCanvas(),a=s(t,r).getContext("2d");return a.drawImage(n,0,0,t,r),new ip(a.getImageData(0,0,t,r).data,t,r,4).convert(i)}{let s=this.toSharp();switch(a){case"box":case"hamming":("box"===a||"hamming"===a)&&(console.warn(`Resampling method ${a} is not yet supported. Using bilinear instead.`),a="bilinear");case"nearest":case"bilinear":case"bicubic":s=s.affine([t/this.width,0,0,r/this.height],{interpolator:a});break;case"lanczos":s=s.resize({width:t,height:r,fit:"fill",kernel:"lanczos3"});break;default:throw Error(`Resampling method ${a} is not supported.`)}return await n(s)}}async pad([t,r,i,a]){if(t=Math.max(t,0),r=Math.max(r,0),i=Math.max(i,0),a=Math.max(a,0),0===t&&0===r&&0===i&&0===a)return this;if(iu){let n=this.channels,o=this.toCanvas(),l=this.width+t+r,u=this.height+i+a,d=s(l,u).getContext("2d");return d.drawImage(o,0,0,this.width,this.height,t,i,this.width,this.height),new ip(d.getImageData(0,0,l,u).data,l,u,4).convert(n)}{let s=this.toSharp().extend({left:t,right:r,top:i,bottom:a});return await n(s)}}async crop([t,r,i,a]){if(t=Math.max(t,0),r=Math.max(r,0),i=Math.min(i,this.width-1),a=Math.min(a,this.height-1),0===t&&0===r&&i===this.width-1&&a===this.height-1)return this;let o=i-t+1,l=a-r+1;if(iu){let i=this.channels,n=this.toCanvas(),a=s(o,l).getContext("2d");return a.drawImage(n,t,r,o,l,0,0,o,l),new ip(a.getImageData(0,0,o,l).data,o,l,4).convert(i)}{let s=this.toSharp().extract({left:t,top:r,width:o,height:l});return await n(s)}}async center_crop(t,r){if(this.width===t&&this.height===r)return this;let i=(this.width-t)/2,a=(this.height-r)/2;if(iu){let n=this.channels,o=this.toCanvas(),l=s(t,r).getContext("2d"),u=0,d=0,c=0,p=0;return i>=0?u=i:c=-i,a>=0?d=a:p=-a,l.drawImage(o,u,d,t,r,c,p,t,r),new ip(l.getImageData(0,0,t,r).data,t,r,4).convert(n)}{let s=this.toSharp();if(i>=0&&a>=0)s=s.extract({left:Math.floor(i),top:Math.floor(a),width:t,height:r});else if(i<=0&&a<=0){let n=Math.floor(-a),o=Math.floor(-i);s=s.extend({top:n,left:o,right:t-this.width-o,bottom:r-this.height-n})}else{let n=[0,0],o=0;a<0?(n[0]=Math.floor(-a),n[1]=r-this.height-n[0]):o=Math.floor(a);let l=[0,0],u=0;i<0?(l[0]=Math.floor(-i),l[1]=t-this.width-l[0]):u=Math.floor(i),s=s.extend({top:n[0],bottom:n[1],left:l[0],right:l[1]}).extract({left:u,top:o,width:t,height:r})}return await n(s)}}async toBlob(t="image/png",r=1){if(!iu)throw Error("toBlob() is only supported in browser environments.");let s=this.toCanvas();return await s.convertToBlob({type:t,quality:r})}toTensor(t="CHW"){let r=new eN("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if("HWC"===t);else if("CHW"===t)r=r.permute(2,0,1);else throw Error(`Unsupported channel format: ${t}`);return r}toCanvas(){if(!iu)throw Error("toCanvas() is only supported in browser environments.");let t=this.clone().rgba(),r=s(t.width,t.height),n=new i(t.data,t.width,t.height);return r.getContext("2d").putImageData(n,0,0),r}split(){let{data:t,width:r,height:s,channels:i}=this,n=t.constructor,a=t.length/i,o=Array.from({length:i},()=>new n(a));for(let r=0;r<a;++r){let s=i*r;for(let n=0;n<i;++n)o[n][r]=t[s+n]}return o.map(t=>new ip(t,r,s,1))}_update(t,r,s,i=null){return this.data=t,this.width=r,this.height=s,null!==i&&(this.channels=i),this}clone(){return new ip(this.data.slice(),this.width,this.height,this.channels)}convert(t){if(this.channels===t)return this;switch(t){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(t){if(iu){if(V.IS_WEBWORKER_ENV)throw Error("Unable to save an image from a Web Worker.");let r=t.split(".").pop().toLowerCase(),s=ic.get(r)??"image/png";et(t,await this.toBlob(s))}else if(V.IS_FS_AVAILABLE){let r=this.toSharp();return await r.toFile(t)}else throw Error("Unable to save the image because filesystem is disabled in this environment.")}toSharp(){if(iu)throw Error("toSharp() is only supported in server-side environments.");return o(x)(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}ip.read.bind(ip);class ih extends Y{_call(t,r){throw Error("StoppingCriteria needs to be subclassed")}}class im extends Y{constructor(){super(),this.criteria=[]}push(t){this.criteria.push(t)}extend(t){t instanceof im?t=t.criteria:t instanceof ih&&(t=[t]),this.criteria.push(...t)}_call(t,r){let s=Array(t.length).fill(!1);for(let i of this.criteria){let n=i(t,r);for(let t=0;t<s.length;++t)s[t]||=n[t]}return s}[Symbol.iterator](){return this.criteria.values()}}class i_ extends ih{constructor(t,r=null){super(),this.max_length=t,this.max_position_embeddings=r}_call(t){return t.map(t=>t.length>=this.max_length)}}class ig extends ih{constructor(t){super(),Array.isArray(t)||(t=[t]),this.eos_token_id=t}_call(t,r){return t.map(t=>{let r=t.at(-1);return this.eos_token_id.some(t=>r==t)})}}class iy extends Y{constructor(t){super(),this.generation_config=t}async _call(t){return this.sample(t)}async sample(t){throw Error("sample should be implemented in subclasses.")}getLogits(t,r){let s=t.dims.at(-1),i=t.data;if(-1===r)i=i.slice(-s);else{let t=r*s;i=i.slice(t,t+s)}return i}randomSelect(t){let r=0;for(let s=0;s<t.length;++s)r+=t[s];let s=Math.random()*r;for(let r=0;r<t.length;++r)if((s-=t[r])<=0)return r;return 0}static getSampler(t){if(t.do_sample)return new ib(t);if(t.num_beams>1)return new ix(t);if(t.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${t.num_return_sequences}.`);return new iw(t)}}class iw extends iy{async sample(t){return[[BigInt(eg(t.data)[1]),0]]}}class ib extends iy{async sample(t){let r=t.dims.at(-1);this.generation_config.top_k>0&&(r=Math.min(this.generation_config.top_k,r));let[s,i]=await ej(t,r),n=em(s.data);return Array.from({length:this.generation_config.num_beams},()=>{let t=this.randomSelect(n);return[i.data[t],Math.log(n[t])]})}}class ix extends iy{async sample(t){let r=t.dims.at(-1);this.generation_config.top_k>0&&(r=Math.min(this.generation_config.top_k,r));let[s,i]=await ej(t,r),n=em(s.data);return Array.from({length:this.generation_config.num_beams},(t,r)=>[i.data[r],Math.log(n[r])])}}class iv extends il{return_timestamps=null;return_token_timestamps=null;num_frames=null;alignment_heads=null;task=null;language=null;no_timestamps_token_id=null;prompt_ids=null;is_multilingual=null;lang_to_id=null;task_to_id=null;max_initial_timestamp_index=1}const i$={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5,ImageTextToText:6,Musicgen:7,MultiModality:8,Phi3V:9,AudioTextToText:10,AutoEncoder:11},ik=new Map,iE=new Map,iS=new Map;async function iT(r,s,i){let n=i.config?.["transformers.js_config"]??{},a=i.device??n.device;a&&"string"!=typeof a&&(a.hasOwnProperty(s)?a=a[s]:(console.warn(`device not specified for "${s}". Using the default device.`),a=null));let o=a??(V.IS_NODE_ENV?"cpu":"wasm"),l=function(r=null){if(!r)return t;switch(r){case"auto":return eI;case"gpu":return eI.filter(t=>["webgpu","cuda","dml","webnn-gpu"].includes(t))}if(eI.includes(r))return[eT[r]??r];throw Error(`Unsupported device: "${r}". Should be one of: ${eI.join(", ")}.`)}(o),u=n.device_config??{};u.hasOwnProperty(o)&&(n={...n,...u[o]});let d=i.dtype??n.dtype;if("string"!=typeof d&&(d&&d.hasOwnProperty(s)?d=d[s]:(d=sQ[o]??sY.fp32,console.warn(`dtype not specified for "${s}". Using the default dtype (${d}) for this device (${o}).`))),d===sY.auto){let t=n.dtype;"string"!=typeof t&&(t=t?.[s]),d=t&&t!==sY.auto&&sY.hasOwnProperty(t)?t:sQ[o]??sY.fp32}let c=d;if(sZ.hasOwnProperty(c)){if(c===sY.fp16&&"webgpu"===o&&!await sX())throw Error(`The device (${o}) does not support fp16.`)}else throw Error(`Invalid dtype: ${c}. Should be one of: ${Object.keys(sY).join(", ")}`);let p=n.kv_cache_dtype,h=p?"string"==typeof p?p:p[c]??"float32":void 0;if(h&&!["float32","float16"].includes(h))throw Error(`Invalid kv_cache_dtype: ${h}. Should be one of: float32, float16`);let f=sZ[c],m=`${s}${f}.onnx`,_=`${i.subfolder??""}/${m}`,g={...i.session_options};g.executionProviders??=l;let y=n.free_dimension_overrides;y?g.freeDimensionOverrides??=y:o.startsWith("webnn")&&!g.freeDimensionOverrides&&console.warn(`WebNN does not currently support dynamic shapes and requires 'free_dimension_overrides' to be set in config.json, preferably as a field within config["transformers.js_config"]["device_config"]["${o}"]. When 'free_dimension_overrides' is not set, you may experience significant performance degradation.`);let w=V.IS_NODE_ENV&&K.useFSCache,b=ec(r,_,!0,i,w),x=i.use_external_data_format??n.use_external_data_format,v=[];if(x){let t,n=+("object"==typeof x?x.hasOwnProperty(m)?x[m]:!!x.hasOwnProperty(s)&&x[s]:x);if(n>100)throw Error(`The number of external data chunks (${n}) exceeds the maximum allowed value (100).`);for(let t=0;t<n;++t){let s=`${m}_data${0===t?"":"_"+t}`,n=`${i.subfolder??""}/${s}`;v.push(new Promise(async(t,a)=>{let o=await ec(r,n,!0,i,w);t(o instanceof Uint8Array?{path:s,data:o}:s)}))}}else void 0!==g.externalData&&(v=g.externalData.map(async t=>{if("string"==typeof t.data){let s=await ec(r,t.data,!0,i);return{...t,data:s}}return t}));if(v.length>0){let t=await Promise.all(v);V.IS_NODE_ENV||(g.externalData=t)}if("webgpu"===o){let t=sG(i.config,{prefix:"present"});if(Object.keys(t).length>0&&!eR()){let r={};for(let s in t)r[s]="gpu-buffer";g.preferredOutputLocation=r}}return{buffer_or_path:await b,session_options:g,session_config:{dtype:c,kv_cache_dtype:h,device:o}}}async function iI(t,r,s){return Object.fromEntries(await Promise.all(Object.keys(r).map(async i=>{let{buffer_or_path:n,session_options:a,session_config:o}=await iT(t,r[i],s);return[i,await eM(n,a,o)]})))}async function iz(t,r,s){return Object.fromEntries(await Promise.all(Object.keys(r).map(async i=>{let n=await ep(t,r[i],!1,s);return[i,n]})))}let iA=Promise.resolve();async function iC(t,r){let s=function(t,r){let s=Object.create(null),i=[];for(let n of t.inputNames){let t=r[n];if(!(t instanceof eN)){i.push(n);continue}s[n]=eR()?t.clone():t}if(i.length>0)throw Error(`An error occurred during model execution: "Missing the following inputs: ${i.join(", ")}.`);let n=Object.keys(r).length,a=t.inputNames.length;if(n>a){let s=Object.keys(r).filter(r=>!t.inputNames.includes(r));console.warn(`WARNING: Too many inputs were provided (${n} > ${a}). The following inputs will be ignored: "${s.join(", ")}".`)}return s}(t,r);try{let r=Object.fromEntries(Object.entries(s).map(([t,r])=>[t,r.ort_tensor])),i=()=>t.run(r),n=await (V.IS_BROWSER_ENV||V.IS_WEBWORKER_ENV?iA=iA.then(i):i());return function t(r){for(let s in r)eO(r[s])?r[s]=new eN(r[s]):"object"==typeof r[s]&&t(r[s]);return r}(n)}catch(r){let t=Object.fromEntries(Object.entries(s).map(([t,r])=>{let s={type:r.type,dims:r.dims,location:r.location};return"gpu-buffer"!==s.location&&(s.data=r.data),[t,s]}));throw console.error(`An error occurred during model execution: "${r}".`),console.error("Inputs given to model:",t),r}}function iM(t){if(t instanceof eN)return t;if(0===t.length)throw Error("items must be non-empty");if(!Array.isArray(t[0]))return new eN("int64",BigInt64Array.from(t.map(t=>BigInt(t))),[1,t.length]);if(t.some(r=>r.length!==t[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new eN("int64",BigInt64Array.from(t.flat().map(t=>BigInt(t))),[t.length,t[0].length])}function iO(t){return new eN("bool",[t],[1])}async function iB(t,r){let{encoder_outputs:s,input_ids:i,decoder_input_ids:n,...a}=r;if(!s){let i=er(r,t.sessions.model.inputNames);s=(await iR(t,i)).last_hidden_state}return a.input_ids=n,a.encoder_hidden_states=s,t.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(a.encoder_attention_mask=r.attention_mask),await iL(t,a,!0)}async function iR(t,r){let s=t.sessions.model,i=er(r,s.inputNames);if(s.inputNames.includes("inputs_embeds")&&!i.inputs_embeds){if(!r.input_ids)throw Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");i.inputs_embeds=await t.encode_text({input_ids:r.input_ids})}if(s.inputNames.includes("token_type_ids")&&!i.token_type_ids){if(!i.input_ids)throw Error("Both `input_ids` and `token_type_ids` are missing in the model inputs.");i.token_type_ids=e4(i.input_ids.dims)}if(s.inputNames.includes("pixel_mask")&&!i.pixel_mask){if(!i.pixel_values)throw Error("Both `pixel_values` and `pixel_mask` are missing in the model inputs.");let t=i.pixel_values.dims;i.pixel_mask=e3([t[0],t[2],t[3]])}return await iC(s,i)}async function iP(t,r){let s=await t.encode(r);return await t.decode(s)}async function iL(t,r,s=!1){let i=t.sessions[s?"decoder_model_merged":"model"],{past_key_values:n,...a}=r;i.inputNames.includes("use_cache_branch")&&(a.use_cache_branch=iO(!!n)),i.inputNames.includes("position_ids")&&a.attention_mask&&!a.position_ids&&(a.position_ids=function(t,r=null,s=0){let{input_ids:i,inputs_embeds:n,attention_mask:a}=t,{data:o,dims:l}=iV(a,s),u=new eN("int64",o,l);if(r){let t=-(i??n).dims.at(1);u=u.slice(null,[t,null])}return u}(a,n,+!!["paligemma","gemma3_text","gemma3"].includes(t.config.model_type))),t.addPastKeyValues(a,n);let o=er(a,i.inputNames);return await iC(i,o)}function iD({modality_token_id:t,inputs_embeds:r,modality_features:s,input_ids:i,attention_mask:n}){let a=i.tolist().map(r=>r.reduce((r,s,i)=>(s==t&&r.push(i),r),[])),o=a.reduce((t,r)=>t+r.length,0),l=s.dims[0];if(o!==l)throw Error(`Number of tokens and features do not match: tokens: ${o}, features ${l}`);let u=0;for(let t=0;t<a.length;++t){let i=a[t],n=r[t];for(let t=0;t<i.length;++t)n[i[t]].data.set(s[u++].data)}return{inputs_embeds:r,attention_mask:n}}function iU({image_token_id:t,inputs_embeds:r,image_features:s,input_ids:i,attention_mask:n}){return iD({modality_token_id:t,inputs_embeds:r,modality_features:s,input_ids:i,attention_mask:n})}async function iN(t,{encode_function:r,merge_function:s,modality_input_name:i,modality_output_name:n,input_ids:a=null,attention_mask:o=null,position_ids:l=null,inputs_embeds:u=null,past_key_values:d=null,generation_config:c=null,logits_processor:p=null,...h}){let f=h[i];if(!u){if(u=await t.encode_text({input_ids:a,...h}),f&&1!==a.dims[1]){let t=await r({[i]:f,...h});({inputs_embeds:u,attention_mask:o}=s({[n]:t,inputs_embeds:u,input_ids:a,attention_mask:o}))}else if(d&&f&&1===a.dims[1]){let t=a.dims[1],r=Object.values(d)[0].dims.at(-2);o=eY([e3([a.dims[0],r]),o.slice(null,[o.dims[1]-t,o.dims[1]])],1)}}if(!l&&"qwen2_vl"===t.config.model_type){let{image_grid_thw:r,video_grid_thw:s}=h;[l]=t.get_rope_index(a,r,s,o)}return await iL(t,{inputs_embeds:u,past_key_values:d,attention_mask:o,position_ids:l,generation_config:c,logits_processor:p},!0)}async function iF(t,r){return await iN(t,{...r,modality_input_name:"audio_values",modality_output_name:"audio_features",encode_function:t.encode_audio.bind(t),merge_function:t._merge_input_ids_with_audio_features.bind(t)})}async function iq(t,r){return await iN(t,{...r,modality_input_name:"pixel_values",modality_output_name:"image_features",encode_function:t.encode_image.bind(t),merge_function:t._merge_input_ids_with_image_features.bind(t)})}function iV(t,r=0){let[s,i]=t.dims,n=t.data,a=new BigInt64Array(n.length);for(let t=0;t<s;++t){let s=t*i,o=BigInt(r);for(let t=0;t<i;++t){let r=s+t;0n===n[r]?a[r]=BigInt(1):(a[r]=o,o+=n[r])}}return{data:a,dims:t.dims}}function ij(t,r,s,i){if(s.past_key_values){let r=Object.values(s.past_key_values)[0].dims.at(-2),{input_ids:i,attention_mask:n}=s;if(n&&n.dims[1]>i.dims[1]);else if(r<i.dims[1])s.input_ids=i.slice(null,[r,null]);else if(null!=t.config.image_token_index&&i.data.some(r=>r==t.config.image_token_index)){let n=t.config.num_image_tokens;if(!n)throw Error("`num_image_tokens` is missing in the model configuration.");let a=i.dims[1]-(r-n);s.input_ids=i.slice(null,[-a,null]),s.attention_mask=e3([1,r+a])}}return s}function iG(t,r,s,i){return s.past_key_values&&(r=r.map(t=>[t.at(-1)])),{...s,decoder_input_ids:iM(r)}}function iW(t,...r){return t.config.is_encoder_decoder?iG(t,...r):ij(t,...r)}function iH(t,r,s,i){let n=!!s.past_key_values;return null!==i.guidance_scale&&i.guidance_scale>1&&(n?s.input_ids=eY([s.input_ids,s.input_ids],0):(s.input_ids=eY([s.input_ids,e2(s.input_ids,BigInt(i.pad_token_id))],0),s.attention_mask=eY([s.attention_mask,e2(s.attention_mask,0n)],0))),(n||!s.pixel_values)&&(s.pixel_values=e1([0,0,3,384,384],1)),n&&(s.images_seq_mask=new eN("bool",[,].fill(!0).fill(!1,0,1),[1,1]),s.images_emb_mask=new eN("bool",[].fill(!1),[1,1,0])),s}class iK extends Y{main_input_name="input_ids";forward_params=["input_ids","attention_mask"];constructor(t,r,s){super(),this.config=t,this.sessions=r,this.configs=s;let i=iS.get(this.constructor),n=ik.get(i);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,n){case i$.DecoderOnly:this.can_generate=!0,this._forward=iL,this._prepare_inputs_for_generation=ij;break;case i$.Seq2Seq:case i$.Vision2Seq:case i$.Musicgen:this.can_generate=!0,this._forward=iB,this._prepare_inputs_for_generation=iG;break;case i$.EncoderDecoder:this._forward=iB;break;case i$.ImageTextToText:this.can_generate=!0,this._forward=iq,this._prepare_inputs_for_generation=iW;break;case i$.AudioTextToText:this.can_generate=!0,this._forward=iF,this._prepare_inputs_for_generation=iW;break;case i$.Phi3V:this.can_generate=!0,this._prepare_inputs_for_generation=iW;break;case i$.MultiModality:this.can_generate=!0,this._prepare_inputs_for_generation=iH;break;case i$.AutoEncoder:this._forward=iP;break;default:this._forward=iR}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){let t=[];for(let r of Object.values(this.sessions))r?.handler?.dispose&&t.push(r.handler.dispose());return await Promise.all(t)}static async from_pretrained(t,{progress_callback:r=null,config:s=null,cache_dir:i=null,local_files_only:n=!1,revision:a="main",model_file_name:o=null,subfolder:l="onnx",device:u=null,dtype:d=null,use_external_data_format:c=null,session_options:p={}}={}){let h,f={progress_callback:r,config:s,cache_dir:i,local_files_only:n,revision:a,model_file_name:o,subfolder:l,device:u,dtype:d,use_external_data_format:c,session_options:p},m=iS.get(this),_=ik.get(m);if(s=f.config=await sH.from_pretrained(t,f),_===i$.DecoderOnly)h=await Promise.all([iI(t,{model:f.model_file_name??"model"},f),iz(t,{generation_config:"generation_config.json"},f)]);else if(_===i$.Seq2Seq||_===i$.Vision2Seq)h=await Promise.all([iI(t,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},f),iz(t,{generation_config:"generation_config.json"},f)]);else if(_===i$.MaskGeneration)h=await Promise.all([iI(t,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},f)]);else if(_===i$.EncoderDecoder)h=await Promise.all([iI(t,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},f)]);else if(_===i$.ImageTextToText){let r={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};s.is_encoder_decoder&&(r.model="encoder_model"),h=await Promise.all([iI(t,r,f),iz(t,{generation_config:"generation_config.json"},f)])}else if(_===i$.AudioTextToText)h=await Promise.all([iI(t,{embed_tokens:"embed_tokens",audio_encoder:"audio_encoder",decoder_model_merged:"decoder_model_merged"},f),iz(t,{generation_config:"generation_config.json"},f)]);else if(_===i$.Musicgen)h=await Promise.all([iI(t,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},f),iz(t,{generation_config:"generation_config.json"},f)]);else if(_===i$.MultiModality)h=await Promise.all([iI(t,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},f),iz(t,{generation_config:"generation_config.json"},f)]);else if(_===i$.Phi3V)h=await Promise.all([iI(t,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"model",vision_encoder:"vision_encoder"},f),iz(t,{generation_config:"generation_config.json"},f)]);else if(_===i$.AutoEncoder)h=await Promise.all([iI(t,{encoder_model:"encoder_model",decoder_model:"decoder_model"},f)]);else{if(_!==i$.EncoderOnly){let t=m??s?.model_type;"custom"!==t&&console.warn(`Model type for '${t}' not found, assuming encoder-only architecture. Please report this at ${sJ}.`)}h=await Promise.all([iI(t,{model:f.model_file_name??"model"},f)])}return new this(s,...h)}async _call(t){return await this.forward(t)}async forward(t){return await this._forward(this,t)}get generation_config(){return this.configs?.generation_config??null}_get_logits_warper(t){let r=new s3;return null!==t.temperature&&1!==t.temperature&&r.push(new ii(t.temperature)),null!==t.top_k&&0!==t.top_k&&r.push(new io(t.top_k)),null!==t.top_p&&t.top_p<1&&r.push(new ia(t.top_p)),r}_get_logits_processor(t,r,s=null){let i=new s3;if(null!==t.repetition_penalty&&1!==t.repetition_penalty&&i.push(new s7(t.repetition_penalty)),null!==t.no_repeat_ngram_size&&t.no_repeat_ngram_size>0&&i.push(new s9(t.no_repeat_ngram_size)),null!==t.bad_words_ids&&i.push(new ir(t.bad_words_ids,t.eos_token_id)),null!==t.min_length&&null!==t.eos_token_id&&t.min_length>0&&i.push(new ie(t.min_length,t.eos_token_id)),null!==t.min_new_tokens&&null!==t.eos_token_id&&t.min_new_tokens>0&&i.push(new it(r,t.min_new_tokens,t.eos_token_id)),null!==t.forced_bos_token_id&&i.push(new s4(t.forced_bos_token_id)),null!==t.forced_eos_token_id&&i.push(new s6(t.max_length,t.forced_eos_token_id)),null!==t.begin_suppress_tokens){let s=r>1||null===t.forced_bos_token_id?r:r+1;i.push(new s8(t.begin_suppress_tokens,s))}return null!==t.guidance_scale&&t.guidance_scale>1&&i.push(new is(t.guidance_scale)),null!==s&&i.extend(s),i}_prepare_generation_config(t,r,s=il){let i={...this.config};for(let t of["decoder","generator","text_config"])t in i&&Object.assign(i,i[t]);let n=new s(i);return Object.assign(n,this.generation_config??{}),t&&Object.assign(n,t),r&&Object.assign(n,er(r,Object.getOwnPropertyNames(n))),n}_get_stopping_criteria(t,r=null){let s=new im;return null!==t.max_length&&s.push(new i_(t.max_length,this.config.max_position_embeddings??null)),null!==t.eos_token_id&&s.push(new ig(t.eos_token_id)),r&&s.extend(r),s}_validate_model_class(){if(!this.can_generate){let t=iS.get(this.constructor),r=new Set,s=this.config.model_type;for(let t of[oO,oL,oM,oT]){let i=t.get(s);i&&r.add(i[0])}let i=`The current model class (${t}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw r.size>0&&(i+=` Please use the following class instead: ${[...r].join(", ")}`),Error(i)}}prepare_inputs_for_generation(...t){return this._prepare_inputs_for_generation(this,...t)}_update_model_kwargs_for_generation({generated_input_ids:t,outputs:r,model_inputs:s,is_encoder_decoder:i}){return s.past_key_values=this.getPastKeyValues(r,s.past_key_values),s.input_ids=new eN("int64",t.flat(),[t.length,1]),i||(s.attention_mask=eY([s.attention_mask,e3([s.attention_mask.dims[0],1])],1)),s.position_ids=null,s}_prepare_model_inputs({inputs:t,bos_token_id:r,model_kwargs:s}){let i=er(s,this.forward_params),n=this.main_input_name;if(n in i){if(t)throw Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else i[n]=t;return{inputs_tensor:i[n],model_inputs:i,model_input_name:n}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:t,model_inputs:r,model_input_name:s,generation_config:i}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!r.inputs_embeds&&"_prepare_inputs_embeds"in this){let{input_ids:t,pixel_values:s,attention_mask:i,...n}=r,a=await this._prepare_inputs_embeds(r);r={...n,...er(a,["inputs_embeds","attention_mask"])}}let{last_hidden_state:n}=await iR(this,r);if(null!==i.guidance_scale&&i.guidance_scale>1)n=eY([n,e2(n,0)],0),"attention_mask"in r&&(r.attention_mask=eY([r.attention_mask,e4(r.attention_mask.dims)],0));else if(r.decoder_input_ids){let t=iM(r.decoder_input_ids).dims[0];if(t!==n.dims[0]){if(1!==n.dims[0])throw Error(`The encoder outputs have a different batch size (${n.dims[0]}) than the decoder inputs (${t}).`);n=eY(Array.from({length:t},()=>n),0)}}return r.encoder_outputs=n,r}_prepare_decoder_input_ids_for_generation({batch_size:t,model_input_name:r,model_kwargs:s,decoder_start_token_id:i,bos_token_id:n,generation_config:a}){let{decoder_input_ids:o,...l}=s;if(!(o instanceof eN)){if(o)Array.isArray(o[0])||(o=Array.from({length:t},()=>o));else if(i??=n,"musicgen"===this.config.model_type)o=Array.from({length:t*this.config.decoder.num_codebooks},()=>[i]);else if(Array.isArray(i)){if(i.length!==t)throw Error(`\`decoder_start_token_id\` expcted to have length ${t} but got ${i.length}`);o=i}else o=Array.from({length:t},()=>[i]);o=iM(o)}return s.decoder_attention_mask=e3(o.dims),{input_ids:o,model_inputs:l}}async generate({inputs:t=null,generation_config:r=null,logits_processor:s=null,stopping_criteria:i=null,streamer:n=null,...a}){let o,l;this._validate_model_class(),r=this._prepare_generation_config(r,a);let{inputs_tensor:u,model_inputs:d,model_input_name:c}=this._prepare_model_inputs({inputs:t,model_kwargs:a}),p=this.config.is_encoder_decoder;p&&("encoder_outputs"in d||(d=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:u,model_inputs:d,model_input_name:c,generation_config:r}))),p?{input_ids:o,model_inputs:d}=this._prepare_decoder_input_ids_for_generation({batch_size:d[c].dims.at(0),model_input_name:c,model_kwargs:d,decoder_start_token_id:r.decoder_start_token_id,bos_token_id:r.bos_token_id,generation_config:r}):o=d[c];let h=o.dims.at(-1);null!==r.max_new_tokens&&(r.max_length=h+r.max_new_tokens);let f=this._get_logits_processor(r,h,s),m=this._get_stopping_criteria(r,i),_=d[c].dims.at(0),g=iy.getSampler(r),y=Array(_).fill(0),w=o.tolist();n&&n.put(w);let b={};for(;;){if(d=this.prepare_inputs_for_generation(w,d,r),l=await this.forward(d),r.output_attentions&&r.return_dict_in_generate){let t=this.getAttentions(l);for(let r in t)r in b||(b[r]=[]),b[r].push(t[r])}let t=f(w,l.logits.slice(null,-1,null)),s=[];for(let r=0;r<t.dims.at(0);++r){let i=t[r];for(let[t,n]of(await g(i))){let i=BigInt(t);y[r]+=n,w[r].push(i),s.push([i]);break}}if(n&&n.put(s),m(w).every(t=>t))break;d=this._update_model_kwargs_for_generation({generated_input_ids:s,outputs:l,model_inputs:d,is_encoder_decoder:p})}n&&n.end();let x=this.getPastKeyValues(l,d.past_key_values,!0),v=new eN("int64",w.flat(),[w.length,w[0].length]);if(r.return_dict_in_generate)return{sequences:v,past_key_values:x,...b};for(let t of Object.values(l))"gpu-buffer"===t.location&&t.dispose();return v}getPastKeyValues(t,r,s=!1){let i=Object.create(null);for(let n in t)if(n.startsWith("present")){let a=n.replace("present","past_key_values"),o=n.includes("encoder");if(o&&r?i[a]=r[a]:i[a]=t[n],r&&(!o||s)){let t=r[a];"gpu-buffer"===t.location&&t.dispose()}}return i}getAttentions(t){let r={};for(let s of["cross_attentions","encoder_attentions","decoder_attentions"])for(let i in t)i.startsWith(s)&&(s in r||(r[s]=[]),r[s].push(t[i]));return r}addPastKeyValues(t,r){if(r)Object.assign(t,r);else{let r=this.sessions.decoder_model_merged??this.sessions.model,s=r?.config?.kv_cache_dtype??"float32",i="float16"===s?new eU.float16:[],n=(t[this.main_input_name]??t.attention_mask)?.dims?.[0]??1,a=sG(this.config,{batch_size:n});for(let r in a)t[r]=new eN(s,i,a[r])}}async encode_image({pixel_values:t}){let r=(await iC(this.sessions.vision_encoder,{pixel_values:t})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${r.dims[1]}).`),this.config.num_image_tokens=r.dims[1]),r}async encode_text({input_ids:t}){return(await iC(this.sessions.embed_tokens,{input_ids:t})).inputs_embeds}async encode_audio({audio_values:t}){return(await iC(this.sessions.audio_encoder,{audio_values:t})).audio_features}}class iX{}class iY extends iK{}class iQ extends iK{}class iZ extends iK{}class iJ extends iK{}class i0 extends iK{}class i1 extends iK{}class i2 extends iK{}class i3 extends iK{}class i4 extends iK{}class i6 extends iK{}class i8 extends iK{}class i5 extends iK{}class i9 extends iK{}class i7 extends iK{}class ne extends iK{}class nt extends iK{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"]}class nr extends iK{}class ns extends iK{}class ni extends iK{}class nn extends iK{}class na extends iK{}class no extends iK{}class nl extends iK{}class nu extends iK{}class nd extends iK{}class nc extends iK{}class np extends iK{requires_attention_mask=!1;main_input_name="input_features";forward_params=["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"]}class nh extends np{_prepare_generation_config(t,r){return super._prepare_generation_config(t,r,iv)}_retrieve_init_tokens(t){let r=[t.decoder_start_token_id],s=t.language,i=t.task;if(t.is_multilingual){s||(console.warn("No language specified - defaulting to English (en)."),s="en");let n=function(t){t=t.toLowerCase();let r=t5.get(t);if(void 0===r){let s=t.match(/^<\|([a-z]{2})\|>$/);if(s&&(t=s[1]),t8.has(t))r=t;else{let r=2===t.length?t8.keys():t8.values();throw Error(`Language "${t}" is not supported. Must be one of: ${JSON.stringify(Array.from(r))}`)}}return r}(s),a=`<|${n}|>`;r.push(t.lang_to_id[a]),r.push(t.task_to_id[i??"transcribe"])}else if(s||i)throw Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!t.return_timestamps&&t.no_timestamps_token_id&&r.at(-1)!==t.no_timestamps_token_id?r.push(t.no_timestamps_token_id):t.return_timestamps&&r.at(-1)===t.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),r.pop()),r.filter(t=>null!=t)}async generate({inputs:t=null,generation_config:r=null,logits_processor:s=null,stopping_criteria:i=null,...n}){r=this._prepare_generation_config(r,n);let a=n.decoder_input_ids??this._retrieve_init_tokens(r);if(r.return_timestamps&&(s??=new s3).push(new s5(r,a)),r.begin_suppress_tokens&&(s??=new s3).push(new s8(r.begin_suppress_tokens,a.length)),r.return_token_timestamps){if(!r.alignment_heads)throw Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");"translate"===r.task&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),r.output_attentions=!0,r.return_dict_in_generate=!0}let o=await super.generate({inputs:t,generation_config:r,logits_processor:s,decoder_input_ids:a,...n});return r.return_token_timestamps&&(o.token_timestamps=this._extract_token_timestamps(o,r.alignment_heads,r.num_frames)),o}_extract_token_timestamps(t,r,s=null,i=.02){if(!t.cross_attentions)throw Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");null==s&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let n=this.config.median_filter_width;void 0===n&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),n=7);let a=t.cross_attentions,o=Array.from({length:this.config.decoder_layers},(t,r)=>eY(a.map(t=>t[r]),2)),l=eQ(r.map(([t,r])=>{if(t>=o.length)throw Error(`Layer index ${t} is out of bounds for cross attentions (length ${o.length}).`);return s?o[t].slice(null,r,null,[0,s]):o[t].slice(null,r)})).transpose(1,0,2,3),[u,d]=function(t,r=null,s=1,i=!1){let n=t.data,a=t.dims;if(null===r){let r=n.reduce((t,r)=>t+r,0)/n.length,i=Math.sqrt(n.reduce((t,s)=>t+(s-r)**2,0)/(n.length-s)),a=new eN(t.type,[r],[]);return[new eN(t.type,[i],[]),a]}let o=eJ(t,r=eX(r,a.length),i),l=o.data,[u,d,c]=eZ((t,r,s,i)=>t+(r-l[i])**2,t,r,i);for(let t=0;t<d.length;++t)d[t]=Math.sqrt(d[t]/(a[r]-s));return[new eN(u,d,c),o]}(l,-2,0,!0),c=l.clone();for(let t=0;t<c.dims[0];++t){let r=c[t];for(let s=0;s<r.dims[0];++s){let i=r[s],a=u[t][s][0].data,o=d[t][s][0].data;for(let t=0;t<i.dims[0];++t){let r=i[t].data;for(let t=0;t<r.length;++t)r[t]=(r[t]-o[t])/a[t];r.set(function(t,r){if(r%2==0||r<=0)throw Error("Window size must be a positive odd number");let s=new t.constructor(t.length),i=new t.constructor(r),n=Math.floor(r/2);for(let r=0;r<t.length;++r){let a=0;for(let s=-n;s<=n;++s){let n=r+s;n<0?n=Math.abs(n):n>=t.length&&(n=2*(t.length-1)-n),i[a++]=t[n]}i.sort(),s[r]=i[n]}return s}(r,n))}}}let p=[eJ(c,1)],h=t.sequences.dims,f=new eN("float32",new Float32Array(h[0]*h[1]),h);for(let t=0;t<h[0];++t){let[r,s]=function(t){let r=t.length,s=t[0].length,i=[r+1,s+1],n=Array.from({length:i[0]},()=>Array(i[1]).fill(1/0));n[0][0]=0;let a=Array.from({length:i[0]},()=>Array(i[1]).fill(-1));for(let r=1;r<i[1];++r)for(let s=1;s<i[0];++s){let i,o,l=n[s-1][r-1],u=n[s-1][r],d=n[s][r-1];l<u&&l<d?(i=l,o=0):u<l&&u<d?(i=u,o=1):(i=d,o=2),n[s][r]=t[s-1][r-1]+i,a[s][r]=o}for(let t=0;t<i[1];++t)a[0][t]=2;for(let t=0;t<i[0];++t)a[t][0]=1;let o=r,l=s,u=[],d=[];for(;o>0||l>0;)switch(u.push(o-1),d.push(l-1),a[o][l]){case 0:--o,--l;break;case 1:--o;break;case 2:--l;break;default:throw Error(`Internal error in dynamic time warping. Unexpected trace[${o}, ${l}]. Please file a bug report.`)}return u.reverse(),d.reverse(),[u,d]}(p[t].neg().squeeze_(0).tolist()),n=J([1],Array.from({length:r.length-1},(t,s)=>r[s+1]-r[s])).map(t=>!!t),a=[];for(let t=0;t<n.length;++t)n[t]&&a.push(s[t]*i);f[t].data.set(a,1)}return f}}class nf extends iK{requires_attention_mask=!1;main_input_name="input_values";forward_params=["input_values","decoder_input_ids","past_key_values"]}class nm extends iK{main_input_name="pixel_values";forward_params=["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"]}class n_ extends iK{forward_params=["input_ids","attention_mask","pixel_values","position_ids","past_key_values"]}class ng extends n_{_merge_input_ids_with_image_features({inputs_embeds:t,image_features:r,input_ids:s,attention_mask:i}){let n=this.config.image_token_index,a=s.tolist().map(t=>t.findIndex(t=>t==n)),o=a.every(t=>-1===t),l=a.every(t=>-1!==t);if(!o&&!l)throw Error("Every input should contain either 0 or 1 image token.");if(o)return{inputs_embeds:t,attention_mask:i};let u=[],d=[];for(let s=0;s<a.length;++s){let n=a[s],o=t[s],l=r[s],c=i[s];u.push(eY([o.slice([0,n]),l,o.slice([n+1,o.dims[0]])],0)),d.push(eY([c.slice([0,n]),e3([l.dims[0]]),c.slice([n+1,c.dims[0]])],0))}return{inputs_embeds:eQ(u,0),attention_mask:eQ(d,0)}}}class ny extends iK{forward_params=["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"];main_input_name="inputs_embeds"}class nw extends iK{forward_params=["input_ids","attention_mask","pixel_values","position_ids","past_key_values"]}class nb extends iK{forward_params=["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"]}class nx extends nb{async encode_image({pixel_values:t,pixel_attention_mask:r}){return(await iC(this.sessions.vision_encoder,{pixel_values:t,pixel_attention_mask:r})).image_features}_merge_input_ids_with_image_features(t){let r=t.image_features.dims.at(-1),s=t.image_features.view(-1,r);return iU({image_token_id:this.config.image_token_id,...t,image_features:s})}}class nv extends nx{}class n$ extends iK{forward_params=["input_ids","inputs_embeds","attention_mask","position_ids","pixel_values","image_sizes","past_key_values"]}class nk extends n${async forward({input_ids:t=null,attention_mask:r=null,pixel_values:s=null,image_sizes:i=null,position_ids:n=null,inputs_embeds:a=null,past_key_values:o=null,generation_config:l=null,logits_processor:u=null,...d}){if(!a){let r;if(s&&1!==t.dims[1]){if(!i)throw Error("`image_sizes` must be provided when `pixel_values` is provided.");({image_features:r}=await iC(this.sessions.vision_encoder,{pixel_values:s,image_sizes:i}))}else r=new eN("float32",[],[0,this.config.normalized_config.hidden_size]);({inputs_embeds:a}=await iC(this.sessions.prepare_inputs_embeds,{input_ids:t,image_features:r}))}return await iL(this,{inputs_embeds:a,past_key_values:o,attention_mask:r,position_ids:n,generation_config:l,logits_processor:u},!1)}}class nE extends iK{}class nS extends nE{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"text_model"})}}class nT extends nE{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"vision_model"})}}class nI extends iK{}class nz extends iK{}class nA extends iK{}class nC extends iK{}class nM extends iK{}class nO extends iK{}class nB extends iK{}class nR extends iK{}class nP extends iK{}class nL extends iK{}class nD extends iK{}class nU extends iK{}class nN extends iK{}class nF extends iK{}class nq extends iK{}class nV extends iK{}class nj extends iK{}class nG extends iK{}class nW extends iK{}class nH extends iK{}class nK extends iK{}class nX extends iK{}class nY extends iK{}class nQ extends iK{}class nZ extends iK{}class nJ extends iK{}class n0 extends iK{forward_params=["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"]}class n1 extends iK{}class n2 extends iK{}class n3 extends iK{}class n4 extends iK{}class n6 extends iK{}class n8 extends iK{}class n5 extends iK{}class n9 extends iK{}class n7 extends iK{}class ae extends iK{}class at extends iK{}class ar extends iK{}class as extends iK{}class ai extends iK{}class an extends iK{}class aa extends iK{}class ao extends iK{}class al extends iK{}class au extends iK{}class ad extends iK{}class ac extends ad{async _call(t){return new ah(await super._call(t))}}class ap extends iX{constructor({logits:t,pred_boxes:r}){super(),this.logits=t,this.pred_boxes=r}}class ah extends iX{constructor({logits:t,pred_boxes:r,pred_masks:s}){super(),this.logits=t,this.pred_boxes=r,this.pred_masks=s}}class af extends iK{}class am extends iX{constructor({logits:t,pred_boxes:r}){super(),this.logits=t,this.pred_boxes=r}}class a_ extends iK{}class ag extends am{}class ay extends iK{}class aw extends am{}class ab extends iK{}class ax extends iK{}class av extends ap{}class a$ extends iK{}class ak extends iK{}class aE extends iK{}class aS extends iK{}class aT extends iK{}class aI extends iK{}class az extends iK{}class aA extends iK{}class aC extends iK{}class aM extends iK{}class aO extends iK{}class aB extends iK{}class aR extends iK{}class aP extends iK{}class aL extends iK{}class aD extends iK{}class aU extends iK{}class aN extends iK{}class aF extends iK{}class aq extends iK{}class aV extends iX{constructor({logits:t,pred_boxes:r}){super(),this.logits=t,this.pred_boxes=r}}class aj extends iK{}class aG extends iX{constructor({iou_scores:t,pred_masks:r}){super(),this.iou_scores=t,this.pred_masks=r}}class aW extends iK{}class aH extends iK{}class aK extends iK{}class aX extends iK{}class aY extends iK{}class aQ extends iK{}class aZ extends iK{}class aJ extends iK{}class a0 extends iK{}class a1 extends iK{}class a2 extends iK{}class a3 extends iK{}class a4 extends iK{}class a6 extends iK{}class a8 extends iK{}class a5 extends iK{}class a9 extends iK{}class a7 extends a9{async _call(t){return new ld(await super._call(t))}}class oe extends iK{}class ot extends iK{}class or extends iK{}class os extends iK{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"];_apply_and_filter_by_delay_pattern_mask(t){let[r,s]=t.dims,i=this.config.decoder.num_codebooks,n=s-i,a=0;for(let r=0;r<t.size;++r){if(t.data[r]===this.config.decoder.pad_token_id)continue;let o=r%s-Math.floor(r/s)%i;o>0&&o<=n&&(t.data[a++]=t.data[r])}let o=Math.floor(r/i),l=a/(o*i);return new eN(t.type,t.data.slice(0,a),[o,i,l])}prepare_inputs_for_generation(t,r,s){let i=structuredClone(t);for(let t=0;t<i.length;++t)for(let r=0;r<i[t].length;++r)t%this.config.decoder.num_codebooks>=r&&(i[t][r]=BigInt(this.config.decoder.pad_token_id));return null!==s.guidance_scale&&s.guidance_scale>1&&(i=i.concat(i)),super.prepare_inputs_for_generation(i,r,s)}async generate(t){let r=await super.generate(t),s=this._apply_and_filter_by_delay_pattern_mask(r).unsqueeze_(0),{audio_values:i}=await iC(this.sessions.encodec_decode,{audio_codes:s});return i}}class oi extends iK{}class on extends iK{}class oa extends iK{}class oo extends iK{}class ol extends iK{}class ou extends iK{}class od extends iX{constructor({char_logits:t,bpe_logits:r,wp_logits:s}){super(),this.char_logits=t,this.bpe_logits=r,this.wp_logits=s}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class oc extends iK{}class op extends iK{}class oh extends iK{}class of extends iK{forward_params=["input_ids","attention_mask","position_ids","audio_values","past_key_values"]}class om extends iK{main_input_name="input_values";forward_params=["input_values"]}class o_ extends iX{constructor({audio_codes:t}){super(),this.audio_codes=t}}class og extends iX{constructor({audio_values:t}){super(),this.audio_values=t}}class oy extends iK{main_input_name="input_values";forward_params=["input_values"]}class ow extends iX{constructor({audio_codes:t}){super(),this.audio_codes=t}}class ob extends iX{constructor({audio_values:t}){super(),this.audio_values=t}}class ox extends iK{main_input_name="input_values";forward_params=["input_values"]}class ov{static MODEL_CLASS_MAPPINGS=null;static BASE_IF_FAIL=!1;static async from_pretrained(t,{progress_callback:r=null,config:s=null,cache_dir:i=null,local_files_only:n=!1,revision:a="main",model_file_name:o=null,subfolder:l="onnx",device:u=null,dtype:d=null,use_external_data_format:c=null,session_options:p={}}={}){let h={progress_callback:r,config:s,cache_dir:i,local_files_only:n,revision:a,model_file_name:o,subfolder:l,device:u,dtype:d,use_external_data_format:c,session_options:p};if(h.config=await sH.from_pretrained(t,h),!this.MODEL_CLASS_MAPPINGS)throw Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);let f=h.config.model_type;for(let r of this.MODEL_CLASS_MAPPINGS){let s=r.get(f);if(!s){for(let t of r.values())if(t[0]===f){s=t;break}if(!s)continue}return await s[1].from_pretrained(t,h)}if(this.BASE_IF_FAIL)return o8.has(f)||console.warn(`Unknown model class "${f}", attempting to construct from base class.`),await iK.from_pretrained(t,h);throw Error(`Unsupported model type: ${f}`)}}const o$=new Map([["bert",["BertModel",class extends iY{}]],["modernbert",["ModernBertModel",class extends iQ{}]],["nomic_bert",["NomicBertModel",class extends iZ{}]],["roformer",["RoFormerModel",class extends iJ{}]],["electra",["ElectraModel",class extends i1{}]],["esm",["EsmModel",class extends i8{}]],["convbert",["ConvBertModel",class extends i0{}]],["camembert",["CamembertModel",class extends i2{}]],["deberta",["DebertaModel",class extends i3{}]],["deberta-v2",["DebertaV2Model",class extends i4{}]],["mpnet",["MPNetModel",class extends i9{}]],["albert",["AlbertModel",class extends ne{}]],["distilbert",["DistilBertModel",class extends i6{}]],["roberta",["RobertaModel",class extends nl{}]],["xlm",["XLMModel",class extends nu{}]],["xlm-roberta",["XLMRobertaModel",class extends nd{}]],["clap",["ClapModel",class extends a5{}]],["clip",["CLIPModel",class extends nE{}]],["clipseg",["CLIPSegModel",class extends nC{}]],["chinese_clip",["ChineseCLIPModel",class extends nz{}]],["siglip",["SiglipModel",class extends nI{}]],["jina_clip",["JinaCLIPModel",class extends nA{async forward(t){let r=!t.input_ids,s=!t.pixel_values;if(r&&s)throw Error("Either `input_ids` or `pixel_values` should be provided.");if(r&&(t.input_ids=e3([t.pixel_values.dims[0],1])),s){let{image_size:r}=this.config.vision_config;t.pixel_values=e1([0,3,r,r],0)}let{text_embeddings:i,image_embeddings:n,l2norm_text_embeddings:a,l2norm_image_embeddings:o}=await super.forward(t),l={};return r||(l.text_embeddings=i,l.l2norm_text_embeddings=a),s||(l.image_embeddings=n,l.l2norm_image_embeddings=o),l}}]],["mobilebert",["MobileBertModel",class extends i5{}]],["squeezebert",["SqueezeBertModel",class extends i7{}]],["wav2vec2",["Wav2Vec2Model",class extends aK{}]],["wav2vec2-bert",["Wav2Vec2BertModel",class extends aJ{}]],["unispeech",["UniSpeechModel",class extends aQ{}]],["unispeech-sat",["UniSpeechSatModel",class extends aZ{}]],["hubert",["HubertModel",class extends aK{}]],["wavlm",["WavLMModel",class extends a0{}]],["audio-spectrogram-transformer",["ASTModel",class extends nc{}]],["vits",["VitsModel",a7]],["pyannote",["PyAnnoteModel",class extends aX{}]],["wespeaker-resnet",["WeSpeakerResNetModel",class extends aY{}]],["detr",["DetrModel",class extends ad{}]],["rt_detr",["RTDetrModel",class extends af{}]],["rt_detr_v2",["RTDetrV2Model",class extends a_{}]],["rf_detr",["RFDetrModel",class extends ay{}]],["d_fine",["DFineModel",class extends ab{}]],["table-transformer",["TableTransformerModel",class extends ax{}]],["vit",["ViTModel",class extends n8{}]],["ijepa",["IJepaModel",class extends n5{}]],["pvt",["PvtModel",class extends n7{}]],["vit_msn",["ViTMSNModel",class extends at{}]],["vit_mae",["ViTMAEModel",class extends ae{}]],["groupvit",["GroupViTModel",class extends ar{}]],["fastvit",["FastViTModel",class extends as{}]],["mobilevit",["MobileViTModel",class extends an{}]],["mobilevitv2",["MobileViTV2Model",class extends aa{}]],["owlvit",["OwlViTModel",class extends ao{}]],["owlv2",["Owlv2Model",class extends al{}]],["beit",["BeitModel",class extends au{}]],["deit",["DeiTModel",class extends a${}]],["hiera",["HieraModel",class extends ak{}]],["convnext",["ConvNextModel",class extends aL{}]],["convnextv2",["ConvNextV2Model",class extends aD{}]],["dinov2",["Dinov2Model",class extends aU{}]],["dinov2_with_registers",["Dinov2WithRegistersModel",class extends aN{}]],["resnet",["ResNetModel",class extends aE{}]],["swin",["SwinModel",class extends aS{}]],["swin2sr",["Swin2SRModel",class extends aT{}]],["donut-swin",["DonutSwinModel",class extends aP{}]],["yolos",["YolosModel",class extends aq{}]],["dpt",["DPTModel",class extends aI{}]],["glpn",["GLPNModel",class extends aR{}]],["hifigan",["SpeechT5HifiGan",class extends iK{main_input_name="spectrogram"}]],["efficientnet",["EfficientNetModel",class extends or{}]],["decision_transformer",["DecisionTransformerModel",class extends ol{}]],["patchtst",["PatchTSTForPrediction",class extends op{}]],["patchtsmixer",["PatchTSMixerForPrediction",class extends oh{}]],["mobilenet_v1",["MobileNetV1Model",class extends oi{}]],["mobilenet_v2",["MobileNetV2Model",class extends on{}]],["mobilenet_v3",["MobileNetV3Model",class extends oa{}]],["mobilenet_v4",["MobileNetV4Model",class extends oo{}]],["maskformer",["MaskFormerModel",class extends aB{}]],["mgp-str",["MgpstrForSceneTextRecognition",class extends oc{async _call(t){return new od(await super._call(t))}}]],["style_text_to_speech_2",["StyleTextToSpeech2Model",class extends a1{}]]]),ok=new Map([["t5",["T5Model",class extends nt{}]],["longt5",["LongT5Model",class extends nr{}]],["mt5",["MT5Model",class extends ns{}]],["bart",["BartModel",class extends ni{}]],["mbart",["MBartModel",class extends nn{}]],["marian",["MarianModel",class extends aW{}]],["whisper",["WhisperModel",class extends np{}]],["m2m_100",["M2M100Model",class extends aH{}]],["blenderbot",["BlenderbotModel",class extends na{}]],["blenderbot-small",["BlenderbotSmallModel",class extends no{}]]]),oE=new Map([["mimi",["MimiModel",class extends om{async encode(t){return new o_(await iC(this.sessions.encoder_model,t))}async decode(t){return new og(await iC(this.sessions.decoder_model,t))}}]],["dac",["DacModel",class extends oy{async encode(t){return new ow(await iC(this.sessions.encoder_model,t))}async decode(t){return new ob(await iC(this.sessions.decoder_model,t))}}]],["snac",["SnacModel",class extends ox{async encode(t){return await iC(this.sessions.encoder_model,t)}async decode(t){return await iC(this.sessions.decoder_model,t)}}]]]),oS=new Map([["bloom",["BloomModel",class extends n3{}]],["jais",["JAISModel",class extends nO{}]],["gpt2",["GPT2Model",class extends nM{}]],["gptj",["GPTJModel",class extends nP{}]],["gpt_bigcode",["GPTBigCodeModel",class extends nL{}]],["gpt_neo",["GPTNeoModel",class extends nB{}]],["gpt_neox",["GPTNeoXModel",class extends nR{}]],["codegen",["CodeGenModel",class extends nD{}]],["llama",["LlamaModel",class extends nU{}]],["exaone",["ExaoneModel",class extends nq{}]],["olmo",["OlmoModel",class extends nj{}]],["olmo2",["Olmo2Model",class extends nG{}]],["mobilellm",["MobileLLMModel",class extends nV{}]],["granite",["GraniteModel",class extends nW{}]],["cohere",["CohereModel",class extends nH{}]],["gemma",["GemmaModel",class extends nK{}]],["gemma2",["Gemma2Model",class extends nX{}]],["gemma3_text",["Gemma3Model",class extends nY{}]],["helium",["HeliumModel",class extends nN{}]],["glm",["GlmModel",class extends nF{}]],["openelm",["OpenELMModel",class extends nQ{}]],["qwen2",["Qwen2Model",class extends nZ{}]],["qwen3",["Qwen3Model",class extends nJ{}]],["phi",["PhiModel",class extends n1{}]],["phi3",["Phi3Model",class extends n2{}]],["mpt",["MptModel",class extends n4{}]],["opt",["OPTModel",class extends n6{}]],["mistral",["MistralModel",class extends a4{}]],["starcoder2",["Starcoder2Model",class extends a6{}]],["falcon",["FalconModel",class extends a8{}]],["stablelm",["StableLmModel",class extends ot{}]]]),oT=new Map([["speecht5",["SpeechT5ForSpeechToText",class extends a2{}]],["whisper",["WhisperForConditionalGeneration",nh]],["lite-whisper",["LiteWhisperForConditionalGeneration",class extends nh{}]],["moonshine",["MoonshineForConditionalGeneration",class extends nf{}]]]),oI=new Map([["speecht5",["SpeechT5ForTextToSpeech",class extends a2{async generate_speech(t,r,{threshold:s=.5,minlenratio:i=0,maxlenratio:n=20,vocoder:a=null}={}){let{encoder_outputs:o,encoder_attention_mask:l}=await iR(this,{input_ids:t}),u=o.dims[1]/this.config.reduction_factor,d=Math.floor(u*n),c=Math.floor(u*i),p=this.config.num_mel_bins,h=[],f=null,m=null,_=0;for(;;){let t;++_;let i={use_cache_branch:iO(!!m),output_sequence:m?m.output_sequence_out:new eN("float32",new Float32Array(p),[1,1,p]),encoder_attention_mask:l,speaker_embeddings:r,encoder_hidden_states:o};this.addPastKeyValues(i,f),m=await iC(this.sessions.decoder_model_merged,i),f=this.getPastKeyValues(m,f);let{prob:n,spectrum:a}=m;if(h.push(a),_>=c&&(Array.from(n.data).filter(t=>t>=s).length>0||_>=d))break}let g=eY(h),{waveform:y}=await iC(a.sessions.model,{spectrogram:g});return{spectrogram:g,waveform:y}}}]]]),oz=new Map([["vits",["VitsModel",a7]],["musicgen",["MusicgenForConditionalGeneration",os]]]),oA=new Map([["bert",["BertForSequenceClassification",class extends iY{async _call(t){return new ls(await super._call(t))}}]],["modernbert",["ModernBertForSequenceClassification",class extends iQ{async _call(t){return new ls(await super._call(t))}}]],["roformer",["RoFormerForSequenceClassification",class extends iJ{async _call(t){return new ls(await super._call(t))}}]],["electra",["ElectraForSequenceClassification",class extends i1{async _call(t){return new ls(await super._call(t))}}]],["esm",["EsmForSequenceClassification",class extends i8{async _call(t){return new ls(await super._call(t))}}]],["convbert",["ConvBertForSequenceClassification",class extends i0{async _call(t){return new ls(await super._call(t))}}]],["camembert",["CamembertForSequenceClassification",class extends i2{async _call(t){return new ls(await super._call(t))}}]],["deberta",["DebertaForSequenceClassification",class extends i3{async _call(t){return new ls(await super._call(t))}}]],["deberta-v2",["DebertaV2ForSequenceClassification",class extends i4{async _call(t){return new ls(await super._call(t))}}]],["mpnet",["MPNetForSequenceClassification",class extends i9{async _call(t){return new ls(await super._call(t))}}]],["albert",["AlbertForSequenceClassification",class extends ne{async _call(t){return new ls(await super._call(t))}}]],["distilbert",["DistilBertForSequenceClassification",class extends i6{async _call(t){return new ls(await super._call(t))}}]],["roberta",["RobertaForSequenceClassification",class extends nl{async _call(t){return new ls(await super._call(t))}}]],["xlm",["XLMForSequenceClassification",class extends nu{async _call(t){return new ls(await super._call(t))}}]],["xlm-roberta",["XLMRobertaForSequenceClassification",class extends nd{async _call(t){return new ls(await super._call(t))}}]],["bart",["BartForSequenceClassification",class extends ni{async _call(t){return new ls(await super._call(t))}}]],["mbart",["MBartForSequenceClassification",class extends nn{async _call(t){return new ls(await super._call(t))}}]],["mobilebert",["MobileBertForSequenceClassification",class extends i5{async _call(t){return new ls(await super._call(t))}}]],["squeezebert",["SqueezeBertForSequenceClassification",class extends i7{async _call(t){return new ls(await super._call(t))}}]]]),oC=new Map([["bert",["BertForTokenClassification",class extends iY{async _call(t){return new ln(await super._call(t))}}]],["modernbert",["ModernBertForTokenClassification",class extends iQ{async _call(t){return new ln(await super._call(t))}}]],["roformer",["RoFormerForTokenClassification",class extends iJ{async _call(t){return new ln(await super._call(t))}}]],["electra",["ElectraForTokenClassification",class extends i1{async _call(t){return new ln(await super._call(t))}}]],["esm",["EsmForTokenClassification",class extends i8{async _call(t){return new ln(await super._call(t))}}]],["convbert",["ConvBertForTokenClassification",class extends i0{async _call(t){return new ln(await super._call(t))}}]],["camembert",["CamembertForTokenClassification",class extends i2{async _call(t){return new ln(await super._call(t))}}]],["deberta",["DebertaForTokenClassification",class extends i3{async _call(t){return new ln(await super._call(t))}}]],["deberta-v2",["DebertaV2ForTokenClassification",class extends i4{async _call(t){return new ln(await super._call(t))}}]],["mpnet",["MPNetForTokenClassification",class extends i9{async _call(t){return new ln(await super._call(t))}}]],["distilbert",["DistilBertForTokenClassification",class extends i6{async _call(t){return new ln(await super._call(t))}}]],["roberta",["RobertaForTokenClassification",class extends nl{async _call(t){return new ln(await super._call(t))}}]],["xlm",["XLMForTokenClassification",class extends nu{async _call(t){return new ln(await super._call(t))}}]],["xlm-roberta",["XLMRobertaForTokenClassification",class extends nd{async _call(t){return new ln(await super._call(t))}}]]]),oM=new Map([["t5",["T5ForConditionalGeneration",class extends nt{}]],["longt5",["LongT5ForConditionalGeneration",class extends nr{}]],["mt5",["MT5ForConditionalGeneration",class extends ns{}]],["bart",["BartForConditionalGeneration",class extends ni{}]],["mbart",["MBartForConditionalGeneration",class extends nn{}]],["marian",["MarianMTModel",class extends aW{}]],["m2m_100",["M2M100ForConditionalGeneration",class extends aH{}]],["blenderbot",["BlenderbotForConditionalGeneration",class extends na{}]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",class extends no{}]]]),oO=new Map([["bloom",["BloomForCausalLM",class extends n3{}]],["gpt2",["GPT2LMHeadModel",class extends nM{}]],["jais",["JAISLMHeadModel",class extends nO{}]],["gptj",["GPTJForCausalLM",class extends nP{}]],["gpt_bigcode",["GPTBigCodeForCausalLM",class extends nL{}]],["gpt_neo",["GPTNeoForCausalLM",class extends nB{}]],["gpt_neox",["GPTNeoXForCausalLM",class extends nR{}]],["codegen",["CodeGenForCausalLM",class extends nD{}]],["llama",["LlamaForCausalLM",class extends nU{}]],["exaone",["ExaoneForCausalLM",class extends nq{}]],["olmo",["OlmoForCausalLM",class extends nj{}]],["olmo2",["Olmo2ForCausalLM",class extends nG{}]],["mobilellm",["MobileLLMForCausalLM",class extends nV{}]],["granite",["GraniteForCausalLM",class extends nW{}]],["cohere",["CohereForCausalLM",class extends nH{}]],["gemma",["GemmaForCausalLM",class extends nK{}]],["gemma2",["Gemma2ForCausalLM",class extends nX{}]],["gemma3_text",["Gemma3ForCausalLM",class extends nY{}]],["helium",["HeliumForCausalLM",class extends nN{}]],["glm",["GlmForCausalLM",class extends nF{}]],["openelm",["OpenELMForCausalLM",class extends nQ{}]],["qwen2",["Qwen2ForCausalLM",class extends nZ{}]],["qwen3",["Qwen3ForCausalLM",class extends nJ{}]],["phi",["PhiForCausalLM",class extends n1{}]],["phi3",["Phi3ForCausalLM",class extends n2{}]],["mpt",["MptForCausalLM",class extends n4{}]],["opt",["OPTForCausalLM",class extends n6{}]],["mbart",["MBartForCausalLM",class extends nn{}]],["mistral",["MistralForCausalLM",class extends a4{}]],["starcoder2",["Starcoder2ForCausalLM",class extends a6{}]],["falcon",["FalconForCausalLM",class extends a8{}]],["trocr",["TrOCRForCausalLM",class extends a3{}]],["stablelm",["StableLmForCausalLM",class extends ot{}]],["phi3_v",["Phi3VForCausalLM",nk]]]),oB=new Map([["multi_modality",["MultiModalityCausalLM",class extends ou{forward_params=["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"];constructor(...t){super(...t),this._generation_mode="text"}async forward(t){let r,s=this._generation_mode??"text";if("text"!==s&&t.past_key_values){let s=this.sessions.gen_img_embeds,i=er({image_ids:t.input_ids},s.inputNames);r=await iC(s,i)}else{let s=this.sessions.prepare_inputs_embeds,i=er(t,s.inputNames);r=await iC(s,i)}let i={...t,...r},n=await iL(this,i),a=this.sessions["text"===s?"lm_head":"gen_head"];if(!a)throw Error(`Unable to find "${a}" generation head`);let o=await iC(a,er(n,a.inputNames));return{...r,...n,...o}}async generate(t){return this._generation_mode="text",super.generate(t)}async generate_images(t){this._generation_mode="image";let r=(t.inputs??t[this.main_input_name]).dims[1],s=(await super.generate(t)).slice(null,[r,null]),i=this.sessions.image_decode,{decoded_image:n}=await iC(i,{generated_tokens:s}),a=n.add_(1).mul_(127.5).clamp_(0,255).to("uint8"),o=[];for(let t of a){let r=ip.fromTensor(t);o.push(r)}return o}}]]]),oR=new Map([["bert",["BertForMaskedLM",class extends iY{async _call(t){return new la(await super._call(t))}}]],["modernbert",["ModernBertForMaskedLM",class extends iQ{async _call(t){return new la(await super._call(t))}}]],["roformer",["RoFormerForMaskedLM",class extends iJ{async _call(t){return new la(await super._call(t))}}]],["electra",["ElectraForMaskedLM",class extends i1{async _call(t){return new la(await super._call(t))}}]],["esm",["EsmForMaskedLM",class extends i8{async _call(t){return new la(await super._call(t))}}]],["convbert",["ConvBertForMaskedLM",class extends i0{async _call(t){return new la(await super._call(t))}}]],["camembert",["CamembertForMaskedLM",class extends i2{async _call(t){return new la(await super._call(t))}}]],["deberta",["DebertaForMaskedLM",class extends i3{async _call(t){return new la(await super._call(t))}}]],["deberta-v2",["DebertaV2ForMaskedLM",class extends i4{async _call(t){return new la(await super._call(t))}}]],["mpnet",["MPNetForMaskedLM",class extends i9{async _call(t){return new la(await super._call(t))}}]],["albert",["AlbertForMaskedLM",class extends ne{async _call(t){return new la(await super._call(t))}}]],["distilbert",["DistilBertForMaskedLM",class extends i6{async _call(t){return new la(await super._call(t))}}]],["roberta",["RobertaForMaskedLM",class extends nl{async _call(t){return new la(await super._call(t))}}]],["xlm",["XLMWithLMHeadModel",class extends nu{async _call(t){return new la(await super._call(t))}}]],["xlm-roberta",["XLMRobertaForMaskedLM",class extends nd{async _call(t){return new la(await super._call(t))}}]],["mobilebert",["MobileBertForMaskedLM",class extends i5{async _call(t){return new la(await super._call(t))}}]],["squeezebert",["SqueezeBertForMaskedLM",class extends i7{async _call(t){return new la(await super._call(t))}}]]]),oP=new Map([["bert",["BertForQuestionAnswering",class extends iY{async _call(t){return new lo(await super._call(t))}}]],["roformer",["RoFormerForQuestionAnswering",class extends iJ{async _call(t){return new lo(await super._call(t))}}]],["electra",["ElectraForQuestionAnswering",class extends i1{async _call(t){return new lo(await super._call(t))}}]],["convbert",["ConvBertForQuestionAnswering",class extends i0{async _call(t){return new lo(await super._call(t))}}]],["camembert",["CamembertForQuestionAnswering",class extends i2{async _call(t){return new lo(await super._call(t))}}]],["deberta",["DebertaForQuestionAnswering",class extends i3{async _call(t){return new lo(await super._call(t))}}]],["deberta-v2",["DebertaV2ForQuestionAnswering",class extends i4{async _call(t){return new lo(await super._call(t))}}]],["mpnet",["MPNetForQuestionAnswering",class extends i9{async _call(t){return new lo(await super._call(t))}}]],["albert",["AlbertForQuestionAnswering",class extends ne{async _call(t){return new lo(await super._call(t))}}]],["distilbert",["DistilBertForQuestionAnswering",class extends i6{async _call(t){return new lo(await super._call(t))}}]],["roberta",["RobertaForQuestionAnswering",class extends nl{async _call(t){return new lo(await super._call(t))}}]],["xlm",["XLMForQuestionAnswering",class extends nu{async _call(t){return new lo(await super._call(t))}}]],["xlm-roberta",["XLMRobertaForQuestionAnswering",class extends nd{async _call(t){return new lo(await super._call(t))}}]],["mobilebert",["MobileBertForQuestionAnswering",class extends i5{async _call(t){return new lo(await super._call(t))}}]],["squeezebert",["SqueezeBertForQuestionAnswering",class extends i7{async _call(t){return new lo(await super._call(t))}}]]]),oL=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",nm]],["idefics3",["Idefics3ForConditionalGeneration",nx]],["smolvlm",["SmolVLMForConditionalGeneration",nv]]]),oD=new Map([["llava",["LlavaForConditionalGeneration",ng]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",class extends ng{}]],["moondream1",["Moondream1ForConditionalGeneration",class extends ng{}]],["florence2",["Florence2ForConditionalGeneration",class extends ny{_merge_input_ids_with_image_features({inputs_embeds:t,image_features:r,input_ids:s,attention_mask:i}){return{inputs_embeds:eY([r,t],1),attention_mask:eY([e3(r.dims.slice(0,2)),i],1)}}async _prepare_inputs_embeds({input_ids:t,pixel_values:r,inputs_embeds:s,attention_mask:i}){let n,a;if(!t&&!r)throw Error("Either `input_ids` or `pixel_values` should be provided.");return t&&(n=await this.encode_text({input_ids:t})),r&&(a=await this.encode_image({pixel_values:r})),n&&a?{inputs_embeds:s,attention_mask:i}=this._merge_input_ids_with_image_features({inputs_embeds:n,image_features:a,input_ids:t,attention_mask:i}):s=n||a,{inputs_embeds:s,attention_mask:i}}async forward({input_ids:t,pixel_values:r,attention_mask:s,decoder_input_ids:i,decoder_attention_mask:n,encoder_outputs:a,past_key_values:o,inputs_embeds:l,decoder_inputs_embeds:u}){if(l||({inputs_embeds:l,attention_mask:s}=await this._prepare_inputs_embeds({input_ids:t,pixel_values:r,inputs_embeds:l,attention_mask:s})),!a){let{last_hidden_state:t}=await iR(this,{inputs_embeds:l,attention_mask:s});a=t}if(!u){if(!i)throw Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");u=await this.encode_text({input_ids:i})}let d={inputs_embeds:u,attention_mask:n,encoder_attention_mask:s,encoder_hidden_states:a,past_key_values:o};return await iL(this,d,!0)}}]],["qwen2-vl",["Qwen2VLForConditionalGeneration",class extends n0{get_rope_index(t,r,s,i){let{vision_config:n,image_token_id:a,video_token_id:o,vision_start_token_id:l}=this.config,u=n.spatial_merge_size??2,d=[];if(r||s){let n=t.tolist();i||(i=e3(t.dims));let c=i.tolist(),p=Array.from({length:3},r=>Array.from({length:t.dims[0]},r=>Array.from({length:t.dims[1]},t=>1))),h=r?r.tolist():[],f=s?s.tolist():[],m=0,_=0;for(let t=0;t<n.length;++t){let r=n[t].filter((r,s)=>1==c[t][s]),s=r.reduce((t,r,s)=>(r==l&&t.push(s),t),[]).map(t=>r[t+1]),i=s.filter(t=>t==a).length,g=s.filter(t=>t==o).length,y=[],w=0,b=i,x=g;for(let t=0;t<s.length;++t){let t,s,i,n,l=r.findIndex((t,r)=>r>w&&t==a),d=r.findIndex((t,r)=>r>w&&t==o),c=b>0&&-1!==l?l:r.length+1,p=x>0&&-1!==d?d:r.length+1;c<p?([s,i,n]=h[m],++m,--b,t=c):([s,i,n]=f[_],++_,--x,t=p);let[g,v,$]=[Number(s),Math.floor(Number(i)/u),Math.floor(Number(n)/u)],k=t-w,E=y.length>0?eg(y.at(-1))[0]+1:0;y.push(Array.from({length:3*k},(t,r)=>E+r%k));let S=k+E,T=g*v*$,I=Array.from({length:T},(t,r)=>S+Math.floor(r/(v*$))),z=Array.from({length:T},(t,r)=>S+Math.floor(r/$)%v),A=Array.from({length:T},(t,r)=>S+r%$);y.push([I,z,A].flat()),w=t+T}if(w<r.length){let t=y.length>0?eg(y.at(-1))[0]+1:0,s=r.length-w;y.push(Array.from({length:3*s},(r,i)=>t+i%s))}let v=y.reduce((t,r)=>t+r.length,0),$=Array(v),k=0;for(let t=0;t<3;++t)for(let r=0;r<y.length;++r){let s=y[r],i=s.length/3;for(let r=t*i;r<(t+1)*i;++r)$[k++]=s[r]}let E=0,S=c[t];for(let r=0;r<S.length;++r)if(1==S[r]){for(let s=0;s<3;++s)p[s][t][r]=$[s*v/3+E];++E}let T=eg($)[0];d.push(T+1-n[t].length)}return[new eN("int64",p.flat(1/0),[3,t.dims[0],t.dims[1]]),new eN("int64",d,[d.length,1])]}if(i){let{data:t,dims:r}=iV(i),s=BigInt64Array.from({length:3*t.length},(r,s)=>t[s%t.length]),n=Array.from({length:r[0]},(s,i)=>eg(t.subarray(r[1]*i,r[1]*(i+1)))[0]+1n+BigInt(r[1]));return[new eN("int64",s,[3,...r]),new eN("int64",n,[n.length,1])]}{let[r,s]=t.dims;return[new eN("int64",BigInt64Array.from({length:3*r*s},(t,i)=>BigInt(Math.floor(i%s/r))),[3,...t.dims]),e4([r,1])]}}async encode_image({pixel_values:t,image_grid_thw:r}){return(await iC(this.sessions.vision_encoder,{pixel_values:t,grid_thw:r})).image_features}_merge_input_ids_with_image_features(t){return iU({image_token_id:this.config.image_token_id,...t})}prepare_inputs_for_generation(t,r,s){if(r.attention_mask&&!r.position_ids)if(r.past_key_values){r.pixel_values=null;let t=BigInt(Object.values(r.past_key_values)[0].dims.at(-2)),s=r.rope_deltas.map(r=>t+r);r.position_ids=eQ([s,s,s],0)}else[r.position_ids,r.rope_deltas]=this.get_rope_index(r.input_ids,r.image_grid_thw,r.video_grid_thw,r.attention_mask);return r}}]],["idefics3",["Idefics3ForConditionalGeneration",nx]],["smolvlm",["SmolVLMForConditionalGeneration",nv]],["paligemma",["PaliGemmaForConditionalGeneration",class extends nw{_merge_input_ids_with_image_features(t){let r=t.image_features.dims.at(-1),s=t.image_features.view(-1,r);return iU({image_token_id:this.config.image_token_index,...t,image_features:s})}}]]]),oU=new Map([["ultravox",["UltravoxModel",class extends of{_merge_input_ids_with_audio_features(t){let r=t.audio_features.dims.at(-1),s=t.audio_features.view(-1,r);return function({audio_token_id:t,inputs_embeds:r,audio_features:s,input_ids:i,attention_mask:n}){return iD({modality_token_id:t,inputs_embeds:r,modality_features:s,input_ids:i,attention_mask:n})}({audio_token_id:this.config.ignore_index,...t,audio_features:s})}}]]]),oN=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",nm]]]),oF=new Map([["vit",["ViTForImageClassification",class extends n8{async _call(t){return new ls(await super._call(t))}}]],["ijepa",["IJepaForImageClassification",class extends n5{async _call(t){return new ls(await super._call(t))}}]],["pvt",["PvtForImageClassification",class extends n7{async _call(t){return new ls(await super._call(t))}}]],["vit_msn",["ViTMSNForImageClassification",class extends at{async _call(t){return new ls(await super._call(t))}}]],["fastvit",["FastViTForImageClassification",class extends as{async _call(t){return new ls(await super._call(t))}}]],["mobilevit",["MobileViTForImageClassification",class extends an{async _call(t){return new ls(await super._call(t))}}]],["mobilevitv2",["MobileViTV2ForImageClassification",class extends aa{async _call(t){return new ls(await super._call(t))}}]],["beit",["BeitForImageClassification",class extends au{async _call(t){return new ls(await super._call(t))}}]],["deit",["DeiTForImageClassification",class extends a${async _call(t){return new ls(await super._call(t))}}]],["hiera",["HieraForImageClassification",class extends ak{async _call(t){return new ls(await super._call(t))}}]],["convnext",["ConvNextForImageClassification",class extends aL{async _call(t){return new ls(await super._call(t))}}]],["convnextv2",["ConvNextV2ForImageClassification",class extends aD{async _call(t){return new ls(await super._call(t))}}]],["dinov2",["Dinov2ForImageClassification",class extends aU{async _call(t){return new ls(await super._call(t))}}]],["dinov2_with_registers",["Dinov2WithRegistersForImageClassification",class extends aN{async _call(t){return new ls(await super._call(t))}}]],["resnet",["ResNetForImageClassification",class extends aE{async _call(t){return new ls(await super._call(t))}}]],["swin",["SwinForImageClassification",class extends aS{async _call(t){return new ls(await super._call(t))}}]],["segformer",["SegformerForImageClassification",class extends oe{}]],["efficientnet",["EfficientNetForImageClassification",class extends or{async _call(t){return new ls(await super._call(t))}}]],["mobilenet_v1",["MobileNetV1ForImageClassification",class extends oi{async _call(t){return new ls(await super._call(t))}}]],["mobilenet_v2",["MobileNetV2ForImageClassification",class extends on{async _call(t){return new ls(await super._call(t))}}]],["mobilenet_v3",["MobileNetV3ForImageClassification",class extends oa{async _call(t){return new ls(await super._call(t))}}]],["mobilenet_v4",["MobileNetV4ForImageClassification",class extends oo{async _call(t){return new ls(await super._call(t))}}]]]),oq=new Map([["detr",["DetrForObjectDetection",class extends ad{async _call(t){return new ap(await super._call(t))}}]],["rt_detr",["RTDetrForObjectDetection",class extends af{async _call(t){return new am(await super._call(t))}}]],["rt_detr_v2",["RTDetrV2ForObjectDetection",class extends a_{async _call(t){return new ag(await super._call(t))}}]],["rf_detr",["RFDetrForObjectDetection",class extends ay{async _call(t){return new aw(await super._call(t))}}]],["d_fine",["DFineForObjectDetection",class extends ab{async _call(t){return new am(await super._call(t))}}]],["table-transformer",["TableTransformerForObjectDetection",class extends ax{async _call(t){return new av(await super._call(t))}}]],["yolos",["YolosForObjectDetection",class extends aq{async _call(t){return new aV(await super._call(t))}}]]]),oV=new Map([["owlvit",["OwlViTForObjectDetection",class extends ao{}]],["owlv2",["Owlv2ForObjectDetection",class extends al{}]],["grounding-dino",["GroundingDinoForObjectDetection",class extends aF{}]]]),oj=new Map([["detr",["DetrForSegmentation",ac]],["clipseg",["CLIPSegForImageSegmentation",class extends nC{}]]]),oG=new Map([["segformer",["SegformerForSemanticSegmentation",class extends oe{}]],["sapiens",["SapiensForSemanticSegmentation",class extends aA{}]],["swin",["SwinForSemanticSegmentation",class extends aS{}]],["mobilenet_v1",["MobileNetV1ForSemanticSegmentation",class extends oi{}]],["mobilenet_v2",["MobileNetV2ForSemanticSegmentation",class extends on{}]],["mobilenet_v3",["MobileNetV3ForSemanticSegmentation",class extends oa{}]],["mobilenet_v4",["MobileNetV4ForSemanticSegmentation",class extends oo{}]]]),oW=new Map([["detr",["DetrForSegmentation",ac]],["maskformer",["MaskFormerForInstanceSegmentation",class extends aB{}]]]),oH=new Map([["sam",["SamModel",class extends aj{async get_image_embeddings({pixel_values:t}){return await iR(this,{pixel_values:t})}async forward(t){if(t.image_embeddings&&t.image_positional_embeddings||(t={...t,...await this.get_image_embeddings(t)}),!t.input_labels&&t.input_points){let r=t.input_points.dims.slice(0,-1),s=r.reduce((t,r)=>t*r,1);t.input_labels=new eN("int64",new BigInt64Array(s).fill(1n),r)}let r={image_embeddings:t.image_embeddings,image_positional_embeddings:t.image_positional_embeddings};return t.input_points&&(r.input_points=t.input_points),t.input_labels&&(r.input_labels=t.input_labels),t.input_boxes&&(r.input_boxes=t.input_boxes),await iC(this.sessions.prompt_encoder_mask_decoder,r)}async _call(t){return new aG(await super._call(t))}}]]]),oK=new Map([["wav2vec2",["Wav2Vec2ForCTC",class extends aK{async _call(t){return new ll(await super._call(t))}}]],["wav2vec2-bert",["Wav2Vec2BertForCTC",class extends aJ{async _call(t){return new ll(await super._call(t))}}]],["unispeech",["UniSpeechForCTC",class extends aQ{async _call(t){return new ll(await super._call(t))}}]],["unispeech-sat",["UniSpeechSatForCTC",class extends aZ{async _call(t){return new ll(await super._call(t))}}]],["wavlm",["WavLMForCTC",class extends a0{async _call(t){return new ll(await super._call(t))}}]],["hubert",["HubertForCTC",class extends aK{async _call(t){return new ll(await super._call(t))}}]]]),oX=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",class extends aK{async _call(t){return new ls(await super._call(t))}}]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",class extends aJ{async _call(t){return new ls(await super._call(t))}}]],["unispeech",["UniSpeechForSequenceClassification",class extends aQ{async _call(t){return new ls(await super._call(t))}}]],["unispeech-sat",["UniSpeechSatForSequenceClassification",class extends aZ{async _call(t){return new ls(await super._call(t))}}]],["wavlm",["WavLMForSequenceClassification",class extends a0{async _call(t){return new ls(await super._call(t))}}]],["hubert",["HubertForSequenceClassification",class extends aK{async _call(t){return new ls(await super._call(t))}}]],["audio-spectrogram-transformer",["ASTForAudioClassification",class extends nc{}]]]),oY=new Map([["wavlm",["WavLMForXVector",class extends a0{async _call(t){return new li(await super._call(t))}}]]]),oQ=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",class extends aZ{async _call(t){return new ln(await super._call(t))}}]],["wavlm",["WavLMForAudioFrameClassification",class extends a0{async _call(t){return new ln(await super._call(t))}}]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",class extends aK{async _call(t){return new ln(await super._call(t))}}]],["pyannote",["PyAnnoteForAudioFrameClassification",class extends aX{async _call(t){return new ln(await super._call(t))}}]]]),oZ=new Map([["vitmatte",["VitMatteForImageMatting",class extends ai{async _call(t){return new lu(await super._call(t))}}]]]),oJ=new Map([["patchtst",["PatchTSTForPrediction",class extends op{}]],["patchtsmixer",["PatchTSMixerForPrediction",class extends oh{}]]]),o0=new Map([["swin2sr",["Swin2SRForImageSuperResolution",class extends aT{}]]]),o1=new Map([["dpt",["DPTForDepthEstimation",class extends aI{}]],["depth_anything",["DepthAnythingForDepthEstimation",class extends az{}]],["glpn",["GLPNForDepthEstimation",class extends aR{}]],["sapiens",["SapiensForDepthEstimation",class extends aA{}]],["depth_pro",["DepthProForDepthEstimation",class extends aC{}]],["metric3d",["Metric3DForDepthEstimation",class extends aM{}]],["metric3dv2",["Metric3Dv2ForDepthEstimation",class extends aO{}]]]),o2=new Map([["sapiens",["SapiensForNormalEstimation",class extends aA{}]]]),o3=new Map([["vitpose",["VitPoseForPoseEstimation",class extends n9{}]]]),o4=new Map([["clip",["CLIPVisionModelWithProjection",nT]],["siglip",["SiglipVisionModel",class extends nE{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"vision_model"})}}]],["jina_clip",["JinaCLIPVisionModel",class extends nA{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"vision_model"})}}]]]),o6=[[o$,i$.EncoderOnly],[ok,i$.EncoderDecoder],[oS,i$.DecoderOnly],[oE,i$.AutoEncoder],[oA,i$.EncoderOnly],[oC,i$.EncoderOnly],[oM,i$.Seq2Seq],[oT,i$.Seq2Seq],[oO,i$.DecoderOnly],[oB,i$.MultiModality],[oR,i$.EncoderOnly],[oP,i$.EncoderOnly],[oL,i$.Vision2Seq],[oD,i$.ImageTextToText],[oU,i$.AudioTextToText],[oF,i$.EncoderOnly],[oj,i$.EncoderOnly],[oW,i$.EncoderOnly],[oG,i$.EncoderOnly],[oZ,i$.EncoderOnly],[oJ,i$.EncoderOnly],[o0,i$.EncoderOnly],[o1,i$.EncoderOnly],[o2,i$.EncoderOnly],[o3,i$.EncoderOnly],[oq,i$.EncoderOnly],[oV,i$.EncoderOnly],[oH,i$.MaskGeneration],[oK,i$.EncoderOnly],[oX,i$.EncoderOnly],[oI,i$.Seq2Seq],[oz,i$.EncoderOnly],[oY,i$.EncoderOnly],[oQ,i$.EncoderOnly],[o4,i$.EncoderOnly]];for(const[t,r]of o6)for(const[s,i]of t.values())ik.set(s,r),iS.set(i,s),iE.set(s,i);for(const[t,r,s]of[["MusicgenForConditionalGeneration",os,i$.Musicgen],["Phi3VForCausalLM",nk,i$.Phi3V],["CLIPTextModelWithProjection",nS,i$.EncoderOnly],["SiglipTextModel",class extends nI{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"text_model"})}},i$.EncoderOnly],["JinaCLIPTextModel",class extends nA{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"text_model"})}},i$.EncoderOnly],["ClapTextModelWithProjection",class extends a5{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"text_model"})}},i$.EncoderOnly],["ClapAudioModelWithProjection",class extends a5{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"audio_model"})}},i$.EncoderOnly],["DacEncoderModel",class extends oy{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"encoder_model"})}},i$.EncoderOnly],["DacDecoderModel",class extends oy{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"decoder_model"})}},i$.EncoderOnly],["MimiEncoderModel",class extends om{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"encoder_model"})}},i$.EncoderOnly],["MimiDecoderModel",class extends om{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"decoder_model"})}},i$.EncoderOnly],["SnacEncoderModel",class extends ox{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"encoder_model"})}},i$.EncoderOnly],["SnacDecoderModel",class extends ox{static async from_pretrained(t,r={}){return super.from_pretrained(t,{...r,model_file_name:r.model_file_name??"decoder_model"})}},i$.EncoderOnly]])ik.set(t,s),iS.set(r,t),iE.set(t,r);const o8=new Map([["modnet",oj],["birefnet",oj],["isnet",oj],["ben",oj]]);for(const[t,r]of o8.entries())r.set(t,["PreTrainedModel",iK]),ik.set(t,i$.EncoderOnly),iS.set(iK,t),iE.set(t,iK);class o5 extends ov{static MODEL_CLASS_MAPPINGS=o6.map(t=>t[0]);static BASE_IF_FAIL=!0}class o9 extends ov{static MODEL_CLASS_MAPPINGS=[oA]}class o7 extends ov{static MODEL_CLASS_MAPPINGS=[oM]}class le extends ov{static MODEL_CLASS_MAPPINGS=[oj]}class lt extends ov{static MODEL_CLASS_MAPPINGS=[oG]}class lr extends ov{static MODEL_CLASS_MAPPINGS=[oW]}class ls extends iX{constructor({logits:t,...r}){super(),this.logits=t;let s=Object.values(r);s.length>0&&(this.attentions=s)}}class li extends iX{constructor({logits:t,embeddings:r}){super(),this.logits=t,this.embeddings=r}}class ln extends iX{constructor({logits:t}){super(),this.logits=t}}class la extends iX{constructor({logits:t}){super(),this.logits=t}}class lo extends iX{constructor({start_logits:t,end_logits:r}){super(),this.start_logits=t,this.end_logits=r}}class ll extends iX{constructor({logits:t}){super(),this.logits=t}}class lu extends iX{constructor({alphas:t}){super(),this.alphas=t}}class ld extends iX{constructor({waveform:t,spectrogram:r}){super(),this.waveform=t,this.spectrogram=r}}class lc extends Y{static classes=["image_processor_class","tokenizer_class","feature_extractor_class"];static uses_processor_config=!1;constructor(t,r){super(),this.config=t,this.components=r}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template(t,r={}){if(!this.tokenizer)throw Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template(t,{tokenize:!1,...r})}batch_decode(...t){if(!this.tokenizer)throw Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...t)}decode(...t){if(!this.tokenizer)throw Error("Unable to decode without a tokenizer.");return this.tokenizer.decode(...t)}async _call(t,...r){for(let s of[this.image_processor,this.feature_extractor,this.tokenizer])if(s)return s(t,...r);throw Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained(t,r){let[s,i]=await Promise.all([this.uses_processor_config?ep(t,"processor_config.json",!0,r):{},Promise.all(this.classes.filter(t=>t in this).map(async s=>{let i=await this[s].from_pretrained(t,r);return[s.replace(/_class$/,""),i]})).then(Object.fromEntries)]);return new this(s,i)}}var lp={},lh={};function lf(t,r,s=0,i=null){let n=t/r,a=function(t){let r=Math.round(t);return Math.abs(t)%1==.5?r%2==0?r:r-1:r}(n)*r;return null!==i&&a>i&&(a=Math.floor(n)*r),a<s&&(a=Math.ceil(n)*r),a}function lm([t,r],s){return[Math.max(Math.floor(t/s),1)*s,Math.max(Math.floor(r/s),1)*s]}function l_([t,r,s,i]){return[t-s/2,r-i/2,t+s/2,r+i/2]}function lg(t,r=.5,s=null,i=!1){let n=t.logits,a=t.pred_boxes,[o,l,u]=n.dims;if(null!==s&&s.length!==o)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let d=[];for(let t=0;t<o;++t){let o=null!==s?s[t]:null,c={boxes:[],classes:[],scores:[]},p=n[t],h=a[t];for(let t=0;t<l;++t){let s,n=p[t],a=[];if(i){s=n.sigmoid().data;for(let t=0;t<s.length;++t)s[t]>r&&a.push(t)}else{let t=eg(n.data)[1];if(t===u-1||(s=em(n.data))[t]<r)continue;a.push(t)}for(let r of a){let i=h[t].data;i=l_(i),null!==o&&(i=i.map((t,r)=>t*o[(r+1)%2])),c.boxes.push(i),c.classes.push(r),c.scores.push(s[r])}}d.push(c)}return d}function ly(t,r=.5,s=.5,i=.8,n=null,a=null){null===n&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),n=new Set);let o=t.class_queries_logits??t.logits,l=(t.masks_queries_logits??t.pred_masks).sigmoid(),[u,d,c]=o.dims;if(c-=1,null!==a&&a.length!==u)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let p=[];for(let t=0;t<u;++t){let u=null!==a?a[t]:null,d=o[t],h=l[t],[f,m,_]=function(t,r,s,i){let n=[],a=[],o=[];for(let l=0;l<t.dims[0];++l){let u=t[l],d=r[l],c=eg(u.data)[1];if(c===i)continue;let p=em(u.data)[c];p>s&&(n.push(d),a.push(p),o.push(c))}return[n,a,o]}(d,h,r,c);if(0===_.length){let[t,r]=u??h.dims.slice(-2),s=new eN("int32",new Int32Array(t*r).fill(-1),[t,r]);p.push({segmentation:s,segments_info:[]});continue}let[g,y]=function(t,r,s,i,n,a=null,o=null){let[l,u]=o??t[0].dims,d=new eN("int32",new Int32Array(l*u),[l,u]),c=[];if(null!==o)for(let r=0;r<t.length;++r)t[r]=eF(t[r],o,"bilinear",!1);let p=new Int32Array(t[0].data.length),h=new Float32Array(t[0].data.length);for(let s=0;s<t.length;++s){let i=r[s],n=t[s].data;for(let t=0;t<n.length;++t)n[t]*=i,n[t]>h[t]&&(p[t]=s,h[t]=n[t])}let f=0,m=d.data;for(let a=0;a<s.length;++a){let o=s[a],[l,u]=function(t,r,s,i=.5,n=.8){let a=[],o=0,l=0,u=r[s].data;for(let r=0;r<t.length;++r)t[r]===s&&(a.push(r),++o),u[r]>=i&&++l;let d=o>0&&l>0;return d&&(d=o/l>n),[d,a]}(p,t,a,i,n);if(l){for(let t of(++f,u))m[t]=f;c.push({id:f,label_id:o,score:r[a]})}}return[d,c]}(f,m,_,s,i,n,u);p.push({segmentation:g,segments_info:y})}return p}function lw(t,r=.5,s=null){throw Error("`post_process_instance_segmentation` is not yet implemented.")}u(lh,"Florence2Processor",()=>u2);class lb extends Y{constructor(t){super(),this.image_mean=t.image_mean??t.mean,this.image_std=t.image_std??t.std,this.resample=t.resample??2,this.do_rescale=t.do_rescale??!0,this.rescale_factor=t.rescale_factor??1/255,this.do_normalize=t.do_normalize,this.do_thumbnail=t.do_thumbnail,this.size=t.size??t.image_size,this.do_resize=t.do_resize??void 0!==this.size,this.size_divisibility=t.size_divisibility??t.size_divisor,this.do_center_crop=t.do_center_crop,this.crop_size=t.crop_size,this.do_convert_rgb=t.do_convert_rgb??!0,this.do_crop_margin=t.do_crop_margin,this.pad_size=t.pad_size,this.do_pad=t.do_pad,this.min_pixels=t.min_pixels,this.max_pixels=t.max_pixels,this.do_pad&&!this.pad_size&&this.size&&void 0!==this.size.width&&void 0!==this.size.height&&(this.pad_size=this.size),this.do_flip_channel_order=t.do_flip_channel_order??!1,this.config=t}async thumbnail(t,r,s=2){let i=t.height,n=t.width,a=r.height,o=r.width,l=Math.min(i,a),u=Math.min(n,o);return l===i&&u===n?t:(i>n?u=Math.floor(n*l/i):n>i&&(l=Math.floor(i*u/n)),await t.resize(u,l,{resample:s}))}async crop_margin(t,r=200){let s=t.clone().grayscale(),i=e_(s.data)[0],n=eg(s.data)[0]-i;if(0===n)return t;let a=r/255,o=s.width,l=s.height,u=0,d=0,c=s.data;for(let t=0;t<s.height;++t){let r=t*s.width;for(let p=0;p<s.width;++p)(c[r+p]-i)/n<a&&(o=Math.min(o,p),l=Math.min(l,t),u=Math.max(u,p),d=Math.max(d,t))}return t=await t.crop([o,l,u,d])}pad_image(t,r,s,{mode:i="constant",center:n=!1,constant_values:a=0}={}){let o,l,[u,d,c]=r;if("number"==typeof s?(o=s,l=s):"square"===s?o=l=Math.max(u,d):(o=s.width,l=s.height),o!==d||l!==u){let s=new Float32Array(o*l*c);if(Array.isArray(a))for(let t=0;t<s.length;++t)s[t]=a[t%c];else 0!==a&&s.fill(a);let[p,h]=n?[Math.floor((o-d)/2),Math.floor((l-u)/2)]:[0,0];for(let r=0;r<u;++r){let i=(r+h)*o,n=r*d;for(let r=0;r<d;++r){let a=(i+r+p)*c,o=(n+r)*c;for(let r=0;r<c;++r)s[a+r]=t[o+r]}}if("symmetric"===i){if(n)throw Error("`center` padding is not supported when `mode` is set to `symmetric`.");let r=u-1,i=d-1;for(let n=0;n<l;++n){let a=n*o,l=ee(n,r)*d;for(let r=0;r<o;++r){if(n<u&&r<d)continue;let o=(a+r)*c,p=(l+ee(r,i))*c;for(let r=0;r<c;++r)s[o+r]=t[p+r]}}}t=s,r=[l,o,c]}return[t,r]}rescale(t){for(let r=0;r<t.length;++r)t[r]=this.rescale_factor*t[r]}get_resize_output_image_size(t,r){let s,i,[n,a]=t.size;if(this.do_thumbnail){let{height:t,width:i}=r;s=Math.min(t,i)}else Number.isInteger(r)?(s=r,i=this.config.max_size??s):void 0!==r&&(s=r.shortest_edge,i=r.longest_edge);if(void 0!==s||void 0!==i){let t=void 0===s?1:Math.max(s/n,s/a),r=n*t,o=a*t,l=void 0===i?1:Math.min(i/r,i/o),u=Math.floor(Number((r*l).toFixed(2))),d=Math.floor(Number((o*l).toFixed(2)));return void 0!==this.size_divisibility&&([u,d]=lm([u,d],this.size_divisibility)),[u,d]}if(void 0!==r&&void 0!==r.width&&void 0!==r.height){let t=r.width,s=r.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let r=s/a,i=t/n;Math.abs(1-i)<Math.abs(1-r)?r=i:i=r,s=lf(r*a,this.config.ensure_multiple_of),t=lf(i*n,this.config.ensure_multiple_of)}return[t,s]}if(void 0!==this.size_divisibility)return lm([n,a],this.size_divisibility);if(void 0!==this.min_pixels&&void 0!==this.max_pixels)return function(t,r,s=28,i=3136,n=1003520){if(t<s||r<s)throw Error(`height:${t} or width:${r} must be larger than factor:${s}`);if(Math.max(t,r)/Math.min(t,r)>200)throw Error(`absolute aspect ratio must be smaller than 200, got ${Math.max(t,r)/Math.min(t,r)}`);let a=Math.round(t/s)*s,o=Math.round(r/s)*s;if(a*o>n){let i=Math.sqrt(t*r/n);a=Math.floor(t/i/s)*s,o=Math.floor(r/i/s)*s}else if(a*o<i){let n=Math.sqrt(i/(t*r));a=Math.ceil(t*n/s)*s,o=Math.ceil(r*n/s)*s}return[a,o]}(a,n,this.config.patch_size*this.config.merge_size,this.min_pixels,this.max_pixels);throw Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(r)}`)}async resize(t){let[r,s]=this.get_resize_output_image_size(t,this.size);return await t.resize(r,s,{resample:this.resample})}async preprocess(t,{do_normalize:r=null,do_pad:s=null,do_convert_rgb:i=null,do_convert_grayscale:n=null,do_flip_channel_order:a=null}={}){this.do_crop_margin&&(t=await this.crop_margin(t));let[o,l]=t.size;if(i??this.do_convert_rgb?t=t.rgb():n&&(t=t.grayscale()),this.do_resize&&(t=await this.resize(t)),this.do_thumbnail&&(t=await this.thumbnail(t,this.size,this.resample)),this.do_center_crop){let r,s;Number.isInteger(this.crop_size)?(r=this.crop_size,s=this.crop_size):(r=this.crop_size.width,s=this.crop_size.height),t=await t.center_crop(r,s)}let u=[t.height,t.width],d=Float32Array.from(t.data),c=[t.height,t.width,t.channels];if(this.do_rescale&&this.rescale(d),r??this.do_normalize){let r=this.image_mean;Array.isArray(this.image_mean)||(r=Array(t.channels).fill(r));let s=this.image_std;if(Array.isArray(this.image_std)||(s=Array(t.channels).fill(r)),r.length!==t.channels||s.length!==t.channels)throw Error(`When set to arrays, the length of \`image_mean\` (${r.length}) and \`image_std\` (${s.length}) must match the number of channels in the image (${t.channels}).`);for(let i=0;i<d.length;i+=t.channels)for(let n=0;n<t.channels;++n)d[i+n]=(d[i+n]-r[n])/s[n]}if(s??this.do_pad){if(this.pad_size){let r=this.pad_image(d,[t.height,t.width,t.channels],this.pad_size);[d,c]=r}else if(this.size_divisibility){let[t,r]=lm([c[1],c[0]],this.size_divisibility);[d,c]=this.pad_image(d,c,{width:t,height:r})}}if(a??this.do_flip_channel_order){if(3!==c[2])throw Error("Flipping channel order is only supported for RGB images.");for(let t=0;t<d.length;t+=3){let r=d[t];d[t]=d[t+2],d[t+2]=r}}return{original_size:[l,o],reshaped_input_size:u,pixel_values:new eN("float32",d,c).permute(2,0,1)}}async _call(t,...r){Array.isArray(t)||(t=[t]);let s=await Promise.all(t.map(t=>this.preprocess(t)));return{pixel_values:eQ(s.map(t=>t.pixel_values),0),original_sizes:s.map(t=>t.original_size),reshaped_input_sizes:s.map(t=>t.reshaped_input_size)}}static async from_pretrained(t,r){return new this(await ep(t,s0,!0,r))}}var lx={},lv={};u(lv,"BeitFeatureExtractor",()=>l$);class l$ extends lb{}var lk={};u(lk,"BitImageProcessor",()=>lE);class lE extends lb{}var lS={};u(lS,"ChineseCLIPFeatureExtractor",()=>lT);class lT extends lb{}var lI={};u(lI,"CLIPImageProcessor",()=>lz),u(lI,"CLIPFeatureExtractor",()=>lA);class lz extends lb{}class lA extends lz{}var lC={};u(lC,"ConvNextImageProcessor",()=>lM),u(lC,"ConvNextFeatureExtractor",()=>lO);class lM extends lb{constructor(t){super(t),this.crop_pct=this.config.crop_pct??.875}async resize(t){let r=this.size?.shortest_edge;if(void 0===r)throw Error("Size dictionary must contain 'shortest_edge' key.");if(r<384){let s=Math.floor(r/this.crop_pct),[i,n]=this.get_resize_output_image_size(t,{shortest_edge:s});t=await t.resize(i,n,{resample:this.resample}),t=await t.center_crop(r,r)}else t=await t.resize(r,r,{resample:this.resample});return t}}class lO extends lM{}var lB={};u(lB,"DeiTImageProcessor",()=>lR),u(lB,"DeiTFeatureExtractor",()=>lP);class lR extends lb{}class lP extends lR{}var lL={};u(lL,"DetrImageProcessor",()=>lD),u(lL,"DetrFeatureExtractor",()=>lU);class lD extends lb{async _call(t){let r=await super._call(t),s=e1([r.pixel_values.dims[0],64,64],1n);return{...r,pixel_mask:s}}post_process_object_detection(...t){return lg(...t)}post_process_panoptic_segmentation(...t){return ly(...t)}post_process_instance_segmentation(...t){return lw(...t)}}class lU extends lD{}var lN={};u(lN,"DonutImageProcessor",()=>lF),u(lN,"DonutFeatureExtractor",()=>lq);class lF extends lb{pad_image(t,r,s,i={}){let[n,a,o]=r,l=this.image_mean;Array.isArray(this.image_mean)||(l=Array(o).fill(l));let u=this.image_std;Array.isArray(u)||(u=Array(o).fill(l));let d=l.map((t,r)=>-t/u[r]);return super.pad_image(t,r,s,{center:!0,constant_values:d,...i})}}class lq extends lF{}var lV={};u(lV,"DPTImageProcessor",()=>lj),u(lV,"DPTFeatureExtractor",()=>lG);class lj extends lb{}class lG extends lj{}var lW={};u(lW,"EfficientNetImageProcessor",()=>lH);class lH extends lb{constructor(t){super(t),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(t=>t*t))}}var lK={};u(lK,"GLPNFeatureExtractor",()=>lX);class lX extends lb{}var lY={};u(lY,"GroundingDinoImageProcessor",()=>lQ);class lQ extends lb{async _call(t){let r=await super._call(t),s=r.pixel_values.dims,i=e3([s[0],s[2],s[3]]);return{...r,pixel_mask:i}}}var lZ={};u(lZ,"Idefics3ImageProcessor",()=>lJ);class lJ extends lb{constructor(t){super(t),this.do_image_splitting=t.do_image_splitting??!0,this.max_image_size=t.max_image_size}get_resize_for_vision_encoder(t,r){let[s,i]=t.dims.slice(-2),n=i/s;return i>=s?s=Math.ceil((s=Math.floor((i=Math.ceil(i/r)*r)/n))/r)*r:i=Math.ceil((i=Math.floor((s=Math.ceil(s/r)*r)*n))/r)*r,{height:s,width:i}}async _call(t,{do_image_splitting:r=null,return_row_col_info:s=!1}={}){let i,n,a;if(Array.isArray(t)){if(0===t.length||!t[0])throw Error("No images provided.");i=Array.isArray(t[0])?t:[t]}else i=[[t]];let o=[],l=[],u=[],d=[],c=[];for(let t of i){let s,i=await Promise.all(t.map(t=>this.preprocess(t)));d.push(...i.map(t=>t.original_size)),c.push(...i.map(t=>t.reshaped_input_size)),i.forEach(t=>t.pixel_values.unsqueeze_(0));let{longest_edge:n}=this.max_image_size;if(r??this.do_image_splitting){let t=Array(i.length),r=Array(i.length);s=await Promise.all(i.map(async(s,i)=>{let a=this.get_resize_for_vision_encoder(s.pixel_values,n),o=await eq(s.pixel_values,{size:[a.height,a.width]}),{frames:l,num_splits_h:u,num_splits_w:d}=await this.split_image(o,this.max_image_size);return t[i]=u,r[i]=d,eY(l,0)})),l.push(t),u.push(r)}else{let t=[n,n];s=await Promise.all(i.map(r=>eq(r.pixel_values,{size:t}))),l.push(Array(i.length).fill(0)),u.push(Array(i.length).fill(0))}o.push(eY(s,0))}let p=o.length,[h,f,m,_]=o[0].dims;if(1===p)n=o[0].unsqueeze_(0),a=e1([p,h,m,_],!0);else{let t=Math.max(...o.map(t=>t.dims.at(0))),r=(a=e1([p,t,m,_],!0)).data,s=t*m*_;for(let i=0;i<p;++i){let n=o[i].dims[0];if(n<t){o[i]=eY([o[i],e1([t-n,f,m,_],0)],0);let a=i*s+n*m*_,l=(i+1)*s;r.fill(!1,a,l)}}n=eQ(o,0)}return{pixel_values:n,pixel_attention_mask:a,original_sizes:d,reshaped_input_sizes:c,...s?{rows:l,cols:u}:{}}}async split_image(t,{longest_edge:r}){let s=[],[i,n]=t.dims.slice(-2),a=0,o=0;if(i>r||n>r){a=Math.ceil(i/r),o=Math.ceil(n/r);let l=Math.ceil(i/a),u=Math.ceil(n/o);for(let r=0;r<a;++r)for(let d=0;d<o;++d){let c,p,h,f;r===a-1?(p=i-l,f=i):(p=r*l,f=(r+1)*l),d===o-1?(c=n-u,h=n):(c=d*u,h=(d+1)*u);let m=[p,c],_=[f,h],g=await eW(t,m,_,[2,3]);s.push(g)}(i!==r||n!==r)&&(t=await eq(t,{size:[r,r]}))}return s.push(t),{frames:s,num_splits_h:a,num_splits_w:o}}}var l0={};u(l0,"VLMImageProcessor",()=>l1);class l1 extends lb{constructor(t){super({do_pad:!0,pad_size:{width:t.image_size,height:t.image_size},...t}),this.constant_values=this.config.background_color.map(t=>t*this.rescale_factor)}pad_image(t,r,s,i){return super.pad_image(t,r,s,{constant_values:this.constant_values,center:!0,...i})}}var l2={};u(l2,"JinaCLIPImageProcessor",()=>l3);class l3 extends lb{constructor(t){let{resize_mode:r,fill_color:s,interpolation:i,size:n,...a}=t;super({...a,size:"squash"===r?{width:n,height:n}:"shortest"===r?{shortest_edge:n}:{longest_edge:n},resample:"bicubic"===i?3:2,do_center_crop:!0,crop_size:n,do_normalize:!0})}}var l4={};u(l4,"LlavaOnevisionImageProcessor",()=>l6);class l6 extends lb{}var l8={};u(l8,"Mask2FormerImageProcessor",()=>ue);var l5={};u(l5,"MaskFormerImageProcessor",()=>l9),u(l5,"MaskFormerFeatureExtractor",()=>l7);class l9 extends lb{post_process_panoptic_segmentation(...t){return ly(...t)}post_process_instance_segmentation(...t){return lw(...t)}}class l7 extends l9{}class ue extends l9{}var ut={};u(ut,"MobileNetV1ImageProcessor",()=>ur),u(ut,"MobileNetV1FeatureExtractor",()=>us);class ur extends lb{}class us extends ur{}var ui={};u(ui,"MobileNetV2ImageProcessor",()=>un),u(ui,"MobileNetV2FeatureExtractor",()=>ua);class un extends lb{}class ua extends un{}var uo={};u(uo,"MobileNetV3ImageProcessor",()=>ul),u(uo,"MobileNetV3FeatureExtractor",()=>uu);class ul extends lb{}class uu extends ul{}var ud={};u(ud,"MobileNetV4ImageProcessor",()=>uc),u(ud,"MobileNetV4FeatureExtractor",()=>up);class uc extends lb{}class up extends uc{}var uh={};u(uh,"MobileViTImageProcessor",()=>uf),u(uh,"MobileViTFeatureExtractor",()=>um);class uf extends lb{}class um extends uf{}var u_={};u(u_,"NougatImageProcessor",()=>ug);class ug extends lF{}var uy={};u(uy,"Owlv2ImageProcessor",()=>uv);var uw={};u(uw,"OwlViTImageProcessor",()=>ub),u(uw,"OwlViTFeatureExtractor",()=>ux);class ub extends lb{post_process_object_detection(...t){return lg(...t)}}class ux extends ub{}class uv extends ub{}var u$={};u(u$,"Phi3VImageProcessor",()=>uI);const uk=[2,3],{ceil:uE,floor:uS,sqrt:uT}=Math;class uI extends lb{constructor(t){super({...t,do_normalize:!0,do_pad:!0,pad_size:"custom",do_convert_rgb:!0,do_resize:!0}),this._num_crops=t.num_crops}calc_num_image_tokens_from_image_size(t,r){let{num_img_tokens:s}=this.config;return uS((uS(r/336)*uS(t/336)+1)*s+1+(uS(r/336)+1)*uT(s))}get_resize_output_image_size(t,r){let s=this._num_crops,[i,n]=t.size,a=i/n,o=1;for(;o*Math.ceil(o/a)<=s;)o+=1;let l=Math.floor(336*(o-=1)),u=Math.floor(l/a);return[l,u]}pad_image(t,r,s,i={}){let[n,a]=r,o=336*uE(n/336),l=336*uE(a/336),u=[1,1,1].map((t,r)=>(t-this.image_mean[r])/this.image_std[r]);return super.pad_image(t,r,{width:l,height:o},{center:!0,constant_values:u,...i})}async _call(t,{num_crops:r=null}={}){if(this._num_crops=r??=this.config.num_crops,r<4||uT(r)%1!=0)throw Error("num_crops must be a square number >= 4");Array.isArray(t)||(t=[t]);let s=t.length,i=await Promise.all(t.map(t=>this.preprocess(t))),n=i.map(t=>t.original_size),a=i.map(t=>t.reshaped_input_size),o=[];for(let{pixel_values:t}of i){t.unsqueeze_(0);let[s,i]=t.dims.slice(-2),n=await eq(t,{size:[336,336],mode:"bicubic"});if(r>0){let a=[],l=uT(r),u=uS(i/l),d=uS(s/l);for(let r=0;r<l;++r)for(let n=0;n<l;++n){let o,c,p,h;r===l-1?(c=s-d,h=s):(c=r*d,h=(r+1)*d),n===l-1?(o=i-u,p=i):(o=n*u,p=(n+1)*u);let f=[c,o],m=[h,p],_=await eW(t,f,m,uk);a.push(_)}let c=await eq(eY(a,0),{size:[336,336],mode:"bicubic"});o.push(eY([n,c],0))}else o.push(n)}let l=eQ(o,0),u=a.map(t=>t.map(t=>336*uE(t/336)));return{pixel_values:l,original_sizes:n,reshaped_input_sizes:a,image_sizes:new eN("int64",u.flat(),[s,2]),num_img_tokens:u.map(([t,r])=>this.calc_num_image_tokens_from_image_size(r,t))}}}var uz={};u(uz,"PvtImageProcessor",()=>uA);class uA extends lb{}var uC={};u(uC,"Qwen2VLImageProcessor",()=>uM);class uM extends lb{async _call(t,...r){let{pixel_values:s,original_sizes:i,reshaped_input_sizes:n}=await super._call(t,...r),a=s,{temporal_patch_size:o,merge_size:l,patch_size:u}=this.config;1===a.dims[0]&&(a=eY(Array.from({length:o},()=>a),0));let d=a.dims[0]/o,c=a.dims[1],p=Math.floor(a.dims[2]/u),h=Math.floor(a.dims[3]/u);return{pixel_values:a.view(d,o,c,Math.floor(p/l),l,u,Math.floor(h/l),l,u).permute(0,3,6,4,7,2,1,5,8).view(d*p*h,c*o*u*u),image_grid_thw:new eN("int64",[d,p,h],[1,3]),original_sizes:i,reshaped_input_sizes:n}}}var uO={};u(uO,"RTDetrImageProcessor",()=>uB);class uB extends lb{post_process_object_detection(...t){return lg(...t)}}var uR={};u(uR,"SamImageProcessor",()=>uP);class uP extends lb{reshape_input_points(t,r,s,i=!1){let n=Z(t=structuredClone(t));if(3===n.length)i||(n=[1,...n]),t=[t];else if(4!==n.length)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let i=0;i<t.length;++i){let n=r[i],a=s[i],o=[a[0]/n[0],a[1]/n[1]];for(let r=0;r<t[i].length;++r)for(let s=0;s<t[i][r].length;++s)for(let n=0;n<t[i][r][s].length;++n)t[i][r][s][n]*=o[n%2]}return new eN("float32",Float32Array.from(t.flat(1/0)),n)}add_input_labels(t,r){let s=Z(t);if(2===s.length)s=[1,...s],t=[t];else if(3!==s.length)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(s.some((t,s)=>t!==r.dims[s]))throw Error(`The first ${s.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new eN("int64",t.flat(1/0).map(BigInt),s)}async _call(t,{input_points:r=null,input_labels:s=null,input_boxes:i=null}={}){let n=await super._call(t);if(r&&(n.input_points=this.reshape_input_points(r,n.original_sizes,n.reshaped_input_sizes)),s){if(!n.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");n.input_labels=this.add_input_labels(s,n.input_points)}return i&&(n.input_boxes=this.reshape_input_points(i,n.original_sizes,n.reshaped_input_sizes,!0)),n}async post_process_masks(t,r,s,{mask_threshold:i=0,binarize:n=!0,pad_size:a=null}={}){let o=[],l=[(a=a??this.pad_size).height,a.width];for(let a=0;a<r.length;++a){let u=r[a],d=s[a],c=await eq(t[a],{mode:"bilinear",size:l});if(c=c.slice(null,null,[0,d[0]],[0,d[1]]),c=await eq(c,{mode:"bilinear",size:u}),n){let t=c.data,r=new Uint8Array(t.length);for(let s=0;s<t.length;++s)t[s]>i&&(r[s]=1);c=new eN("bool",r,c.dims)}o.push(c)}return o}generate_crop_boxes(t,r,{crop_n_layers:s=0,overlap_ratio:i=512/1500,points_per_crop:n=32,crop_n_points_downscale_factor:a=1}={}){}}var uL={};u(uL,"SegformerImageProcessor",()=>uD),u(uL,"SegformerFeatureExtractor",()=>uU);class uD extends lb{post_process_semantic_segmentation(...t){return function(t,r=null){let s=t.logits,i=s.dims[0];if(null!==r&&r.length!==i)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let n=[];for(let t=0;t<i;++t){let i=null!==r?r[t]:null,a=s[t];null!==i&&(a=eF(a,i,"bilinear",!1));let[o,l]=i??a.dims.slice(-2),u=new eN("int32",new Int32Array(o*l),[o,l]),d=a[0].data,c=u.data;for(let t=1;t<a.dims[0];++t){let r=a[t].data;for(let s=0;s<r.length;++s)r[s]>d[s]&&(d[s]=r[s],c[s]=t)}let p=Array(a.dims[0]);for(let t=0;t<c.length;++t){let r=c[t];p[r]=r}let h=p.filter(t=>void 0!==t);n.push({segmentation:u,labels:h})}return n}(...t)}}class uU extends uD{}var uN={};u(uN,"SiglipImageProcessor",()=>uF);class uF extends lb{}var uq={};u(uq,"SmolVLMImageProcessor",()=>lJ);var uV={};u(uV,"Swin2SRImageProcessor",()=>uj);class uj extends lb{pad_image(t,r,s,i={}){let[n,a,o]=r;return super.pad_image(t,r,{width:a+(s-a%s)%s,height:n+(s-n%s)%s},{mode:"symmetric",center:!1,constant_values:-1,...i})}}var uG={};u(uG,"ViTImageProcessor",()=>uW),u(uG,"ViTFeatureExtractor",()=>uH);class uW extends lb{}class uH extends uW{}var uK={};u(uK,"VitMatteImageProcessor",()=>uX);class uX extends lb{async _call(t,r){Array.isArray(t)||(t=[t]),Array.isArray(r)||(r=[r]);let s=await Promise.all(t.map(t=>this.preprocess(t))),i=await Promise.all(r.map(t=>this.preprocess(t,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:eQ(s.map((t,r)=>eY([t.pixel_values,i[r].pixel_values],0)),0),original_sizes:s.map(t=>t.original_size),reshaped_input_sizes:s.map(t=>t.reshaped_input_size)}}}var uY={};u(uY,"VitPoseImageProcessor",()=>uQ);class uQ extends lb{post_process_pose_estimation(t,r,{threshold:s=null}={}){let i=t.tolist(),[n,a,o,l]=t.dims,u=[];for(let t=0;t<n;++t){let n=i[t],a=r[t],d=[];for(let t=0;t<a.length;++t){let r=a[t],i=[],u=[],c=[],p=r.at(-2)/l,h=r.at(-1)/o;for(let t=0;t<n.length;++t){let[r,a]=[0,0],o=0,l=-1/0,d=n[t];for(let t=0;t<d.length;++t){let s=d[t];for(let i=0;i<s.length;++i){let n=s[i];o+=n,l=Math.max(l,n),r+=(i+.5)*n,a+=t*n}}if(null!=s&&l<s)continue;let f=[p*r/o,h*a/o];i.push(f),c.push(t),u.push(l)}d.push({bbox:r,scores:u,labels:c,keypoints:i})}u.push(d)}return u}}var uZ={};u(uZ,"YolosImageProcessor",()=>uJ),u(uZ,"YolosFeatureExtractor",()=>u0);class uJ extends lb{post_process_object_detection(...t){return lg(...t)}}class u0 extends uJ{}l(lx,lv),l(lx,lk),l(lx,lS),l(lx,lI),l(lx,lC),l(lx,lB),l(lx,lL),l(lx,lN),l(lx,lV),l(lx,lW),l(lx,lK),l(lx,lY),l(lx,lZ),l(lx,l0),l(lx,l2),l(lx,l4),l(lx,l8),l(lx,l5),l(lx,ut),l(lx,ui),l(lx,uo),l(lx,ud),l(lx,uh),l(lx,u_),l(lx,uy),l(lx,uw),l(lx,u$),l(lx,uz),l(lx,uC),l(lx,uO),l(lx,uR),l(lx,uL),l(lx,uN),l(lx,uq),l(lx,uV),l(lx,uG),l(lx,uK),l(lx,uY),l(lx,uZ);class u1{static async from_pretrained(t,r={}){let s=await ep(t,s0,!0,r),i=s.image_processor_type??s.feature_extractor_type,n=lx[i];return n||(void 0!==i&&console.warn(`Image processor type '${i}' not found, assuming base ImageProcessor. Please report this at ${sJ}.`),n=lb),new n(s)}}class u2 extends lc{static tokenizer_class=sV;static image_processor_class=u1;constructor(t,r){super(t,r);let{tasks_answer_post_processing_type:s,task_prompts_without_inputs:i,task_prompts_with_input:n}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(s??{})),this.task_prompts_without_inputs=new Map(Object.entries(i??{})),this.task_prompts_with_input=new Map(Object.entries(n??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(t){"string"==typeof t&&(t=[t]);let r=[];for(let s of t)if(this.task_prompts_without_inputs.has(s))r.push(this.task_prompts_without_inputs.get(s));else{for(let[t,i]of this.task_prompts_with_input)if(s.includes(t)){r.push(i.replaceAll("{input}",s).replaceAll(t,""));break}r.length!==t.length&&r.push(s)}return r}post_process_generation(t,r,s){let i,n=this.tasks_answer_post_processing_type.get(r)??"pure_text";switch(t=t.replaceAll("<s>","").replaceAll("</s>",""),n){case"pure_text":i=t;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":let a="ocr"===n?"quad_boxes":"bboxes",o=t.matchAll(this.regexes[a]),l=[],u=[];for(let[t,r,...i]of o)l.push(r?r.trim():l.at(-1)??""),u.push(i.map((t,r)=>(Number(t)+.5)/this.size_per_bin*s[r%2]));i={labels:l,[a]:u};break;default:throw Error(`Task "${r}" (of type "${n}") not yet implemented.`)}return{[r]:i}}async _call(t,r=null,s={}){if(!t&&!r)throw Error("Either text or images must be provided");let i=await this.image_processor(t,s),n=r?this.tokenizer(r,s):{};return{...i,...n}}}var u3={};u(u3,"GroundingDinoProcessor",()=>u4);class u4 extends lc{static tokenizer_class=sV;static image_processor_class=u1;async _call(t,r,s={}){let i=t?await this.image_processor(t,s):{};return{...r?this.tokenizer(r,s):{},...i}}post_process_grounded_object_detection(t,r,{box_threshold:s=.25,text_threshold:i=.25,target_sizes:n=null}={}){let{logits:a,pred_boxes:o}=t,l=a.dims[0];if(null!==n&&n.length!==l)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let u=a.dims.at(1),d=a.sigmoid(),c=d.max(-1).tolist(),p=o.tolist().map(t=>t.map(t=>l_(t))),h=[];for(let t=0;t<l;++t){let a=null!==n?n[t]:null;null!==a&&(p[t]=p[t].map(t=>t.map((t,r)=>t*a[(r+1)%2])));let o=c[t],l=[],f=[],m=[];for(let n=0;n<u;++n){let a=o[n];if(a<=s)continue;let u=p[t][n],c=d[t][n];l.push(a),m.push(u);let h=function(t,r){let s=t.dims.at(-1)-1,i=t.tolist();i.fill(!1,0,1),i.fill(!1,s);let n=r.tolist();return i.map((t,r)=>t?r:null).filter(t=>null!==t).map(t=>n[t])}(c.gt(i),r[t]);f.push(h)}h.push({scores:l,boxes:m,labels:this.batch_decode(f)})}return h}}var u6={};u(u6,"Idefics3Processor",()=>u8);class u8 extends lc{static image_processor_class=u1;static tokenizer_class=sV;static uses_processor_config=!0;fake_image_token="<fake_token_around_image>";image_token="<image>";global_img_token="<global-img>";async _call(t,r=null,s={}){let i;s.return_row_col_info??=!0,r&&(i=await this.image_processor(r,s)),Array.isArray(t)||(t=[t]);let n=i.rows??[Array(t.length).fill(0)],a=i.cols??[Array(t.length).fill(0)],o=this.config.image_seq_len,l=[],u=[];for(let r=0;r<t.length;++r){let s=t[r],i=n[r],d=a[r];l.push(function(t,r){let s=0;for(let i of t)i===r&&++s;return s}(s,this.image_token));let c=i.map((t,r)=>(function(t,r,s,i,n,a){if(0===t&&0===r)return`${i}${a}`+n.repeat(s)+`${i}`;let o="";for(let a=0;a<t;++a){for(let t=0;t<r;++t)o+=i+`<row_${a+1}_col_${t+1}>`+n.repeat(s);o+="\n"}return o+(`
${i}${a}`+n.repeat(s)+`${i}`)})(t,d[r],o,this.fake_image_token,this.image_token,this.global_img_token)),p=s.split(this.image_token);if(0===p.length)throw Error("The image token should be present in the text.");let h=p[0];for(let t=0;t<c.length;++t)h+=c[t]+p[t+1];u.push(h)}return{...this.tokenizer(u),...i}}}var u5={};u(u5,"VLChatProcessor",()=>u9);class u9 extends lc{static image_processor_class=u1;static tokenizer_class=sV;static uses_processor_config=!0;constructor(t,r){super(t,r),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(t,{images:r=null,chat_template:s="default"}={}){r?Array.isArray(r)||(r=[r]):r=await Promise.all(t.filter(t=>t.images).flatMap(t=>t.images).map(t=>ip.read(t)));let i=this.tokenizer,n=i.apply_chat_template(t,{tokenize:!1,add_generation_prompt:!0,chat_template:s}),a=t=>i.encode(t,{add_special_tokens:!1}),o=n.split(this.image_tag),l=o.length-1;if(r.length!==l)throw Error(`Number of images provided (${r.length}) does not match number of "${this.image_tag}" image tags (${l})`);let[u,d,c]=i.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]),p=a(o[0]),h=Array(p.length).fill(!1);for(let t=1;t<o.length;++t){let r=Array(this.num_image_tokens).fill(u),s=a(o[t]);p=J(p,[d],r,[c],s),h=J(h,[!1],Array(this.num_image_tokens).fill(!0),[!1],Array(s.length).fill(!1))}let f=[1,p.length],m={input_ids:new eN("int64",p,f),attention_mask:new eN("int64",Array(p.length).fill(1),f),images_seq_mask:new eN("bool",h,f),images_emb_mask:new eN("bool",Array(l*this.num_image_tokens).fill(!0),[1,l,this.num_image_tokens])};if(r&&r.length>0){let t=await this.image_processor(r);return t.pixel_values.unsqueeze_(0),{...m,...t}}return m}}var u7={};u(u7,"JinaCLIPProcessor",()=>de);class de extends lc{static tokenizer_class=sV;static image_processor_class=u1;async _call(t=null,r=null,s={}){if(!t&&!r)throw Error("Either text or images must be provided");let i=t?this.tokenizer(t,s):{},n=r?await this.image_processor(r,s):{};return{...i,...n}}}var dt={};u(dt,"MgpstrProcessor",()=>ds);const dr={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class ds extends lc{static tokenizer_class=sV;static image_processor_class=u1;get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(t,r){if(!dr.hasOwnProperty(r))throw Error(`Format ${r} is not supported.`);let[s,i]=dr[r],n=this[s].bind(this),[a,o]=t.dims,l=[],u=[],d=t.tolist();for(let t=0;t<a;++t){let r=d[t],s=[],n=[];for(let t=1;t<o;++t){let[a,o]=eg(em(r[t]));if(n.push(a),o==i)break;s.push(o)}let a=n.length>0?n.reduce((t,r)=>t*r,1):0;u.push(s),l.push(a)}return[n(u),l]}char_decode(t){return this.char_tokenizer.batch_decode(t).map(t=>t.replaceAll(" ",""))}bpe_decode(t){return this.bpe_tokenizer.batch_decode(t)}wp_decode(t){return this.wp_tokenizer.batch_decode(t).map(t=>t.replaceAll(" ",""))}batch_decode([t,r,s]){let[i,n]=this._decode_helper(t,"char"),[a,o]=this._decode_helper(r,"bpe"),[l,u]=this._decode_helper(s,"wp"),d=[],c=[];for(let t=0;t<i.length;++t){let[r,s]=eg([n[t],o[t],u[t]]);d.push([i[t],a[t],l[t]][s]),c.push(r)}return{generated_text:d,scores:c,char_preds:i,bpe_preds:a,wp_preds:l}}static async from_pretrained(...t){let r=await super.from_pretrained(...t),s=await sV.from_pretrained("Xenova/gpt2"),i=await sV.from_pretrained("Xenova/bert-base-uncased");return r.components={image_processor:r.image_processor,char_tokenizer:r.tokenizer,bpe_tokenizer:s,wp_tokenizer:i},r}async _call(t,r=null){let s=await this.image_processor(t);return r&&(s.labels=this.tokenizer(r).input_ids),s}}var di={};u(di,"MoonshineProcessor",()=>ck);class dn extends Y{constructor(t){super(),this.config=t}static async from_pretrained(t,r){return new this(await ep(t,s0,!0,r))}}function da(t,r){if(!(t instanceof Float32Array||t instanceof Float64Array))throw Error(`${r} expects input to be a Float32Array or a Float64Array, but got ${t?.constructor?.name??typeof t} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}var dl={};u(dl,"ImageFeatureExtractor",()=>lb);var du={};u(du,"ASTFeatureExtractor",()=>ce),h=function(t){for(var r,s=t.length,i=s%3,n=[],a=0,o=s-i;a<o;a+=16383)n.push(function(t,r,s){for(var i,n=[],a=r;a<s;a+=3)i=(t[a]<<16&0xff0000)+(t[a+1]<<8&65280)+(255&t[a+2]),n.push(dd[i>>18&63]+dd[i>>12&63]+dd[i>>6&63]+dd[63&i]);return n.join("")}(t,a,a+16383>o?o:a+16383));return 1===i?n.push(dd[(r=t[s-1])>>2]+dd[r<<4&63]+"=="):2===i&&n.push(dd[(r=(t[s-2]<<8)+t[s-1])>>10]+dd[r>>4&63]+dd[r<<2&63]+"="),n.join("")};for(var dd=[],dc=[],dp="undefined"!=typeof Uint8Array?Uint8Array:Array,dh="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",df=0,dm=dh.length;df<dm;++df)dd[df]=dh[df],dc[dh.charCodeAt(df)]=df;dc[45]=62,dc[95]=63,f=function(t,r,s,i,n){var a,o,l=8*n-i-1,u=(1<<l)-1,d=u>>1,c=-7,p=s?n-1:0,h=s?-1:1,f=t[r+p];for(p+=h,a=f&(1<<-c)-1,f>>=-c,c+=l;c>0;a=256*a+t[r+p],p+=h,c-=8);for(o=a&(1<<-c)-1,a>>=-c,c+=i;c>0;o=256*o+t[r+p],p+=h,c-=8);if(0===a)a=1-d;else{if(a===u)return o?NaN:1/0*(f?-1:1);o+=Math.pow(2,i),a-=d}return(f?-1:1)*o*Math.pow(2,a-i)},m=function(t,r,s,i,n,a){var o,l,u,d=8*a-n-1,c=(1<<d)-1,p=c>>1,h=5960464477539062e-23*(23===n),f=i?0:a-1,m=i?1:-1,_=+(r<0||0===r&&1/r<0);for(isNaN(r=Math.abs(r))||r===1/0?(l=+!!isNaN(r),o=c):(o=Math.floor(Math.log(r)/Math.LN2),r*(u=Math.pow(2,-o))<1&&(o--,u*=2),o+p>=1?r+=h/u:r+=h*Math.pow(2,1-p),r*u>=2&&(o++,u/=2),o+p>=c?(l=0,o=c):o+p>=1?(l=(r*u-1)*Math.pow(2,n),o+=p):(l=r*Math.pow(2,p-1)*Math.pow(2,n),o=0));n>=8;t[s+f]=255&l,f+=m,l/=256,n-=8);for(o=o<<n|l,d+=n;d>0;t[s+f]=255&o,f+=m,o/=256,d-=8);t[s+f-m]|=128*_};const d_="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;function dg(t){if(t>0x7fffffff)throw RangeError('The value "'+t+'" is invalid for option "size"');let r=new Uint8Array(t);return Object.setPrototypeOf(r,dy.prototype),r}function dy(t,r,s){if("number"==typeof t){if("string"==typeof r)throw TypeError('The "string" argument must be of type string. Received type number');return dx(t)}return dw(t,r,s)}function dw(t,r,s){if("string"==typeof t){var i=t,n=r;if(("string"!=typeof n||""===n)&&(n="utf8"),!dy.isEncoding(n))throw TypeError("Unknown encoding: "+n);let s=0|dE(i,n),a=dg(s),o=a.write(i,n);return o!==s&&(a=a.slice(0,o)),a}if(ArrayBuffer.isView(t)){var a=t;if(dK(a,Uint8Array)){let t=new Uint8Array(a);return d$(t.buffer,t.byteOffset,t.byteLength)}return dv(a)}if(null==t)throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t);if(dK(t,ArrayBuffer)||t&&dK(t.buffer,ArrayBuffer)||"undefined"!=typeof SharedArrayBuffer&&(dK(t,SharedArrayBuffer)||t&&dK(t.buffer,SharedArrayBuffer)))return d$(t,r,s);if("number"==typeof t)throw TypeError('The "value" argument must not be of type number. Received type number');let o=t.valueOf&&t.valueOf();if(null!=o&&o!==t)return dy.from(o,r,s);let l=function(t){if(dy.isBuffer(t)){let r=0|dk(t.length),s=dg(r);return 0===s.length||t.copy(s,0,0,r),s}return void 0!==t.length?"number"!=typeof t.length||function(t){return t!=t}(t.length)?dg(0):dv(t):"Buffer"===t.type&&Array.isArray(t.data)?dv(t.data):void 0}(t);if(l)return l;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof t[Symbol.toPrimitive])return dy.from(t[Symbol.toPrimitive]("string"),r,s);throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t)}function db(t){if("number"!=typeof t)throw TypeError('"size" argument must be of type number');if(t<0)throw RangeError('The value "'+t+'" is invalid for option "size"')}function dx(t){return db(t),dg(t<0?0:0|dk(t))}function dv(t){let r=t.length<0?0:0|dk(t.length),s=dg(r);for(let i=0;i<r;i+=1)s[i]=255&t[i];return s}function d$(t,r,s){let i;if(r<0||t.byteLength<r)throw RangeError('"offset" is outside of buffer bounds');if(t.byteLength<r+(s||0))throw RangeError('"length" is outside of buffer bounds');return Object.setPrototypeOf(i=void 0===r&&void 0===s?new Uint8Array(t):void 0===s?new Uint8Array(t,r):new Uint8Array(t,r,s),dy.prototype),i}function dk(t){if(t>=0x7fffffff)throw RangeError("Attempt to allocate Buffer larger than maximum size: 0x7fffffff bytes");return 0|t}function dE(t,r){if(dy.isBuffer(t))return t.length;if(ArrayBuffer.isView(t)||dK(t,ArrayBuffer))return t.byteLength;if("string"!=typeof t)throw TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof t);let s=t.length,i=arguments.length>2&&!0===arguments[2];if(!i&&0===s)return 0;let n=!1;for(;;)switch(r){case"ascii":case"latin1":case"binary":return s;case"utf8":case"utf-8":return dG(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*s;case"hex":return s>>>1;case"base64":return dW(t).length;default:if(n)return i?-1:dG(t).length;r=(""+r).toLowerCase(),n=!0}}function dS(t,r,s){let i=!1;if((void 0===r||r<0)&&(r=0),r>this.length||((void 0===s||s>this.length)&&(s=this.length),s<=0||(s>>>=0)<=(r>>>=0)))return"";for(t||(t="utf8");;)switch(t){case"hex":return function(t,r,s){let i=t.length;(!r||r<0)&&(r=0),(!s||s<0||s>i)&&(s=i);let n="";for(let i=r;i<s;++i)n+=dX[t[i]];return n}(this,r,s);case"utf8":case"utf-8":return dA(this,r,s);case"ascii":return function(t,r,s){let i="";s=Math.min(t.length,s);for(let n=r;n<s;++n)i+=String.fromCharCode(127&t[n]);return i}(this,r,s);case"latin1":case"binary":return function(t,r,s){let i="";s=Math.min(t.length,s);for(let n=r;n<s;++n)i+=String.fromCharCode(t[n]);return i}(this,r,s);case"base64":var n,a,o;return n=this,a=r,o=s,0===a&&o===n.length?h(n):h(n.slice(a,o));case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return function(t,r,s){let i=t.slice(r,s),n="";for(let t=0;t<i.length-1;t+=2)n+=String.fromCharCode(i[t]+256*i[t+1]);return n}(this,r,s);default:if(i)throw TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),i=!0}}function dT(t,r,s){let i=t[r];t[r]=t[s],t[s]=i}function dI(t,r,s,i,n){var a;if(0===t.length)return -1;if("string"==typeof s?(i=s,s=0):s>0x7fffffff?s=0x7fffffff:s<-0x80000000&&(s=-0x80000000),(a=s*=1)!=a&&(s=n?0:t.length-1),s<0&&(s=t.length+s),s>=t.length)if(n)return -1;else s=t.length-1;else if(s<0)if(!n)return -1;else s=0;if("string"==typeof r&&(r=dy.from(r,i)),dy.isBuffer(r))return 0===r.length?-1:dz(t,r,s,i,n);if("number"==typeof r){if(r&=255,"function"==typeof Uint8Array.prototype.indexOf)if(n)return Uint8Array.prototype.indexOf.call(t,r,s);else return Uint8Array.prototype.lastIndexOf.call(t,r,s);return dz(t,[r],s,i,n)}throw TypeError("val must be string, number or Buffer")}function dz(t,r,s,i,n){let a,o=1,l=t.length,u=r.length;if(void 0!==i&&("ucs2"===(i=String(i).toLowerCase())||"ucs-2"===i||"utf16le"===i||"utf-16le"===i)){if(t.length<2||r.length<2)return -1;o=2,l/=2,u/=2,s/=2}function d(t,r){return 1===o?t[r]:t.readUInt16BE(r*o)}if(n){let i=-1;for(a=s;a<l;a++)if(d(t,a)===d(r,-1===i?0:a-i)){if(-1===i&&(i=a),a-i+1===u)return i*o}else -1!==i&&(a-=a-i),i=-1}else for(s+u>l&&(s=l-u),a=s;a>=0;a--){let s=!0;for(let i=0;i<u;i++)if(d(t,a+i)!==d(r,i)){s=!1;break}if(s)return a}return -1}function dA(t,r,s){s=Math.min(t.length,s);let i=[],n=r;for(;n<s;){let r=t[n],a=null,o=r>239?4:r>223?3:r>191?2:1;if(n+o<=s){let s,i,l,u;switch(o){case 1:r<128&&(a=r);break;case 2:(192&(s=t[n+1]))==128&&(u=(31&r)<<6|63&s)>127&&(a=u);break;case 3:s=t[n+1],i=t[n+2],(192&s)==128&&(192&i)==128&&(u=(15&r)<<12|(63&s)<<6|63&i)>2047&&(u<55296||u>57343)&&(a=u);break;case 4:s=t[n+1],i=t[n+2],l=t[n+3],(192&s)==128&&(192&i)==128&&(192&l)==128&&(u=(15&r)<<18|(63&s)<<12|(63&i)<<6|63&l)>65535&&u<1114112&&(a=u)}}null===a?(a=65533,o=1):a>65535&&(a-=65536,i.push(a>>>10&1023|55296),a=56320|1023&a),i.push(a),n+=o}var a=i;let o=a.length;if(o<=4096)return String.fromCharCode.apply(String,a);let l="",u=0;for(;u<o;)l+=String.fromCharCode.apply(String,a.slice(u,u+=4096));return l}function dC(t,r,s){if(t%1!=0||t<0)throw RangeError("offset is not uint");if(t+r>s)throw RangeError("Trying to access beyond buffer length")}function dM(t,r,s,i,n,a){if(!dy.isBuffer(t))throw TypeError('"buffer" argument must be a Buffer instance');if(r>n||r<a)throw RangeError('"value" argument is out of bounds');if(s+i>t.length)throw RangeError("Index out of range")}function dO(t,r,s,i,n){dF(r,i,n,t,s,7);let a=Number(r&BigInt(0xffffffff));t[s++]=a,a>>=8,t[s++]=a,a>>=8,t[s++]=a,a>>=8,t[s++]=a;let o=Number(r>>BigInt(32)&BigInt(0xffffffff));return t[s++]=o,o>>=8,t[s++]=o,o>>=8,t[s++]=o,o>>=8,t[s++]=o,s}function dB(t,r,s,i,n){dF(r,i,n,t,s,7);let a=Number(r&BigInt(0xffffffff));t[s+7]=a,a>>=8,t[s+6]=a,a>>=8,t[s+5]=a,a>>=8,t[s+4]=a;let o=Number(r>>BigInt(32)&BigInt(0xffffffff));return t[s+3]=o,o>>=8,t[s+2]=o,o>>=8,t[s+1]=o,o>>=8,t[s]=o,s+8}function dR(t,r,s,i,n,a){if(s+i>t.length||s<0)throw RangeError("Index out of range")}function dP(t,r,s,i,n){return r*=1,s>>>=0,n||dR(t,r,s,4,34028234663852886e22,-34028234663852886e22),m(t,r,s,i,23,4),s+4}function dL(t,r,s,i,n){return r*=1,s>>>=0,n||dR(t,r,s,8,17976931348623157e292,-17976931348623157e292),m(t,r,s,i,52,8),s+8}dy.TYPED_ARRAY_SUPPORT=function(){try{let t=new Uint8Array(1),r={foo:function(){return 42}};return Object.setPrototypeOf(r,Uint8Array.prototype),Object.setPrototypeOf(t,r),42===t.foo()}catch(t){return!1}}(),dy.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(dy.prototype,"parent",{enumerable:!0,get:function(){if(dy.isBuffer(this))return this.buffer}}),Object.defineProperty(dy.prototype,"offset",{enumerable:!0,get:function(){if(dy.isBuffer(this))return this.byteOffset}}),dy.poolSize=8192,dy.from=function(t,r,s){return dw(t,r,s)},Object.setPrototypeOf(dy.prototype,Uint8Array.prototype),Object.setPrototypeOf(dy,Uint8Array),dy.alloc=function(t,r,s){return(db(t),t<=0)?dg(t):void 0!==r?"string"==typeof s?dg(t).fill(r,s):dg(t).fill(r):dg(t)},dy.allocUnsafe=function(t){return dx(t)},dy.allocUnsafeSlow=function(t){return dx(t)},dy.isBuffer=function(t){return null!=t&&!0===t._isBuffer&&t!==dy.prototype},dy.compare=function(t,r){if(dK(t,Uint8Array)&&(t=dy.from(t,t.offset,t.byteLength)),dK(r,Uint8Array)&&(r=dy.from(r,r.offset,r.byteLength)),!dy.isBuffer(t)||!dy.isBuffer(r))throw TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(t===r)return 0;let s=t.length,i=r.length;for(let n=0,a=Math.min(s,i);n<a;++n)if(t[n]!==r[n]){s=t[n],i=r[n];break}return s<i?-1:+(i<s)},dy.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},dy.concat=function(t,r){let s;if(!Array.isArray(t))throw TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return dy.alloc(0);if(void 0===r)for(s=0,r=0;s<t.length;++s)r+=t[s].length;let i=dy.allocUnsafe(r),n=0;for(s=0;s<t.length;++s){let r=t[s];if(dK(r,Uint8Array))n+r.length>i.length?(dy.isBuffer(r)||(r=dy.from(r)),r.copy(i,n)):Uint8Array.prototype.set.call(i,r,n);else if(dy.isBuffer(r))r.copy(i,n);else throw TypeError('"list" argument must be an Array of Buffers');n+=r.length}return i},dy.byteLength=dE,dy.prototype._isBuffer=!0,dy.prototype.swap16=function(){let t=this.length;if(t%2!=0)throw RangeError("Buffer size must be a multiple of 16-bits");for(let r=0;r<t;r+=2)dT(this,r,r+1);return this},dy.prototype.swap32=function(){let t=this.length;if(t%4!=0)throw RangeError("Buffer size must be a multiple of 32-bits");for(let r=0;r<t;r+=4)dT(this,r,r+3),dT(this,r+1,r+2);return this},dy.prototype.swap64=function(){let t=this.length;if(t%8!=0)throw RangeError("Buffer size must be a multiple of 64-bits");for(let r=0;r<t;r+=8)dT(this,r,r+7),dT(this,r+1,r+6),dT(this,r+2,r+5),dT(this,r+3,r+4);return this},dy.prototype.toString=function(){let t=this.length;return 0===t?"":0==arguments.length?dA(this,0,t):dS.apply(this,arguments)},dy.prototype.toLocaleString=dy.prototype.toString,dy.prototype.equals=function(t){if(!dy.isBuffer(t))throw TypeError("Argument must be a Buffer");return this===t||0===dy.compare(this,t)},dy.prototype.inspect=function(){let t="";return t=this.toString("hex",0,50).replace(/(.{2})/g,"$1 ").trim(),this.length>50&&(t+=" ... "),"<Buffer "+t+">"},d_&&(dy.prototype[d_]=dy.prototype.inspect),dy.prototype.compare=function(t,r,s,i,n){if(dK(t,Uint8Array)&&(t=dy.from(t,t.offset,t.byteLength)),!dy.isBuffer(t))throw TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof t);if(void 0===r&&(r=0),void 0===s&&(s=t?t.length:0),void 0===i&&(i=0),void 0===n&&(n=this.length),r<0||s>t.length||i<0||n>this.length)throw RangeError("out of range index");if(i>=n&&r>=s)return 0;if(i>=n)return -1;if(r>=s)return 1;if(r>>>=0,s>>>=0,i>>>=0,n>>>=0,this===t)return 0;let a=n-i,o=s-r,l=Math.min(a,o),u=this.slice(i,n),d=t.slice(r,s);for(let t=0;t<l;++t)if(u[t]!==d[t]){a=u[t],o=d[t];break}return a<o?-1:+(o<a)},dy.prototype.includes=function(t,r,s){return -1!==this.indexOf(t,r,s)},dy.prototype.indexOf=function(t,r,s){return dI(this,t,r,s,!0)},dy.prototype.lastIndexOf=function(t,r,s){return dI(this,t,r,s,!1)},dy.prototype.write=function(t,r,s,i){var n,a,o,l,u,d,c,p;if(void 0===r)i="utf8",s=this.length,r=0;else if(void 0===s&&"string"==typeof r)i=r,s=this.length,r=0;else if(isFinite(r))r>>>=0,isFinite(s)?(s>>>=0,void 0===i&&(i="utf8")):(i=s,s=void 0);else throw Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");let h=this.length-r;if((void 0===s||s>h)&&(s=h),t.length>0&&(s<0||r<0)||r>this.length)throw RangeError("Attempt to write outside buffer bounds");i||(i="utf8");let f=!1;for(;;)switch(i){case"hex":return function(t,r,s,i){let n;s=Number(s)||0;let a=t.length-s;i?(i=Number(i))>a&&(i=a):i=a;let o=r.length;for(i>o/2&&(i=o/2),n=0;n<i;++n){var l;let i=parseInt(r.substr(2*n,2),16);if((l=i)!=l)break;t[s+n]=i}return n}(this,t,r,s);case"utf8":case"utf-8":return n=r,a=s,dH(dG(t,this.length-n),this,n,a);case"ascii":case"latin1":case"binary":return o=r,l=s,dH(function(t){let r=[];for(let s=0;s<t.length;++s)r.push(255&t.charCodeAt(s));return r}(t),this,o,l);case"base64":return u=r,d=s,dH(dW(t),this,u,d);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return c=r,p=s,dH(function(t,r){let s,i,n=[];for(let a=0;a<t.length&&!((r-=2)<0);++a)i=(s=t.charCodeAt(a))>>8,n.push(s%256),n.push(i);return n}(t,this.length-c),this,c,p);default:if(f)throw TypeError("Unknown encoding: "+i);i=(""+i).toLowerCase(),f=!0}},dy.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}},dy.prototype.slice=function(t,r){let s=this.length;t=~~t,r=void 0===r?s:~~r,t<0?(t+=s)<0&&(t=0):t>s&&(t=s),r<0?(r+=s)<0&&(r=0):r>s&&(r=s),r<t&&(r=t);let i=this.subarray(t,r);return Object.setPrototypeOf(i,dy.prototype),i},dy.prototype.readUintLE=dy.prototype.readUIntLE=function(t,r,s){t>>>=0,r>>>=0,s||dC(t,r,this.length);let i=this[t],n=1,a=0;for(;++a<r&&(n*=256);)i+=this[t+a]*n;return i},dy.prototype.readUintBE=dy.prototype.readUIntBE=function(t,r,s){t>>>=0,r>>>=0,s||dC(t,r,this.length);let i=this[t+--r],n=1;for(;r>0&&(n*=256);)i+=this[t+--r]*n;return i},dy.prototype.readUint8=dy.prototype.readUInt8=function(t,r){return t>>>=0,r||dC(t,1,this.length),this[t]},dy.prototype.readUint16LE=dy.prototype.readUInt16LE=function(t,r){return t>>>=0,r||dC(t,2,this.length),this[t]|this[t+1]<<8},dy.prototype.readUint16BE=dy.prototype.readUInt16BE=function(t,r){return t>>>=0,r||dC(t,2,this.length),this[t]<<8|this[t+1]},dy.prototype.readUint32LE=dy.prototype.readUInt32LE=function(t,r){return t>>>=0,r||dC(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+0x1000000*this[t+3]},dy.prototype.readUint32BE=dy.prototype.readUInt32BE=function(t,r){return t>>>=0,r||dC(t,4,this.length),0x1000000*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},dy.prototype.readBigUInt64LE=dY(function(t){dq(t>>>=0,"offset");let r=this[t],s=this[t+7];(void 0===r||void 0===s)&&dV(t,this.length-8);let i=r+256*this[++t]+65536*this[++t]+0x1000000*this[++t],n=this[++t]+256*this[++t]+65536*this[++t]+0x1000000*s;return BigInt(i)+(BigInt(n)<<BigInt(32))}),dy.prototype.readBigUInt64BE=dY(function(t){dq(t>>>=0,"offset");let r=this[t],s=this[t+7];(void 0===r||void 0===s)&&dV(t,this.length-8);let i=0x1000000*r+65536*this[++t]+256*this[++t]+this[++t],n=0x1000000*this[++t]+65536*this[++t]+256*this[++t]+s;return(BigInt(i)<<BigInt(32))+BigInt(n)}),dy.prototype.readIntLE=function(t,r,s){t>>>=0,r>>>=0,s||dC(t,r,this.length);let i=this[t],n=1,a=0;for(;++a<r&&(n*=256);)i+=this[t+a]*n;return i>=(n*=128)&&(i-=Math.pow(2,8*r)),i},dy.prototype.readIntBE=function(t,r,s){t>>>=0,r>>>=0,s||dC(t,r,this.length);let i=r,n=1,a=this[t+--i];for(;i>0&&(n*=256);)a+=this[t+--i]*n;return a>=(n*=128)&&(a-=Math.pow(2,8*r)),a},dy.prototype.readInt8=function(t,r){return(t>>>=0,r||dC(t,1,this.length),128&this[t])?-((255-this[t]+1)*1):this[t]},dy.prototype.readInt16LE=function(t,r){t>>>=0,r||dC(t,2,this.length);let s=this[t]|this[t+1]<<8;return 32768&s?0xffff0000|s:s},dy.prototype.readInt16BE=function(t,r){t>>>=0,r||dC(t,2,this.length);let s=this[t+1]|this[t]<<8;return 32768&s?0xffff0000|s:s},dy.prototype.readInt32LE=function(t,r){return t>>>=0,r||dC(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},dy.prototype.readInt32BE=function(t,r){return t>>>=0,r||dC(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},dy.prototype.readBigInt64LE=dY(function(t){dq(t>>>=0,"offset");let r=this[t],s=this[t+7];return(void 0===r||void 0===s)&&dV(t,this.length-8),(BigInt(this[t+4]+256*this[t+5]+65536*this[t+6]+(s<<24))<<BigInt(32))+BigInt(r+256*this[++t]+65536*this[++t]+0x1000000*this[++t])}),dy.prototype.readBigInt64BE=dY(function(t){dq(t>>>=0,"offset");let r=this[t],s=this[t+7];return(void 0===r||void 0===s)&&dV(t,this.length-8),(BigInt((r<<24)+65536*this[++t]+256*this[++t]+this[++t])<<BigInt(32))+BigInt(0x1000000*this[++t]+65536*this[++t]+256*this[++t]+s)}),dy.prototype.readFloatLE=function(t,r){return t>>>=0,r||dC(t,4,this.length),f(this,t,!0,23,4)},dy.prototype.readFloatBE=function(t,r){return t>>>=0,r||dC(t,4,this.length),f(this,t,!1,23,4)},dy.prototype.readDoubleLE=function(t,r){return t>>>=0,r||dC(t,8,this.length),f(this,t,!0,52,8)},dy.prototype.readDoubleBE=function(t,r){return t>>>=0,r||dC(t,8,this.length),f(this,t,!1,52,8)},dy.prototype.writeUintLE=dy.prototype.writeUIntLE=function(t,r,s,i){if(t*=1,r>>>=0,s>>>=0,!i){let i=Math.pow(2,8*s)-1;dM(this,t,r,s,i,0)}let n=1,a=0;for(this[r]=255&t;++a<s&&(n*=256);)this[r+a]=t/n&255;return r+s},dy.prototype.writeUintBE=dy.prototype.writeUIntBE=function(t,r,s,i){if(t*=1,r>>>=0,s>>>=0,!i){let i=Math.pow(2,8*s)-1;dM(this,t,r,s,i,0)}let n=s-1,a=1;for(this[r+n]=255&t;--n>=0&&(a*=256);)this[r+n]=t/a&255;return r+s},dy.prototype.writeUint8=dy.prototype.writeUInt8=function(t,r,s){return t*=1,r>>>=0,s||dM(this,t,r,1,255,0),this[r]=255&t,r+1},dy.prototype.writeUint16LE=dy.prototype.writeUInt16LE=function(t,r,s){return t*=1,r>>>=0,s||dM(this,t,r,2,65535,0),this[r]=255&t,this[r+1]=t>>>8,r+2},dy.prototype.writeUint16BE=dy.prototype.writeUInt16BE=function(t,r,s){return t*=1,r>>>=0,s||dM(this,t,r,2,65535,0),this[r]=t>>>8,this[r+1]=255&t,r+2},dy.prototype.writeUint32LE=dy.prototype.writeUInt32LE=function(t,r,s){return t*=1,r>>>=0,s||dM(this,t,r,4,0xffffffff,0),this[r+3]=t>>>24,this[r+2]=t>>>16,this[r+1]=t>>>8,this[r]=255&t,r+4},dy.prototype.writeUint32BE=dy.prototype.writeUInt32BE=function(t,r,s){return t*=1,r>>>=0,s||dM(this,t,r,4,0xffffffff,0),this[r]=t>>>24,this[r+1]=t>>>16,this[r+2]=t>>>8,this[r+3]=255&t,r+4},dy.prototype.writeBigUInt64LE=dY(function(t,r=0){return dO(this,t,r,BigInt(0),BigInt("0xffffffffffffffff"))}),dy.prototype.writeBigUInt64BE=dY(function(t,r=0){return dB(this,t,r,BigInt(0),BigInt("0xffffffffffffffff"))}),dy.prototype.writeIntLE=function(t,r,s,i){if(t*=1,r>>>=0,!i){let i=Math.pow(2,8*s-1);dM(this,t,r,s,i-1,-i)}let n=0,a=1,o=0;for(this[r]=255&t;++n<s&&(a*=256);)t<0&&0===o&&0!==this[r+n-1]&&(o=1),this[r+n]=(t/a|0)-o&255;return r+s},dy.prototype.writeIntBE=function(t,r,s,i){if(t*=1,r>>>=0,!i){let i=Math.pow(2,8*s-1);dM(this,t,r,s,i-1,-i)}let n=s-1,a=1,o=0;for(this[r+n]=255&t;--n>=0&&(a*=256);)t<0&&0===o&&0!==this[r+n+1]&&(o=1),this[r+n]=(t/a|0)-o&255;return r+s},dy.prototype.writeInt8=function(t,r,s){return t*=1,r>>>=0,s||dM(this,t,r,1,127,-128),t<0&&(t=255+t+1),this[r]=255&t,r+1},dy.prototype.writeInt16LE=function(t,r,s){return t*=1,r>>>=0,s||dM(this,t,r,2,32767,-32768),this[r]=255&t,this[r+1]=t>>>8,r+2},dy.prototype.writeInt16BE=function(t,r,s){return t*=1,r>>>=0,s||dM(this,t,r,2,32767,-32768),this[r]=t>>>8,this[r+1]=255&t,r+2},dy.prototype.writeInt32LE=function(t,r,s){return t*=1,r>>>=0,s||dM(this,t,r,4,0x7fffffff,-0x80000000),this[r]=255&t,this[r+1]=t>>>8,this[r+2]=t>>>16,this[r+3]=t>>>24,r+4},dy.prototype.writeInt32BE=function(t,r,s){return t*=1,r>>>=0,s||dM(this,t,r,4,0x7fffffff,-0x80000000),t<0&&(t=0xffffffff+t+1),this[r]=t>>>24,this[r+1]=t>>>16,this[r+2]=t>>>8,this[r+3]=255&t,r+4},dy.prototype.writeBigInt64LE=dY(function(t,r=0){return dO(this,t,r,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),dy.prototype.writeBigInt64BE=dY(function(t,r=0){return dB(this,t,r,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),dy.prototype.writeFloatLE=function(t,r,s){return dP(this,t,r,!0,s)},dy.prototype.writeFloatBE=function(t,r,s){return dP(this,t,r,!1,s)},dy.prototype.writeDoubleLE=function(t,r,s){return dL(this,t,r,!0,s)},dy.prototype.writeDoubleBE=function(t,r,s){return dL(this,t,r,!1,s)},dy.prototype.copy=function(t,r,s,i){if(!dy.isBuffer(t))throw TypeError("argument should be a Buffer");if(s||(s=0),i||0===i||(i=this.length),r>=t.length&&(r=t.length),r||(r=0),i>0&&i<s&&(i=s),i===s||0===t.length||0===this.length)return 0;if(r<0)throw RangeError("targetStart out of bounds");if(s<0||s>=this.length)throw RangeError("Index out of range");if(i<0)throw RangeError("sourceEnd out of bounds");i>this.length&&(i=this.length),t.length-r<i-s&&(i=t.length-r+s);let n=i-s;return this===t&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(r,s,i):Uint8Array.prototype.set.call(t,this.subarray(s,i),r),n},dy.prototype.fill=function(t,r,s,i){let n;if("string"==typeof t){if("string"==typeof r?(i=r,r=0,s=this.length):"string"==typeof s&&(i=s,s=this.length),void 0!==i&&"string"!=typeof i)throw TypeError("encoding must be a string");if("string"==typeof i&&!dy.isEncoding(i))throw TypeError("Unknown encoding: "+i);if(1===t.length){let r=t.charCodeAt(0);("utf8"===i&&r<128||"latin1"===i)&&(t=r)}}else"number"==typeof t?t&=255:"boolean"==typeof t&&(t=Number(t));if(r<0||this.length<r||this.length<s)throw RangeError("Out of range index");if(s<=r)return this;if(r>>>=0,s=void 0===s?this.length:s>>>0,t||(t=0),"number"==typeof t)for(n=r;n<s;++n)this[n]=t;else{let a=dy.isBuffer(t)?t:dy.from(t,i),o=a.length;if(0===o)throw TypeError('The value "'+t+'" is invalid for argument "value"');for(n=0;n<s-r;++n)this[n+r]=a[n%o]}return this};const dD={};function dU(t,r,s){dD[t]=class extends s{constructor(){super(),Object.defineProperty(this,"message",{value:r.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${t}]`,this.stack,delete this.name}get code(){return t}set code(t){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:t,writable:!0})}toString(){return`${this.name} [${t}]: ${this.message}`}}}function dN(t){let r="",s=t.length,i=+("-"===t[0]);for(;s>=i+4;s-=3)r=`_${t.slice(s-3,s)}${r}`;return`${t.slice(0,s)}${r}`}function dF(t,r,s,i,n,a){if(t>s||t<r){let i,n="bigint"==typeof r?"n":"";throw i=a>3?0===r||r===BigInt(0)?`>= 0${n} and < 2${n} ** ${(a+1)*8}${n}`:`>= -(2${n} ** ${(a+1)*8-1}${n}) and < 2 ** ${(a+1)*8-1}${n}`:`>= ${r}${n} and <= ${s}${n}`,new dD.ERR_OUT_OF_RANGE("value",i,t)}dq(n,"offset"),(void 0===i[n]||void 0===i[n+a])&&dV(n,i.length-(a+1))}function dq(t,r){if("number"!=typeof t)throw new dD.ERR_INVALID_ARG_TYPE(r,"number",t)}function dV(t,r,s){if(Math.floor(t)!==t)throw dq(t,s),new dD.ERR_OUT_OF_RANGE(s||"offset","an integer",t);if(r<0)throw new dD.ERR_BUFFER_OUT_OF_BOUNDS;throw new dD.ERR_OUT_OF_RANGE(s||"offset",`>= ${+!!s} and <= ${r}`,t)}dU("ERR_BUFFER_OUT_OF_BOUNDS",function(t){return t?`${t} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"},RangeError),dU("ERR_INVALID_ARG_TYPE",function(t,r){return`The "${t}" argument must be of type number. Received type ${typeof r}`},TypeError),dU("ERR_OUT_OF_RANGE",function(t,r,s){let i=`The value of "${t}" is out of range.`,n=s;return Number.isInteger(s)&&Math.abs(s)>0x100000000?n=dN(String(s)):"bigint"==typeof s&&(n=String(s),(s>BigInt(2)**BigInt(32)||s<-(BigInt(2)**BigInt(32)))&&(n=dN(n)),n+="n"),i+=` It must be ${r}. Received ${n}`},RangeError);const dj=/[^+/0-9A-Za-z-_]/g;function dG(t,r){let s;r=r||1/0;let i=t.length,n=null,a=[];for(let o=0;o<i;++o){if((s=t.charCodeAt(o))>55295&&s<57344){if(!n){if(s>56319||o+1===i){(r-=3)>-1&&a.push(239,191,189);continue}n=s;continue}if(s<56320){(r-=3)>-1&&a.push(239,191,189),n=s;continue}s=(n-55296<<10|s-56320)+65536}else n&&(r-=3)>-1&&a.push(239,191,189);if(n=null,s<128){if((r-=1)<0)break;a.push(s)}else if(s<2048){if((r-=2)<0)break;a.push(s>>6|192,63&s|128)}else if(s<65536){if((r-=3)<0)break;a.push(s>>12|224,s>>6&63|128,63&s|128)}else if(s<1114112){if((r-=4)<0)break;a.push(s>>18|240,s>>12&63|128,s>>6&63|128,63&s|128)}else throw Error("Invalid code point")}return a}function dW(t){return function(t){var r,s,i=function(t){var r=t.length;if(r%4>0)throw Error("Invalid string. Length must be a multiple of 4");var s=t.indexOf("=");-1===s&&(s=r);var i=s===r?0:4-s%4;return[s,i]}(t),n=i[0],a=i[1],o=new dp((n+a)*3/4-a),l=0,u=a>0?n-4:n;for(s=0;s<u;s+=4)r=dc[t.charCodeAt(s)]<<18|dc[t.charCodeAt(s+1)]<<12|dc[t.charCodeAt(s+2)]<<6|dc[t.charCodeAt(s+3)],o[l++]=r>>16&255,o[l++]=r>>8&255,o[l++]=255&r;return 2===a&&(r=dc[t.charCodeAt(s)]<<2|dc[t.charCodeAt(s+1)]>>4,o[l++]=255&r),1===a&&(r=dc[t.charCodeAt(s)]<<10|dc[t.charCodeAt(s+1)]<<4|dc[t.charCodeAt(s+2)]>>2,o[l++]=r>>8&255,o[l++]=255&r),o}(function(t){if((t=(t=t.split("=")[0]).trim().replace(dj,"")).length<2)return"";for(;t.length%4!=0;)t+="=";return t}(t))}function dH(t,r,s,i){let n;for(n=0;n<i&&!(n+s>=r.length)&&!(n>=t.length);++n)r[n+s]=t[n];return n}function dK(t,r){return t instanceof r||null!=t&&null!=t.constructor&&null!=t.constructor.name&&t.constructor.name===r.name}const dX=function(){let t="0123456789abcdef",r=Array(256);for(let s=0;s<16;++s){let i=16*s;for(let n=0;n<16;++n)r[i+n]=t[s]+t[n]}return r}();function dY(t){return"undefined"==typeof BigInt?dQ:t}function dQ(){throw Error("BigInt not supported")}async function dZ(t,r){let s;if("undefined"==typeof AudioContext)throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");let i=await (await eo(t)).arrayBuffer(),n=new AudioContext({sampleRate:r});void 0===r&&console.warn(`No sampling rate provided, using default of ${n.sampleRate}Hz.`);let a=await n.decodeAudioData(i);if(2===a.numberOfChannels){let t=Math.sqrt(2),r=a.getChannelData(0),i=a.getChannelData(1);s=new Float32Array(r.length);for(let n=0;n<a.length;++n)s[n]=t*(r[n]+i[n])/2}else s=a.getChannelData(0);return s}function dJ(t,r){if(t<1)return new Float64Array;if(1===t)return new Float64Array([1]);let s=1-r,i=2*Math.PI/(t-1),n=new Float64Array(t);for(let a=0;a<t;++a)n[a]=r-s*Math.cos(a*i);return n}const d0={htk:t=>2595*Math.log10(1+t/700),kaldi:t=>1127*Math.log(1+t/700),slaney:(t,r=1e3,s=15,i=27/Math.log(6.4))=>t>=r?s+Math.log(t/r)*i:3*t/200};function d1(t,r="htk"){let s=d0[r];if(!s)throw Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return"number"==typeof t?s(t):t.map(t=>s(t))}const d2={htk:t=>700*(10**(t/2595)-1),kaldi:t=>700*(Math.exp(t/1127)-1),slaney:(t,r=1e3,s=15,i=Math.log(6.4)/27)=>t>=s?r*Math.exp(i*(t-s)):200*t/3};function d3(t,r,s){let i=(r-t)/(s-1);return Float64Array.from({length:s},(r,s)=>t+i*s)}function d4(t,r,s,i,n,a=null,o="htk",l=!1){let u;if(null!==a&&"slaney"!==a)throw Error('norm must be one of null or "slaney"');if(t<2)throw Error(`Require num_frequency_bins: ${t} >= 2`);if(s>i)throw Error(`Require min_frequency: ${s} <= max_frequency: ${i}`);let d=d3(d1(s,o),d1(i,o),r+2),c=function(t,r="htk"){let s=d2[r];if(!s)throw Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return"number"==typeof t?s(t):t.map(t=>s(t))}(d,o);if(l){let r=n/((t-1)*2);u=d1(Float64Array.from({length:t},(t,s)=>s*r),o),c=d}else u=d3(0,Math.floor(n/2),t);let p=function(t,r){let s=Float64Array.from({length:r.length-1},(t,s)=>r[s+1]-r[s]),i=Array.from({length:t.length},()=>Array(r.length));for(let s=0;s<t.length;++s){let n=i[s];for(let i=0;i<r.length;++i)n[i]=r[i]-t[s]}let n=r.length-2,a=Array.from({length:n},()=>Array(t.length));for(let r=0;r<t.length;++r){let t=i[r];for(let i=0;i<n;++i){let n=-t[i]/s[i],o=t[i+2]/s[i+1];a[i][r]=Math.max(0,Math.min(n,o))}}return a}(u,c);if(null!==a&&"slaney"===a)for(let s=0;s<r;++s){let r=p[s],i=2/(c[s+2]-c[s]);for(let s=0;s<t;++s)r[s]*=i}return p}function d6(t,r,s,i,n){if(s<=0)throw Error("reference must be greater than zero");if(i<=0)throw Error("min_value must be greater than zero");let a=Math.log10(s=Math.max(i,s));for(let s=0;s<t.length;++s)t[s]=r*Math.log10(Math.max(i,t[s])-a);if(null!==n){if(n<=0)throw Error("db_range must be greater than zero");let r=eg(t)[0]-n;for(let s=0;s<t.length;++s)t[s]=Math.max(t[s],r)}return t}async function d8(t,r,s,i,{fft_length:n=null,power:a=1,center:o=!0,pad_mode:l="reflect",onesided:u=!0,preemphasis:d=null,mel_filters:c=null,mel_floor:p=1e-10,log_mel:h=null,reference:f=1,min_value:m=1e-10,db_range:_=null,remove_dc_offset:g=null,min_num_frames:y=null,max_num_frames:w=null,do_pad:b=!0,transpose:x=!1}={}){let v=r.length;if(null===n&&(n=s),s>n)throw Error(`frame_length (${s}) may not be larger than fft_length (${n})`);if(v!==s)throw Error(`Length of the window (${v}) must equal frame_length (${s})`);if(i<=0)throw Error("hop_length must be greater than zero");if(null===a&&null!==c)throw Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(o){if("reflect"!==l)throw Error(`pad_mode="${l}" not implemented yet.`);let r=Math.floor((n-1)/2)+1;t=function(t,r,s){let i=new t.constructor(t.length+r+s),n=t.length-1;for(let s=0;s<t.length;++s)i[r+s]=t[s];for(let s=1;s<=r;++s)i[r-s]=t[ee(s,n)];for(let a=1;a<=s;++a)i[n+r+a]=t[ee(n-a,n)];return i}(t,r,r)}let $=Math.floor(1+Math.floor((t.length-s)/i));null!==y&&$<y&&($=y);let k=u?Math.floor(n/2)+1:n,E=$,S=$;null!==w&&(w>$?b&&(S=w):S=E=w);let T=new ex(n),I=new Float64Array(n),z=new Float64Array(T.outputBufferSize),A=new Float32Array(k*S);for(let n=0;n<E;++n){let a=n*i,o=Math.min(t.length-a,s);o!==s&&I.fill(0,0,s);for(let r=0;r<o;++r)I[r]=t[a+r];if(g){let t=0;for(let r=0;r<o;++r)t+=I[r];let r=t/o;for(let t=0;t<o;++t)I[t]-=r}if(null!==d){for(let t=o-1;t>=1;--t)I[t]-=d*I[t-1];I[0]*=1-d}for(let t=0;t<r.length;++t)I[t]*=r[t];T.realTransform(z,I);for(let t=0;t<k;++t){let r=t<<1;A[t*S+n]=z[r]**2+z[r+1]**2}}if(null!==a&&2!==a){let t=2/a;for(let r=0;r<A.length;++r)A[r]**=t}let C=c.length,M=await eV(new eN("float32",c.flat(),[C,k]),new eN("float32",A,[k,S]));x&&(M=M.transpose(1,0));let O=M.data;for(let t=0;t<O.length;++t)O[t]=Math.max(p,O[t]);if(null!==a&&null!==h){let t=Math.min(O.length,E*C);switch(h){case"log":for(let r=0;r<t;++r)O[r]=Math.log(O[r]);break;case"log10":for(let r=0;r<t;++r)O[r]=Math.log10(O[r]);break;case"dB":if(1===a)!function(t,r=1,s=1e-5,i=null){d6(t,20,r,s,i)}(O,f,m,_);else if(2===a)!function(t,r=1,s=1e-10,i=null){d6(t,10,r,s,i)}(O,f,m,_);else throw Error(`Cannot use log_mel option '${h}' with power ${a}`);break;default:throw Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${h}'`)}}return M}function d5(t,r,{periodic:s=!0,frame_length:i=null,center:n=!0}={}){let a,o=s?t+1:t;switch(r){case"boxcar":a=new Float64Array(o).fill(1);break;case"hann":case"hann_window":a=dJ(o,.5);break;case"hamming":a=dJ(o,.54);break;case"povey":a=dJ(o,.5).map(t=>Math.pow(t,.85));break;default:throw Error(`Unknown window type ${r}.`)}if(s&&(a=a.subarray(0,t)),null===i)return a;if(t>i)throw Error(`Length of the window (${t}) may not be larger than frame_length (${i})`);return a}function d9(t,r,s){for(let i=0;i<s.length;++i)t.setUint8(r+i,s.charCodeAt(i))}class d7{constructor(t,r){this.audio=t,this.sampling_rate=r}toWav(){return function(t,r){let s=44,i=new ArrayBuffer(44+4*t.length),n=new DataView(i);d9(n,0,"RIFF"),n.setUint32(4,36+4*t.length,!0),d9(n,8,"WAVE"),d9(n,12,"fmt "),n.setUint32(16,16,!0),n.setUint16(20,3,!0),n.setUint16(22,1,!0),n.setUint32(24,r,!0),n.setUint32(28,4*r,!0),n.setUint16(32,4,!0),n.setUint16(34,32,!0),d9(n,36,"data"),n.setUint32(40,4*t.length,!0);for(let r=0;r<t.length;++r,s+=4)n.setFloat32(s,t[r],!0);return i}(this.audio,this.sampling_rate)}toBlob(){return new Blob([this.toWav()],{type:"audio/wav"})}async save(t){let r;if(V.IS_BROWSER_ENV){if(V.IS_WEBWORKER_ENV)throw Error("Unable to save a file from a Web Worker.");r=et}else if(V.IS_FS_AVAILABLE)r=async(t,r)=>{let s=await r.arrayBuffer();o(x).writeFileSync(t,dy.from(s))};else throw Error("Unable to save because filesystem is disabled in this environment.");await r(t,this.toBlob())}}class ce extends dn{constructor(t){super(t);let r=this.config.sampling_rate,s=d4(257,this.config.num_mel_bins,20,Math.floor(r/2),r,null,"kaldi",!0);this.mel_filters=s,this.window=d5(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(t,r){return d8(t,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:r,transpose:!0})}async _call(t){da(t,"ASTFeatureExtractor");let r=await this._extract_fbank_features(t,this.config.max_length);if(this.config.do_normalize){let t=2*this.std,s=r.data;for(let r=0;r<s.length;++r)s[r]=(s[r]-this.mean)/t}return{input_values:r.unsqueeze_(0)}}}var ct={};u(ct,"EncodecFeatureExtractor",()=>cr);class cr extends dn{async _call(t){da(t,"EncodecFeatureExtractor"),t instanceof Float64Array&&(t=new Float32Array(t));let r=this.config.feature_size;if(t.length%r!=0)throw Error(`The length of the audio data must be a multiple of the number of channels (${r}).`);let s=[1,r,t.length/r];return{input_values:new eN("float32",t,s)}}}var cs={};u(cs,"ClapFeatureExtractor",()=>ci);class ci extends dn{constructor(t){super(t),this.mel_filters=d4(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=d4(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=d5(this.config.fft_window_size,"hann")}async _get_input_mel(t,r,s,i){let n,a=t.length-r;if(a>0)if("rand_trunc"===s){let s=Math.floor(Math.random()*(a+1));t=t.subarray(s,s+r),n=await this._extract_fbank_features(t,this.mel_filters_slaney,this.config.nb_max_samples)}else throw Error(`Truncation strategy "${s}" not implemented`);else{if(a<0){let s=new Float64Array(r);if(s.set(t),"repeat"===i)for(let i=t.length;i<r;i+=t.length)s.set(t.subarray(0,Math.min(t.length,r-i)),i);else if("repeatpad"===i)for(let r=t.length;r<-a;r+=t.length)s.set(t,r);t=s}if("fusion"===s)throw Error(`Truncation strategy "${s}" not implemented`);n=await this._extract_fbank_features(t,this.mel_filters_slaney,this.config.nb_max_samples)}return n.unsqueeze_(0)}async _extract_fbank_features(t,r,s=null){return d8(t,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:r,log_mel:"dB",max_num_frames:s,do_pad:!1,transpose:!0})}async _call(t,{max_length:r=null}={}){return da(t,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(t,r??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}var cn={};u(cn,"DacFeatureExtractor",()=>ca);class ca extends cr{}var co={};u(co,"MoonshineFeatureExtractor",()=>cl);class cl extends dn{async _call(t){da(t,"MoonshineFeatureExtractor"),t instanceof Float64Array&&(t=new Float32Array(t));let r=[1,t.length];return{input_values:new eN("float32",t,r)}}}var cu={};u(cu,"PyAnnoteFeatureExtractor",()=>cd);class cd extends dn{async _call(t){da(t,"PyAnnoteFeatureExtractor"),t instanceof Float64Array&&(t=new Float32Array(t));let r=[1,1,t.length];return{input_values:new eN("float32",t,r)}}samples_to_frames(t){return(t-this.config.offset)/this.config.step}post_process_speaker_diarization(t,r){let s=r/this.samples_to_frames(r)/this.config.sampling_rate,i=[];for(let r of t.tolist()){let t=[],n=-1;for(let s=0;s<r.length;++s){let[i,a]=eg(em(r[s])),[o,l]=[s,s+1];a!==n?(n=a,t.push({id:a,start:o,end:l,score:i})):(t.at(-1).end=l,t.at(-1).score+=i)}i.push(t.map(({id:t,start:r,end:i,score:n})=>({id:t,start:r*s,end:i*s,confidence:n/(i-r)})))}return i}}var cc={};u(cc,"SeamlessM4TFeatureExtractor",()=>cp);class cp extends dn{constructor(t){super(t);let r=this.config.sampling_rate,s=d4(257,this.config.num_mel_bins,20,Math.floor(r/2),r,null,"kaldi",!0);this.mel_filters=s,this.window=d5(400,"povey",{periodic:!1})}async _extract_fbank_features(t,r){return d8(t=t.map(t=>32768*t),this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:r,transpose:!0})}async _call(t,{padding:r=!0,pad_to_multiple_of:s=2,do_normalize_per_mel_bins:i=!0,return_attention_mask:n=!0}={}){let a;da(t,"SeamlessM4TFeatureExtractor");let o=await this._extract_fbank_features(t,this.config.max_length);if(i){let[t,r]=o.dims,s=o.data;for(let i=0;i<r;++i){let n=0;for(let a=0;a<t;++a)n+=s[a*r+i];let a=n/t,o=0;for(let n=0;n<t;++n)o+=(s[n*r+i]-a)**2;let l=Math.sqrt((o/=t-1)+1e-7);for(let n=0;n<t;++n){let t=n*r+i;s[t]=(s[t]-a)/l}}}if(r){let[t,r]=o.dims,i=o.data,l=t%s;if(l>0){let s=new Float32Array(r*(t+l));s.set(i),s.fill(this.config.padding_value,i.length);let u=t+l;o=new eN(o.type,s,[u,r]),n&&(a=new eN("int64",new BigInt64Array(u),[1,u])).data.fill(1n,0,t)}}let[l,u]=o.dims,d=this.config.stride;if(0!=l%d)throw Error(`The number of frames (${l}) must be a multiple of the stride (${d}).`);let c=o.view(1,Math.floor(l/d),u*d),p={input_features:c};if(n){let t=c.dims[1],r=new BigInt64Array(t);if(a){let t=a.data;for(let s=1,i=0;s<l;s+=d,++i)r[i]=t[s]}else r.fill(1n);p.attention_mask=new eN("int64",r,[1,t])}return p}}var ch={};u(ch,"SnacFeatureExtractor",()=>cf);class cf extends ca{}var cm={};u(cm,"SpeechT5FeatureExtractor",()=>c_);class c_ extends dn{}var cg={};u(cg,"Wav2Vec2FeatureExtractor",()=>cy);class cy extends dn{_zero_mean_unit_var_norm(t){let r=t.reduce((t,r)=>t+r,0)/t.length,s=t.reduce((t,s)=>t+(s-r)**2,0)/t.length;return t.map(t=>(t-r)/Math.sqrt(s+1e-7))}async _call(t){da(t,"Wav2Vec2FeatureExtractor"),t instanceof Float64Array&&(t=new Float32Array(t));let r=t;this.config.do_normalize&&(r=this._zero_mean_unit_var_norm(r));let s=[1,r.length];return{input_values:new eN("float32",r,s),attention_mask:new eN("int64",new BigInt64Array(r.length).fill(1n),s)}}}var cw={};u(cw,"WeSpeakerFeatureExtractor",()=>cb);class cb extends dn{constructor(t){super(t);let r=this.config.sampling_rate,s=d4(257,this.config.num_mel_bins,20,Math.floor(r/2),r,null,"kaldi",!0);this.mel_filters=s,this.window=d5(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(t){return d8(t=t.map(t=>32768*t),this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(t){da(t,"WeSpeakerFeatureExtractor");let r=(await this._extract_fbank_features(t)).unsqueeze_(0);if(null===this.config.fbank_centering_span){let t=r.mean(1).data,s=r.data,[i,n,a]=r.dims;for(let r=0;r<i;++r){let i=r*n*a,o=r*a;for(let r=0;r<n;++r){let n=i+r*a;for(let r=0;r<a;++r)s[n+r]-=t[o+r]}}}return{input_features:r}}}var cx={};u(cx,"WhisperFeatureExtractor",()=>cv);class cv extends dn{constructor(t){super(t),this.config.mel_filters??=d4(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney"),this.window=d5(this.config.n_fft,"hann")}async _extract_fbank_features(t){let r=await d8(t,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:Math.min(Math.floor(t.length/this.config.hop_length),this.config.nb_max_frames)}),s=r.data,i=eg(s)[0];for(let t=0;t<s.length;++t)s[t]=(Math.max(s[t],i-8)+4)/4;return r}async _call(t,{max_length:r=null}={}){let s;da(t,"WhisperFeatureExtractor");let i=r??this.config.n_samples;return t.length>i?(t.length>this.config.n_samples&&console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),s=t.slice(0,i)):(s=new Float32Array(i)).set(t),{input_features:(await this._extract_fbank_features(s)).unsqueeze_(0)}}}l(dl,du),l(dl,ct),l(dl,cs),l(dl,cn),l(dl,co),l(dl,cu),l(dl,cc),l(dl,ch),l(dl,cm),l(dl,cg),l(dl,cw),l(dl,cx);class c${static async from_pretrained(t,r={}){let s=await ep(t,s0,!0,r),i=s.feature_extractor_type,n=dl[i];if(!n)throw Error(`Unknown feature_extractor_type: '${i}'. Please report this at ${sJ}.`);return new n(s)}}class ck extends lc{static tokenizer_class=sV;static feature_extractor_class=c$;async _call(t){return await this.feature_extractor(t)}}var cE={};u(cE,"OwlViTProcessor",()=>cS);class cS extends lc{static tokenizer_class=sV;static image_processor_class=u1}var cT={};u(cT,"Phi3VProcessor",()=>cA);const cI="<|image|>",cz=/<\|image_\d+\|>/g;class cA extends lc{static image_processor_class=u1;static tokenizer_class=sV;async _call(t,r=null,{padding:s=!0,truncation:i=!0,num_crops:n=null}={}){let a,o;if(Array.isArray(t)||(t=[t]),r){let{num_img_tokens:l}=o=await this.image_processor(r,{num_crops:n}),u=t.map((t,r)=>t.split(cz).join(cI.repeat(l[r])));a=this.tokenizer(u,{padding:s,truncation:i});let d=this.tokenizer.model.convert_tokens_to_ids([cI])[0];a.input_ids.map_(t=>t==d?-t:t)}else a=this.tokenizer(t);return{...a,...o}}}var cC={};u(cC,"PaliGemmaProcessor",()=>cO);const cM="<image>";class cO extends lc{static tokenizer_class=sV;static image_processor_class=u1;static uses_processor_config=!1;async _call(t,r=null,s={}){let i;r||(console.warn("You are using PaliGemma without a text prefix. It will perform as a picture-captioning model."),r=""),Array.isArray(t)||(t=[t]),Array.isArray(r)||(r=[r]);let n=this.tokenizer.bos_token,a=this.image_processor.config.image_seq_length;r.some(t=>t.includes(cM))?i=r.map(t=>{let r=t.replaceAll(cM,cM.repeat(a)),s=r.lastIndexOf(cM),i=-1===s?0:s+cM.length;return r.slice(0,i)+n+r.slice(i)+"\n"}):(console.warn("You are passing both `text` and `images` to `PaliGemmaProcessor`. The processor expects special image tokens in the text, as many tokens as there are images per each text. It is recommended to add `<image>` tokens in the very beginning of your text. For this call, we will infer how many images each text has and add special tokens."),i=r.map(r=>{var s;return s=t.length,`${cM.repeat(a*s)}${n}${r}
`}));let o=this.tokenizer(i,s);return{...await this.image_processor(t,s),...o}}}var cB={};u(cB,"PyAnnoteProcessor",()=>cR);class cR extends lc{static feature_extractor_class=cd;async _call(t){return await this.feature_extractor(t)}post_process_speaker_diarization(...t){return this.feature_extractor.post_process_speaker_diarization(...t)}get sampling_rate(){return this.feature_extractor.config.sampling_rate}}var cP={};u(cP,"Qwen2VLProcessor",()=>cL);class cL extends lc{static image_processor_class=u1;static tokenizer_class=sV;async _call(t,r=null,...s){let i,n;if(Array.isArray(t)||(t=[t]),r&&(n=(i=await this.image_processor(r)).image_grid_thw),n){let r=this.image_processor.config.merge_size**2,s=0,i=n.tolist();t=t.map(t=>{for(;t.includes("<|image_pad|>");){let n=Number(i[s++].reduce((t,r)=>t*r,1n));t=t.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(n/r)))}return t.replaceAll("<|placeholder|>","<|image_pad|>")})}return{...this.tokenizer(t),...i}}}var cD={};u(cD,"SamProcessor",()=>cU);class cU extends lc{static image_processor_class=u1;async _call(...t){return await this.image_processor(...t)}post_process_masks(...t){return this.image_processor.post_process_masks(...t)}reshape_input_points(...t){return this.image_processor.reshape_input_points(...t)}}var cN={};u(cN,"SmolVLMProcessor",()=>u8);var cF={};u(cF,"SpeechT5Processor",()=>cq);class cq extends lc{static tokenizer_class=sV;static feature_extractor_class=c$;async _call(t){return await this.feature_extractor(t)}}var cV={};u(cV,"UltravoxProcessor",()=>cj);class cj extends lc{static tokenizer_class=sV;static feature_extractor_class=c$;static uses_processor_config=!0;async _call(t,r=null,s={}){if(Array.isArray(t))throw Error("Batched inputs are not supported yet.");let i={};if(r){let n=r.length,{input_features:a}=await this.feature_extractor(r,{...s,max_length:n}),o=1+Math.ceil(Math.round(n/this.config.encoder_ds_factor+1e-4)/this.config.stack_factor);i.audio_token_len=[o],i.audio_values=a;let l=this.config.audio_placeholder;if(!t.includes(l))throw Error(`The input text does not contain the image token ${l}.`);t=t.replaceAll(l,l.repeat(o))}return{...this.tokenizer(t,{add_special_tokens:!1,...s}),...i}}}var cG={};u(cG,"Wav2Vec2Processor",()=>cW);class cW extends lc{static tokenizer_class=sV;static feature_extractor_class=c$;async _call(t){return await this.feature_extractor(t)}}var cH={};u(cH,"Wav2Vec2ProcessorWithLM",()=>cK);class cK extends lc{static tokenizer_class=sV;static feature_extractor_class=c$;async _call(t){return await this.feature_extractor(t)}}var cX={};u(cX,"WhisperProcessor",()=>cY);class cY extends lc{static tokenizer_class=sV;static feature_extractor_class=c$;async _call(t){return await this.feature_extractor(t)}}l(lp,lh),l(lp,u3),l(lp,u6),l(lp,u5),l(lp,u7),l(lp,dt),l(lp,di),l(lp,cE),l(lp,cT),l(lp,cC),l(lp,cB),l(lp,cP),l(lp,cD),l(lp,cN),l(lp,cF),l(lp,cV),l(lp,cG),l(lp,cH),l(lp,cX);class cQ{static async from_pretrained(t,r={}){let s=await ep(t,s0,!0,r),{image_processor_type:i,feature_extractor_type:n,processor_class:a}=s;if(a&&lp[a])return lp[a].from_pretrained(t,r);if(!i&&!n)throw Error("No `image_processor_type` or `feature_extractor_type` found in the config.");let o={};if(i){let t=lx[i];if(!t)throw Error(`Unknown image_processor_type: '${i}'.`);o.image_processor=new t(s)}if(n){let t=lx[n];if(t)o.image_processor=new t(s);else{let t=dl[n];if(!t)throw Error(`Unknown feature_extractor_type: '${n}'.`);o.feature_extractor=new t(s)}}return new lc({},o)}}async function cZ(t){return Array.isArray(t)||(t=[t]),await Promise.all(t.map(t=>ip.read(t)))}async function cJ(t,r){return Array.isArray(t)||(t=[t]),await Promise.all(t.map(t=>"string"==typeof t||t instanceof URL?dZ(t,r):t instanceof Float64Array?new Float32Array(t):t))}function c0(t,r){r&&(t=t.map(t=>0|t));let[s,i,n,a]=t;return{xmin:s,ymin:i,xmax:n,ymax:a}}class c1 extends Y{constructor({task:t,model:r,tokenizer:s=null,processor:i=null}){super(),this.task=t,this.model=r,this.tokenizer=s,this.processor=i}async dispose(){await this.model.dispose()}}class c2 extends c1{_key="generated_text";constructor(t){super(t)}async _call(t,r={}){let s;Array.isArray(t)||(t=[t]),this.model.config.prefix&&(t=t.map(t=>this.model.config.prefix+t));let i=this.model.config.task_specific_params;i&&i[this.task]&&i[this.task].prefix&&(t=t.map(t=>i[this.task].prefix+t));let n=this.tokenizer,a={padding:!0,truncation:!0};s=this instanceof c3&&"_build_translation_inputs"in n?n._build_translation_inputs(t,a,r):n(t,a);let o=await this.model.generate({...s,...r});return n.batch_decode(o,{skip_special_tokens:!0}).map(t=>({[this._key]:t}))}}class c3 extends c2{_key="translation_text";constructor(t){super(t)}}function c4(t){return Array.isArray(t)&&t.every(t=>"role"in t&&"content"in t)}class c6 extends c1{constructor(t){super(t),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(t,{threshold:r=.5,mask_threshold:s=.5,overlap_mask_area_threshold:i=.8,label_ids_to_fuse:n=null,target_sizes:a=null,subtask:o=null}={}){if(Array.isArray(t)&&1!==t.length)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");let l=await cZ(t),u=l.map(t=>[t.height,t.width]),d=await this.processor(l),{inputNames:c,outputNames:p}=this.model.sessions.model;if(!c.includes("pixel_values")){if(1!==c.length)throw Error(`Expected a single input name, but got ${c.length} inputs: ${c}.`);let t=c[0];if(t in d)throw Error(`Input name ${t} already exists in the inputs.`);d[t]=d.pixel_values}let h=await this.model(d),f=null;if(null!==o)f=this.subtasks_mapping[o];else if(this.processor.image_processor){for(let[t,r]of Object.entries(this.subtasks_mapping))if(r in this.processor.image_processor){f=this.processor.image_processor[r].bind(this.processor.image_processor),o=t;break}}let m=this.model.config.id2label,_=[];if(o)if("panoptic"===o||"instance"===o){let t=f(h,r,s,i,n,a??u)[0],o=t.segmentation;for(let r of t.segments_info){let t=new Uint8ClampedArray(o.data.length);for(let s=0;s<o.data.length;++s)o.data[s]===r.id&&(t[s]=255);let s=new ip(t,o.dims[1],o.dims[0],1);_.push({score:r.score,label:m[r.label_id],mask:s})}}else if("semantic"===o){let{segmentation:t,labels:r}=f(h,a??u)[0];for(let s of r){let r=new Uint8ClampedArray(t.data.length);for(let i=0;i<t.data.length;++i)t.data[i]===s&&(r[i]=255);let i=new ip(r,t.dims[1],t.dims[0],1);_.push({score:null,label:m[s],mask:i})}}else throw Error(`Subtask ${o} not supported.`);else{let t=h[p[0]];for(let r=0;r<u.length;++r){let s=u[r],i=t[r];i.data.some(t=>t<-1e-5||t>1.00001)&&i.sigmoid_();let n=await ip.fromTensor(i.mul_(255).to("uint8")).resize(s[1],s[0]);_.push({label:null,score:null,mask:n})}}return _}}Object.freeze({"text-classification":{tokenizer:sV,pipeline:class extends c1{constructor(t){super(t)}async _call(t,{top_k:r=1}={}){let s=this.tokenizer(t,{padding:!0,truncation:!0}),i=await this.model(s),n="multi_label_classification"===this.model.config.problem_type?t=>t.sigmoid():t=>new eN("float32",em(t.data),t.dims),a=this.model.config.id2label,o=[];for(let t of i.logits){let s=n(t),i=await ej(s,r),l=i[0].tolist(),u=i[1].tolist().map((t,r)=>({label:a?a[t]:`LABEL_${t}`,score:l[r]}));1===r?o.push(...u):o.push(u)}return Array.isArray(t)||1===r?o:o[0]}},model:o9,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:sV,pipeline:class extends c1{constructor(t){super(t)}async _call(t,{ignore_labels:r=["O"]}={}){let s=Array.isArray(t),i=this.tokenizer(s?t:[t],{padding:!0,truncation:!0}),n=(await this.model(i)).logits,a=this.model.config.id2label,o=[];for(let t=0;t<n.dims[0];++t){let s=i.input_ids[t],l=n[t],u=[];for(let t=0;t<l.dims[0];++t){let i=l[t],n=eg(i.data)[1],o=a?a[n]:`LABEL_${n}`;if(r.includes(o))continue;let d=this.tokenizer.decode([s[t].item()],{skip_special_tokens:!0});if(""===d)continue;let c=em(i.data);u.push({entity:o,score:c[n],index:t,word:d})}o.push(u)}return s?o:o[0]}},model:class extends ov{static MODEL_CLASS_MAPPINGS=[oC]},default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:sV,pipeline:class extends c1{constructor(t){super(t)}async _call(t,r,{top_k:s=1}={}){let i=this.tokenizer(t,{text_pair:r,padding:!0,truncation:!0}),{start_logits:n,end_logits:a}=await this.model(i),o=i.input_ids.tolist(),l=i.attention_mask.tolist(),u=this.tokenizer.all_special_ids,d=[];for(let t=0;t<n.dims[0];++t){let r=o[t],i=r.findIndex(t=>t==this.tokenizer.sep_token_id);l[t].map((t,s)=>1==t&&(0===s||s>i&&-1===u.findIndex(t=>t==r[s])));let c=n[t].tolist(),p=a[t].tolist();for(let s=1;s<c.length;++s)(0==l[t]||s<=i||-1!==u.findIndex(t=>t==r[s]))&&(c[s]=-1/0,p[s]=-1/0);let h=em(c).map((t,r)=>[t,r]),f=em(p).map((t,r)=>[t,r]);h[0][0]=0,f[0][0]=0;let m=(function(...t){return t.reduce((t,r)=>t.flatMap(t=>r.map(r=>[t,r])))})(h,f).filter(t=>t[0][1]<=t[1][1]).map(t=>[t[0][1],t[1][1],t[0][0]*t[1][0]]).sort((t,r)=>r[2]-t[2]);for(let t=0;t<Math.min(m.length,s);++t){let[s,i,n]=m[t],a=r.slice(s,i+1),o=this.tokenizer.decode(a,{skip_special_tokens:!0});d.push({answer:o,score:n})}}return 1===s?d[0]:d}},model:class extends ov{static MODEL_CLASS_MAPPINGS=[oP]},default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:sV,pipeline:class extends c1{constructor(t){super(t)}async _call(t,{top_k:r=5}={}){let s=this.tokenizer(t,{padding:!0,truncation:!0}),{logits:i}=await this.model(s),n=[],a=s.input_ids.tolist();for(let t=0;t<a.length;++t){let s=a[t],o=s.findIndex(t=>t==this.tokenizer.mask_token_id);if(-1===o)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);let l=i[t][o],u=await ej(new eN("float32",em(l.data),l.dims),r),d=u[0].tolist(),c=u[1].tolist();n.push(c.map((t,r)=>{let i=s.slice();return i[o]=t,{score:d[r],token:Number(t),token_str:this.tokenizer.decode([t]),sequence:this.tokenizer.decode(i,{skip_special_tokens:!0})}}))}return Array.isArray(t)?n:n[0]}},model:class extends ov{static MODEL_CLASS_MAPPINGS=[oR]},default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:sV,pipeline:class extends c2{_key="summary_text";constructor(t){super(t)}},model:o7,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:sV,pipeline:c3,model:o7,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:sV,pipeline:c2,model:o7,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:sV,pipeline:class extends c1{constructor(t){super(t)}async _call(t,r={}){let s,i,n=!1,a=!1;if("string"==typeof t)s=t=[t];else if(Array.isArray(t)&&t.every(t=>"string"==typeof t))n=!0,s=t;else{if(c4(t))t=[t];else if(Array.isArray(t)&&t.every(c4))n=!0;else throw Error("Input must be a string, an array of strings, a Chat, or an array of Chats");a=!0,s=t.map(t=>this.tokenizer.apply_chat_template(t,{tokenize:!1,add_generation_prompt:!0}))}let o=r.add_special_tokens??!1,l=!a&&(r.return_full_text??!0);this.tokenizer.padding_side="left";let u=this.tokenizer(s,{add_special_tokens:o,padding:!0,truncation:!0}),d=await this.model.generate({...u,...r}),c=this.tokenizer.batch_decode(d,{skip_special_tokens:!0});!l&&u.input_ids.dims.at(-1)>0&&(i=this.tokenizer.batch_decode(u.input_ids,{skip_special_tokens:!0}).map(t=>t.length));let p=Array.from({length:t.length},t=>[]);for(let r=0;r<c.length;++r){let s=Math.floor(r/d.dims[0]*t.length);i&&(c[r]=c[r].slice(i[s])),p[s].push({generated_text:a?[...t[s],{role:"assistant",content:c[r]}]:c[r]})}return n||1!==p.length?p:p[0]}},model:class extends ov{static MODEL_CLASS_MAPPINGS=[oO]},default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:sV,pipeline:class extends c1{constructor(t){super(t),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([t,r])=>[t.toLowerCase(),r])),this.entailment_id=this.label2id.entailment,void 0===this.entailment_id&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,void 0===this.contradiction_id&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(t,r,{hypothesis_template:s="This example is {}.",multi_label:i=!1}={}){let n=Array.isArray(t);n||(t=[t]),Array.isArray(r)||(r=[r]);let a=r.map(t=>s.replace("{}",t)),o=i||1===r.length,l=[];for(let s of t){let t=[];for(let r of a){let i=this.tokenizer(s,{text_pair:r,padding:!0,truncation:!0}),n=await this.model(i);o?t.push([n.logits.data[this.contradiction_id],n.logits.data[this.entailment_id]]):t.push(n.logits.data[this.entailment_id])}let i=(o?t.map(t=>em(t)[1]):em(t)).map((t,r)=>[t,r]).sort((t,r)=>r[0]-t[0]);l.push({sequence:s,labels:i.map(t=>r[t[1]]),scores:i.map(t=>t[0])})}return n?l:l[0]}},model:o9,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:class extends c1{constructor(t){super(t)}async _call(t,{top_k:r=5}={}){let s=this.processor.feature_extractor.config.sampling_rate,i=await cJ(t,s),n=this.model.config.id2label,a=[];for(let t of i){let s=await this.processor(t),i=(await this.model(s)).logits[0],o=await ej(new eN("float32",em(i.data),i.dims),r),l=o[0].tolist(),u=o[1].tolist().map((t,r)=>({label:n?n[t]:`LABEL_${t}`,score:l[r]}));a.push(u)}return Array.isArray(t)?a:a[0]}},model:class extends ov{static MODEL_CLASS_MAPPINGS=[oX]},processor:cQ,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:sV,pipeline:class extends c1{constructor(t){super(t)}async _call(t,r,{hypothesis_template:s="This is a sound of {}."}={}){let i=!Array.isArray(t);i&&(t=[t]);let n=r.map(t=>s.replace("{}",t)),a=this.tokenizer(n,{padding:!0,truncation:!0}),o=this.processor.feature_extractor.config.sampling_rate,l=await cJ(t,o),u=[];for(let t of l){let s=await this.processor(t),i=em((await this.model({...a,...s})).logits_per_audio.data);u.push([...i].map((t,s)=>({score:t,label:r[s]})))}return i?u[0]:u}},model:o5,processor:cQ,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:sV,pipeline:class extends c1{constructor(t){super(t)}async _call(t,r={}){switch(this.model.config.model_type){case"whisper":case"lite-whisper":return this._call_whisper(t,r);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(t,r);case"moonshine":return this._call_moonshine(t,r);default:throw Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(t,r){r.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),r.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');let s=!Array.isArray(t);s&&(t=[t]);let i=this.processor.feature_extractor.config.sampling_rate,n=await cJ(t,i),a=[];for(let t of n){let r=await this.processor(t),s=(await this.model(r)).logits[0],i=[];for(let t of s)i.push(eg(t.data)[1]);let n=this.tokenizer.decode(i);a.push({text:n})}return s?a[0]:a}async _call_whisper(t,r){let s=r.return_timestamps??!1,i=r.chunk_length_s??0,n=r.force_full_sequences??!1,a=r.stride_length_s??null,o={...r};"word"===s&&(o.return_token_timestamps=!0,o.return_timestamps=!1);let l=!Array.isArray(t);l&&(t=[t]);let u=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,d=this.processor.feature_extractor.config.hop_length,c=this.processor.feature_extractor.config.sampling_rate,p=await cJ(t,c),h=[];for(let t of p){let r=[];if(i>0){if(null===a)a=i/6;else if(i<=a)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");let s=c*i,n=c*a,o=s-2*n,l=0;for(;;){let i=l+s,a=t.subarray(l,i),u=await this.processor(a),d=0===l,c=i>=t.length;if(r.push({stride:[a.length,d?0:n,c?0:n],input_features:u.input_features,is_last:c}),c)break;l+=o}}else r=[{stride:[t.length,0,0],input_features:(await this.processor(t)).input_features,is_last:!0}];for(let t of r){o.num_frames=Math.floor(t.stride[0]/d);let r=await this.model.generate({inputs:t.input_features,...o});"word"===s?(t.tokens=r.sequences.tolist()[0],t.token_timestamps=r.token_timestamps.tolist()[0].map(t=>ev(t,2))):t.tokens=r[0].tolist(),t.stride=t.stride.map(t=>t/c)}let[l,p]=this.tokenizer._decode_asr(r,{time_precision:u,return_timestamps:s,force_full_sequences:n});h.push({text:l,...p})}return l?h[0]:h}async _call_moonshine(t,r){let s=!Array.isArray(t);s&&(t=[t]);let i=this.processor.feature_extractor.config.sampling_rate,n=await cJ(t,i),a=[];for(let t of n){let s=await this.processor(t),n=6*Math.floor(t.length/i),o=await this.model.generate({max_new_tokens:n,...r,...s}),l=this.processor.batch_decode(o,{skip_special_tokens:!0})[0];a.push({text:l})}return s?a[0]:a}},model:[class extends ov{static MODEL_CLASS_MAPPINGS=[oT]},class extends ov{static MODEL_CLASS_MAPPINGS=[oK]}],processor:cQ,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:sV,pipeline:class extends c1{DEFAULT_VOCODER_ID="Xenova/speecht5_hifigan";constructor(t){super(t),this.vocoder=t.vocoder??null}async _call(t,{speaker_embeddings:r=null}={}){return this.processor?this._call_text_to_spectrogram(t,{speaker_embeddings:r}):this._call_text_to_waveform(t)}async _call_text_to_waveform(t){let r=this.tokenizer(t,{padding:!0,truncation:!0}),{waveform:s}=await this.model(r),i=this.model.config.sampling_rate;return new d7(s.data,i)}async _call_text_to_spectrogram(t,{speaker_embeddings:r}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await o5.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),("string"==typeof r||r instanceof URL)&&(r=new Float32Array(await (await fetch(r)).arrayBuffer())),r instanceof Float32Array)r=new eN("float32",r,[1,r.length]);else if(!(r instanceof eN))throw Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");let{input_ids:s}=this.tokenizer(t,{padding:!0,truncation:!0}),{waveform:i}=await this.model.generate_speech(s,r,{vocoder:this.vocoder}),n=this.processor.feature_extractor.config.sampling_rate;return new d7(i.data,n)}},model:[class extends ov{static MODEL_CLASS_MAPPINGS=[oz]},class extends ov{static MODEL_CLASS_MAPPINGS=[oI]}],processor:[cQ,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:sV,pipeline:class extends c1{constructor(t){super(t)}async _call(t,r={}){let s=Array.isArray(t),i=await cZ(t),{pixel_values:n}=await this.processor(i),a=[];for(let t of n){t.dims=[1,...t.dims];let s=await this.model.generate({inputs:t,...r}),i=this.tokenizer.batch_decode(s,{skip_special_tokens:!0}).map(t=>({generated_text:t.trim()}));a.push(i)}return s?a:a[0]}},model:class extends ov{static MODEL_CLASS_MAPPINGS=[oL]},processor:cQ,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:class extends c1{constructor(t){super(t)}async _call(t,{top_k:r=5}={}){let s=await cZ(t),{pixel_values:i}=await this.processor(s),n=await this.model({pixel_values:i}),a=this.model.config.id2label,o=[];for(let t of n.logits){let s=await ej(new eN("float32",em(t.data),t.dims),r),i=s[0].tolist(),n=s[1].tolist().map((t,r)=>({label:a?a[t]:`LABEL_${t}`,score:i[r]}));o.push(n)}return Array.isArray(t)?o:o[0]}},model:class extends ov{static MODEL_CLASS_MAPPINGS=[oF]},processor:cQ,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:c6,model:[le,lt,lr],processor:cQ,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"background-removal":{pipeline:class extends c6{constructor(t){super(t)}async _call(t,r={}){if(Array.isArray(t)&&1!==t.length)throw Error("Background removal pipeline currently only supports a batch size of 1.");let s=await cZ(t),i=await super._call(t,r);return s.map((t,r)=>{let s=t.clone();return s.putAlpha(i[r].mask),s})}},model:[le,lt,lr],processor:cQ,default:{model:"Xenova/modnet"},type:"image"},"zero-shot-image-classification":{tokenizer:sV,pipeline:class extends c1{constructor(t){super(t)}async _call(t,r,{hypothesis_template:s="This is a photo of {}"}={}){let i=Array.isArray(t),n=await cZ(t),a=r.map(t=>s.replace("{}",t)),o=this.tokenizer(a,{padding:"siglip"!==this.model.config.model_type||"max_length",truncation:!0}),{pixel_values:l}=await this.processor(n),u=await this.model({...o,pixel_values:l}),d="siglip"===this.model.config.model_type?t=>t.sigmoid().data:t=>em(t.data),c=[];for(let t of u.logits_per_image){let s=[...d(t)].map((t,s)=>({score:t,label:r[s]}));s.sort((t,r)=>r.score-t.score),c.push(s)}return i?c:c[0]}},model:o5,processor:cQ,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:class extends c1{constructor(t){super(t)}async _call(t,{threshold:r=.9,percentage:s=!1}={}){let i=Array.isArray(t);if(i&&1!==t.length)throw Error("Object detection pipeline currently only supports a batch size of 1.");let n=await cZ(t),a=s?null:n.map(t=>[t.height,t.width]),{pixel_values:o,pixel_mask:l}=await this.processor(n),u=await this.model({pixel_values:o,pixel_mask:l}),d=this.processor.image_processor.post_process_object_detection(u,r,a),c=this.model.config.id2label,p=d.map(t=>t.boxes.map((r,i)=>({score:t.scores[i],label:c[t.classes[i]],box:c0(r,!s)})));return i?p:p[0]}},model:class extends ov{static MODEL_CLASS_MAPPINGS=[oq]},processor:cQ,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:sV,pipeline:class extends c1{constructor(t){super(t)}async _call(t,r,{threshold:s=.1,top_k:i=null,percentage:n=!1}={}){let a=Array.isArray(t),o=await cZ(t),l=this.tokenizer(r,{padding:!0,truncation:!0}),u=await this.processor(o),d=[];for(let t=0;t<o.length;++t){let a,c=o[t],p=n?null:[[c.height,c.width]],h=u.pixel_values[t].unsqueeze_(0),f=await this.model({...l,pixel_values:h});if("post_process_grounded_object_detection"in this.processor){let t=this.processor.post_process_grounded_object_detection(f,l.input_ids,{box_threshold:s,text_threshold:s,target_sizes:p})[0];a=t.boxes.map((r,s)=>({score:t.scores[s],label:t.labels[s],box:c0(r,!n)}))}else{let t=this.processor.image_processor.post_process_object_detection(f,s,p,!0)[0];a=t.boxes.map((s,i)=>({score:t.scores[i],label:r[t.classes[i]],box:c0(s,!n)}))}a.sort((t,r)=>r.score-t.score),null!==i&&(a=a.slice(0,i)),d.push(a)}return a?d:d[0]}},model:class extends ov{static MODEL_CLASS_MAPPINGS=[oV]},processor:cQ,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:sV,pipeline:class extends c1{constructor(t){super(t)}async _call(t,r,s={}){let i=(await cZ(t))[0],{pixel_values:n}=await this.processor(i),a=`<s_docvqa><s_question>${r}</s_question><s_answer>`,o=this.tokenizer(a,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,l=await this.model.generate({inputs:n,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:o,...s}),u=this.tokenizer.batch_decode(l)[0].match(/<s_answer>(.*?)<\/s_answer>/),d=null;return u&&u.length>=2&&(d=u[1].trim()),[{answer:d}]}},model:class extends ov{static MODEL_CLASS_MAPPINGS=[oN]},processor:cQ,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:class extends c1{constructor(t){super(t)}async _call(t){let r=await cZ(t),s=await this.processor(r),i=await this.model(s),n=[];for(let t of i.reconstruction){let r=t.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");n.push(ip.fromTensor(r))}return n.length>1?n:n[0]}},model:class extends ov{static MODEL_CLASS_MAPPINGS=[o0]},processor:cQ,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:class extends c1{constructor(t){super(t)}async _call(t){let r=await cZ(t),s=await this.processor(r),{predicted_depth:i}=await this.model(s),n=[];for(let t=0;t<r.length;++t){let s=i[t],[a,o]=s.dims.slice(-2),[l,u]=r[t].size,d=(await eq(s.view(1,1,a,o),{size:[u,l],mode:"bilinear"})).view(u,l),c=d.min().item(),p=d.max().item(),h=d.sub(c).div_(p-c).mul_(255).to("uint8").unsqueeze(0),f=ip.fromTensor(h);n.push({predicted_depth:d,depth:f})}return n.length>1?n:n[0]}},model:class extends ov{static MODEL_CLASS_MAPPINGS=[o1]},processor:cQ,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:sV,pipeline:class extends c1{constructor(t){super(t)}async _call(t,{pooling:r="none",normalize:s=!1,quantize:i=!1,precision:n="binary"}={}){let a=this.tokenizer(t,{padding:!0,truncation:!0}),o=await this.model(a),l=o.last_hidden_state??o.logits??o.token_embeddings;if("none"===r);else if("mean"===r)l=function(t,r){let s=t.data,i=r.data,n=[t.dims[0],t.dims[2]],a=new s.constructor(n[0]*n[1]),[o,l,u]=t.dims,d=0;for(let t=0;t<o;++t){let r=t*u*l;for(let n=0;n<u;++n){let o=0,c=0,p=t*l,h=r+n;for(let t=0;t<l;++t){let r=Number(i[p+t]);c+=r,o+=s[h+t*u]*r}let f=o/c;a[d++]=f}}return new eN(t.type,a,n)}(l,a.attention_mask);else if("cls"===r)l=l.slice(null,0);else throw Error(`Pooling method '${r}' not supported.`);return s&&(l=l.normalize(2,-1)),i&&(l=function(t,r){if(2!==t.dims.length)throw Error("The tensor must have 2 dimensions");if(t.dims.at(-1)%8!=0)throw Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(r))throw Error("The precision must be either 'binary' or 'ubinary'");let s="binary"===r,i=s?Int8Array:Uint8Array,n=t.data,a=new i(n.length/8);for(let t=0;t<n.length;++t){let r=+(n[t]>0),i=Math.floor(t/8),o=t%8;a[i]|=r<<7-o,s&&0===o&&(a[i]-=128)}return new eN(s?"int8":"uint8",a,[t.dims[0],t.dims[1]/8])}(l,n)),l}},model:o5,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:cQ,pipeline:class extends c1{constructor(t){super(t)}async _call(t,{pool:r=null}={}){let s,i=await cZ(t),{pixel_values:n}=await this.processor(i),a=await this.model({pixel_values:n});if(r){if(!("pooler_output"in a))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");s=a.pooler_output}else s=a.last_hidden_state??a.logits??a.image_embeds;return s}},model:[class extends ov{static MODEL_CLASS_MAPPINGS=[o4]},o5],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"}),V.IS_PROCESS_AVAILABLE||(t=>console.log(t));class c8{constructor(t){this.tensor=t,this._vector=null}get vector(){return this._vector||(this._vector=new Float32Array(this.tensor.data)),this._vector}normalize(){let t=Math.sqrt(this.vector.reduce((t,r)=>t+r*r,0));return new c8({data:new Float32Array(this.vector.map(r=>r/t)),dims:this.tensor.dims})}cosineSimilarity(t){let r=this.vector,s=t.vector;if(r.length!==s.length)throw Error("Embedding dimensions do not match.");return r.reduce((t,r,i)=>t+r*s[i],0)}}const c5=new class{processor;model;modelName;constructor(t){this.modelName=t}isLoaded(){return this.processor&&this.model}async load(t){this.isLoaded()||(this.processor=await cQ.from_pretrained(this.modelName),console.log("[CLIPVisionEmbedder]","Loaded processor!"),this.model=await nT.from_pretrained(this.modelName,{device:"webgpu",progress_callback:t}),console.log("[CLIPVisionEmbedder]","Loaded model '"+this.modelName+"'!"))}async embed(t){if(!this.isLoaded())throw Error("Embedder needs to be loaded before use!");let r=await ip.read(t),s=await this.processor(r),{image_embeds:i}=await this.model(s);return new c8(i)}async embedBatch(t,r){if(!this.isLoaded())throw Error("Embedder needs to be loaded before use!");let s=[];for(let[i,n]of Object.entries(t))s.push(await this.embed(n)),r&&r({status:"progress",current:i,total:t.length,progress:i/(t.length-1)*100});return r({status:"done",total:t.length}),s}async unload(){this.processor=null,console.log("[CLIPVisionEmbedder]","Unloaded processor!"),this.model=null,console.log("[CLIPVisionEmbedder]","Unloaded model!")}}("Xenova/clip-vit-large-patch14"),c9=new class{tokenizer;model;modelName;constructor(t){this.modelName=t}isLoaded(){return this.tokenizer&&this.model}async load(t){this.isLoaded()||(this.tokenizer=await sV.from_pretrained(this.modelName),console.log("[CLIPTextEmbedder]","Loaded tokenizer!"),this.model=await nS.from_pretrained(this.modelName,{device:"webgpu",progress_callback:t}),console.log("[CLIPTextEmbedder]","Loaded model '"+this.modelName+"'!"))}async embed(t){if(!this.isLoaded())throw Error("Embedder needs to be loaded before use!");let r=await this.tokenizer([t],{padding:!0,truncation:!0}),{text_embeds:s}=await this.model(r);return new c8(s)}async embedBatch(t,r){if(!this.isLoaded())throw Error("Embedder needs to be loaded before use!");let s=[];for(let[i,n]of Object.entries(t))s.push(await this.embed(n)),r&&r({status:"progress",current:i,total:t.length,progress:i/(t.length-1)*100});return r({status:"done",total:t.length}),s}async unload(){this.tokenizer=null,console.log("[CLIPTextEmbedder]","Unloaded processor!"),this.model=null,console.log("[CLIPTextEmbedder]","Unloaded model!")}}("Xenova/clip-vit-large-patch14");class c7{video;timestamp;imageBuffer;embedding;querySimilarity;constructor(t,r){this.video=t,this.timestamp=r}async extract(){if(!this.imageBuffer)return new Promise((t,r)=>{let s=document.createElement("canvas"),i=s.getContext("2d");this.video.onseeked=()=>{s.width=this.video.videoWidth,s.height=this.video.videoHeight,i.drawImage(this.video,0,0,s.width,s.height),s.toBlob(async s=>{if(!s)return r(Error("Failed to get blob"));this.imageBuffer=new Uint8Array(await s.arrayBuffer()),t()},"image/jpeg")},this.video.onerror=t=>r(Error("Video seek failed")),this.video.currentTime=this.timestamp})}async embed(){if(!this.imageBuffer)throw Error("Cannot embed frame before extracting!");this.embedding=await c5.embed(this.toBlob())}async compareToQuery(t){this.querySimilarity=this.embedding.cosineSimilarity(t)}toBlob(){if(!this.imageBuffer)throw Error("Cannot blob frame before extracting!");let t=new Blob([this.imageBuffer],{type:"image/jpeg"});return URL.createObjectURL(t)}}async function pe(){let t=document.createElement("input");return t.type="file",t.accept="video/*",await new Promise(r=>{t.onchange=()=>r(t.files[0]),t.click()})}async function pt(t,r,s){let i=[],n=Math.floor(t.duration)*r;for(let s=0;s<n;s++)i.push(new c7(t,s/r));return i}let pr=[];async function ps(){try{let t=await pe(),r=document.querySelector("#VIDEO_PREVIEW");await new Promise((s,i)=>{r.src=URL.createObjectURL(t),r.crossOrigin="anonymous",r.muted=!0,r.preload="auto",r.onloadedmetadata=()=>s(r),r.onerror=t=>i("Failed to load video.")})}catch(t){console.error(t)}pn()}let pi=0;async function pn(){let t=Math.random();pi=t;try{let r=document.querySelector("#VIDEO_PREVIEW"),s=document.querySelector("#VIDEO_FPS").value;if(s<=0)return;for(let[i,n]of(pr=await pt(r,s),Object.entries(pr))){await n.extract();let r=(i/(pr.length-1)*100|0).toFixed(2)||0;if(document.querySelector("#VIDEO_EXTRACT_STATE").innerHTML=`${i} / ${pr.length-1} (${r}%)...`,document.querySelector("#VIDEO_EXTRACT_BAR").value=r,pi!=t)return}for(let[r,s]of(document.querySelector("#VIDEO_EXTRACT_STATE").innerHTML="Done!",document.querySelector("#VIDEO_EXTRACT_BAR").value=100,Object.entries(pr))){await s.embed();let i=(r/(pr.length-1)*100|0).toFixed(2);if(document.querySelector("#VIDEO_ANALYZE_STATE").innerHTML=`${r} / ${pr.length-1} (${i}%)...`,document.querySelector("#VIDEO_ANALYZE_BAR").value=i,pi!=t)return}document.querySelector("#VIDEO_ANALYZE_STATE").innerHTML="Done!",document.querySelector("#VIDEO_ANALYZE_BAR").value=100}catch(t){console.error(t)}}async function pa(){let t=document.querySelector("#QUERY_INPUT").value;if(!t)return;document.querySelector("#QUERY_ANALYZE_STATE").innerHTML="Analyzing...",document.querySelector("#QUERY_ANALYZE_BAR").value=1;let r=await c9.embed(t);for(let[t,s]of(document.querySelector("#QUERY_ANALYZE_STATE").innerHTML="Analyzed!",document.querySelector("#QUERY_ANALYZE_BAR").value=100,document.querySelector("#QUERY_EXECUTE_STATE").innerHTML="Analyzing...",Object.entries(pr))){await s.compareToQuery(r);let i=(t/(pr.length-1)*100).toFixed(2);document.querySelector("#QUERY_EXECUTE_STATE").innerHTML=`${t} / ${pr.length-1} (${i}%)...`,document.querySelector("#QUERY_EXECUTE_BAR").value=i}document.querySelector("#QUERY_EXECUTE_STATE").innerHTML="Done!",document.querySelector("#QUERY_EXECUTE_BAR").value=100;let s=pr.sort((t,r)=>r.querySimilarity-t.querySimilarity);for(let t of(document.querySelector("#MATCHES").innerHTML="",s.slice(0,10)))document.querySelector("#MATCHES").innerHTML+=`<div onclick="document.querySelector('#VIDEO_PREVIEW').currentTime = ${t.timestamp}">
            <a>${t.timestamp} (${t.querySimilarity})</a>
            <img class="h-32" src="${t.toBlob()}"></img>
        </div>`;console.log(s)}async function po(){if(!navigator.gpu)return!1;try{let t=await navigator.gpu.requestAdapter();return await t.requestDevice(),!0}catch(t){return!1}}document.querySelector("#VIDEO_UPLOAD").addEventListener("click",ps),document.querySelector("#VIDEO_FPS").addEventListener("input",pn),document.querySelector("#QUERY_RUN").addEventListener("click",pa),async function(){document.querySelector("#SUPPORT_JAVASCRIPT").innerHTML="Present",document.querySelector("#SUPPORT_JAVASCRIPT").classList.add("!text-green-500"),await po()&&(document.querySelector("#SUPPORT_GPU").innerHTML="Present",document.querySelector("#SUPPORT_GPU").classList.add("!text-green-500"),document.querySelector("#SUPPORT").classList.add("hidden"),await c5.load(t=>{"done"==t.status&&(document.querySelector("#VISION_MODEL_STATE").innerHTML="Ready!"),"progress"==t.status&&(document.querySelector("#VISION_MODEL_STATE").innerHTML=`Downloading '${t.file}' (${(+t.progress).toFixed(2)}%)...`,document.querySelector("#VISION_MODEL_BAR").value=t.progress)}),await c9.load(t=>{"done"==t.status&&(document.querySelector("#TEXT_MODEL_STATE").innerHTML="Ready!"),"progress"==t.status&&(document.querySelector("#TEXT_MODEL_STATE").innerHTML=`Downloading '${t.file}' (${(+t.progress).toFixed(2)}%)...`,document.querySelector("#TEXT_MODEL_BAR").value=t.progress)}))}();
//# sourceMappingURL=ai-video-search.05a367e2.js.map
